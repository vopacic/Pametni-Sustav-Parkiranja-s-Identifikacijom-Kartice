
POPRAVAK.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00006784  080001c8  080001c8  000011c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000668  0800694c  0800694c  0000794c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08006fb4  08006fb4  0000800c  2**0
                  CONTENTS, READONLY
  4 .ARM          00000008  08006fb4  08006fb4  00007fb4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08006fbc  08006fbc  0000800c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08006fbc  08006fbc  00007fbc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08006fc0  08006fc0  00007fc0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         0000000c  20000000  08006fc4  00008000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000688  2000000c  08006fd0  0000800c  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000694  08006fd0  00008694  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  0000800c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00013df1  00000000  00000000  0000803c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00002d00  00000000  00000000  0001be2d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000012e0  00000000  00000000  0001eb30  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000ec9  00000000  00000000  0001fe10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0002391c  00000000  00000000  00020cd9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00017f13  00000000  00000000  000445f5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000d5d39  00000000  00000000  0005c508  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  00132241  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000050c0  00000000  00000000  00132284  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000066  00000000  00000000  00137344  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c8 <__do_global_dtors_aux>:
 80001c8:	b510      	push	{r4, lr}
 80001ca:	4c05      	ldr	r4, [pc, #20]	@ (80001e0 <__do_global_dtors_aux+0x18>)
 80001cc:	7823      	ldrb	r3, [r4, #0]
 80001ce:	b933      	cbnz	r3, 80001de <__do_global_dtors_aux+0x16>
 80001d0:	4b04      	ldr	r3, [pc, #16]	@ (80001e4 <__do_global_dtors_aux+0x1c>)
 80001d2:	b113      	cbz	r3, 80001da <__do_global_dtors_aux+0x12>
 80001d4:	4804      	ldr	r0, [pc, #16]	@ (80001e8 <__do_global_dtors_aux+0x20>)
 80001d6:	f3af 8000 	nop.w
 80001da:	2301      	movs	r3, #1
 80001dc:	7023      	strb	r3, [r4, #0]
 80001de:	bd10      	pop	{r4, pc}
 80001e0:	2000000c 	.word	0x2000000c
 80001e4:	00000000 	.word	0x00000000
 80001e8:	08006934 	.word	0x08006934

080001ec <frame_dummy>:
 80001ec:	b508      	push	{r3, lr}
 80001ee:	4b03      	ldr	r3, [pc, #12]	@ (80001fc <frame_dummy+0x10>)
 80001f0:	b11b      	cbz	r3, 80001fa <frame_dummy+0xe>
 80001f2:	4903      	ldr	r1, [pc, #12]	@ (8000200 <frame_dummy+0x14>)
 80001f4:	4803      	ldr	r0, [pc, #12]	@ (8000204 <frame_dummy+0x18>)
 80001f6:	f3af 8000 	nop.w
 80001fa:	bd08      	pop	{r3, pc}
 80001fc:	00000000 	.word	0x00000000
 8000200:	20000010 	.word	0x20000010
 8000204:	08006934 	.word	0x08006934

08000208 <__aeabi_drsub>:
 8000208:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 800020c:	e002      	b.n	8000214 <__adddf3>
 800020e:	bf00      	nop

08000210 <__aeabi_dsub>:
 8000210:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

08000214 <__adddf3>:
 8000214:	b530      	push	{r4, r5, lr}
 8000216:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800021a:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800021e:	ea94 0f05 	teq	r4, r5
 8000222:	bf08      	it	eq
 8000224:	ea90 0f02 	teqeq	r0, r2
 8000228:	bf1f      	itttt	ne
 800022a:	ea54 0c00 	orrsne.w	ip, r4, r0
 800022e:	ea55 0c02 	orrsne.w	ip, r5, r2
 8000232:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000236:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800023a:	f000 80e2 	beq.w	8000402 <__adddf3+0x1ee>
 800023e:	ea4f 5454 	mov.w	r4, r4, lsr #21
 8000242:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000246:	bfb8      	it	lt
 8000248:	426d      	neglt	r5, r5
 800024a:	dd0c      	ble.n	8000266 <__adddf3+0x52>
 800024c:	442c      	add	r4, r5
 800024e:	ea80 0202 	eor.w	r2, r0, r2
 8000252:	ea81 0303 	eor.w	r3, r1, r3
 8000256:	ea82 0000 	eor.w	r0, r2, r0
 800025a:	ea83 0101 	eor.w	r1, r3, r1
 800025e:	ea80 0202 	eor.w	r2, r0, r2
 8000262:	ea81 0303 	eor.w	r3, r1, r3
 8000266:	2d36      	cmp	r5, #54	@ 0x36
 8000268:	bf88      	it	hi
 800026a:	bd30      	pophi	{r4, r5, pc}
 800026c:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000270:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000274:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000278:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 800027c:	d002      	beq.n	8000284 <__adddf3+0x70>
 800027e:	4240      	negs	r0, r0
 8000280:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000284:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000288:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800028c:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000290:	d002      	beq.n	8000298 <__adddf3+0x84>
 8000292:	4252      	negs	r2, r2
 8000294:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000298:	ea94 0f05 	teq	r4, r5
 800029c:	f000 80a7 	beq.w	80003ee <__adddf3+0x1da>
 80002a0:	f1a4 0401 	sub.w	r4, r4, #1
 80002a4:	f1d5 0e20 	rsbs	lr, r5, #32
 80002a8:	db0d      	blt.n	80002c6 <__adddf3+0xb2>
 80002aa:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002ae:	fa22 f205 	lsr.w	r2, r2, r5
 80002b2:	1880      	adds	r0, r0, r2
 80002b4:	f141 0100 	adc.w	r1, r1, #0
 80002b8:	fa03 f20e 	lsl.w	r2, r3, lr
 80002bc:	1880      	adds	r0, r0, r2
 80002be:	fa43 f305 	asr.w	r3, r3, r5
 80002c2:	4159      	adcs	r1, r3
 80002c4:	e00e      	b.n	80002e4 <__adddf3+0xd0>
 80002c6:	f1a5 0520 	sub.w	r5, r5, #32
 80002ca:	f10e 0e20 	add.w	lr, lr, #32
 80002ce:	2a01      	cmp	r2, #1
 80002d0:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002d4:	bf28      	it	cs
 80002d6:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002da:	fa43 f305 	asr.w	r3, r3, r5
 80002de:	18c0      	adds	r0, r0, r3
 80002e0:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 80002e4:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80002e8:	d507      	bpl.n	80002fa <__adddf3+0xe6>
 80002ea:	f04f 0e00 	mov.w	lr, #0
 80002ee:	f1dc 0c00 	rsbs	ip, ip, #0
 80002f2:	eb7e 0000 	sbcs.w	r0, lr, r0
 80002f6:	eb6e 0101 	sbc.w	r1, lr, r1
 80002fa:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80002fe:	d31b      	bcc.n	8000338 <__adddf3+0x124>
 8000300:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 8000304:	d30c      	bcc.n	8000320 <__adddf3+0x10c>
 8000306:	0849      	lsrs	r1, r1, #1
 8000308:	ea5f 0030 	movs.w	r0, r0, rrx
 800030c:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000310:	f104 0401 	add.w	r4, r4, #1
 8000314:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000318:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 800031c:	f080 809a 	bcs.w	8000454 <__adddf3+0x240>
 8000320:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 8000324:	bf08      	it	eq
 8000326:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800032a:	f150 0000 	adcs.w	r0, r0, #0
 800032e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000332:	ea41 0105 	orr.w	r1, r1, r5
 8000336:	bd30      	pop	{r4, r5, pc}
 8000338:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 800033c:	4140      	adcs	r0, r0
 800033e:	eb41 0101 	adc.w	r1, r1, r1
 8000342:	3c01      	subs	r4, #1
 8000344:	bf28      	it	cs
 8000346:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 800034a:	d2e9      	bcs.n	8000320 <__adddf3+0x10c>
 800034c:	f091 0f00 	teq	r1, #0
 8000350:	bf04      	itt	eq
 8000352:	4601      	moveq	r1, r0
 8000354:	2000      	moveq	r0, #0
 8000356:	fab1 f381 	clz	r3, r1
 800035a:	bf08      	it	eq
 800035c:	3320      	addeq	r3, #32
 800035e:	f1a3 030b 	sub.w	r3, r3, #11
 8000362:	f1b3 0220 	subs.w	r2, r3, #32
 8000366:	da0c      	bge.n	8000382 <__adddf3+0x16e>
 8000368:	320c      	adds	r2, #12
 800036a:	dd08      	ble.n	800037e <__adddf3+0x16a>
 800036c:	f102 0c14 	add.w	ip, r2, #20
 8000370:	f1c2 020c 	rsb	r2, r2, #12
 8000374:	fa01 f00c 	lsl.w	r0, r1, ip
 8000378:	fa21 f102 	lsr.w	r1, r1, r2
 800037c:	e00c      	b.n	8000398 <__adddf3+0x184>
 800037e:	f102 0214 	add.w	r2, r2, #20
 8000382:	bfd8      	it	le
 8000384:	f1c2 0c20 	rsble	ip, r2, #32
 8000388:	fa01 f102 	lsl.w	r1, r1, r2
 800038c:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000390:	bfdc      	itt	le
 8000392:	ea41 010c 	orrle.w	r1, r1, ip
 8000396:	4090      	lslle	r0, r2
 8000398:	1ae4      	subs	r4, r4, r3
 800039a:	bfa2      	ittt	ge
 800039c:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003a0:	4329      	orrge	r1, r5
 80003a2:	bd30      	popge	{r4, r5, pc}
 80003a4:	ea6f 0404 	mvn.w	r4, r4
 80003a8:	3c1f      	subs	r4, #31
 80003aa:	da1c      	bge.n	80003e6 <__adddf3+0x1d2>
 80003ac:	340c      	adds	r4, #12
 80003ae:	dc0e      	bgt.n	80003ce <__adddf3+0x1ba>
 80003b0:	f104 0414 	add.w	r4, r4, #20
 80003b4:	f1c4 0220 	rsb	r2, r4, #32
 80003b8:	fa20 f004 	lsr.w	r0, r0, r4
 80003bc:	fa01 f302 	lsl.w	r3, r1, r2
 80003c0:	ea40 0003 	orr.w	r0, r0, r3
 80003c4:	fa21 f304 	lsr.w	r3, r1, r4
 80003c8:	ea45 0103 	orr.w	r1, r5, r3
 80003cc:	bd30      	pop	{r4, r5, pc}
 80003ce:	f1c4 040c 	rsb	r4, r4, #12
 80003d2:	f1c4 0220 	rsb	r2, r4, #32
 80003d6:	fa20 f002 	lsr.w	r0, r0, r2
 80003da:	fa01 f304 	lsl.w	r3, r1, r4
 80003de:	ea40 0003 	orr.w	r0, r0, r3
 80003e2:	4629      	mov	r1, r5
 80003e4:	bd30      	pop	{r4, r5, pc}
 80003e6:	fa21 f004 	lsr.w	r0, r1, r4
 80003ea:	4629      	mov	r1, r5
 80003ec:	bd30      	pop	{r4, r5, pc}
 80003ee:	f094 0f00 	teq	r4, #0
 80003f2:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 80003f6:	bf06      	itte	eq
 80003f8:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80003fc:	3401      	addeq	r4, #1
 80003fe:	3d01      	subne	r5, #1
 8000400:	e74e      	b.n	80002a0 <__adddf3+0x8c>
 8000402:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000406:	bf18      	it	ne
 8000408:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800040c:	d029      	beq.n	8000462 <__adddf3+0x24e>
 800040e:	ea94 0f05 	teq	r4, r5
 8000412:	bf08      	it	eq
 8000414:	ea90 0f02 	teqeq	r0, r2
 8000418:	d005      	beq.n	8000426 <__adddf3+0x212>
 800041a:	ea54 0c00 	orrs.w	ip, r4, r0
 800041e:	bf04      	itt	eq
 8000420:	4619      	moveq	r1, r3
 8000422:	4610      	moveq	r0, r2
 8000424:	bd30      	pop	{r4, r5, pc}
 8000426:	ea91 0f03 	teq	r1, r3
 800042a:	bf1e      	ittt	ne
 800042c:	2100      	movne	r1, #0
 800042e:	2000      	movne	r0, #0
 8000430:	bd30      	popne	{r4, r5, pc}
 8000432:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000436:	d105      	bne.n	8000444 <__adddf3+0x230>
 8000438:	0040      	lsls	r0, r0, #1
 800043a:	4149      	adcs	r1, r1
 800043c:	bf28      	it	cs
 800043e:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 8000442:	bd30      	pop	{r4, r5, pc}
 8000444:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 8000448:	bf3c      	itt	cc
 800044a:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 800044e:	bd30      	popcc	{r4, r5, pc}
 8000450:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000454:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000458:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800045c:	f04f 0000 	mov.w	r0, #0
 8000460:	bd30      	pop	{r4, r5, pc}
 8000462:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000466:	bf1a      	itte	ne
 8000468:	4619      	movne	r1, r3
 800046a:	4610      	movne	r0, r2
 800046c:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000470:	bf1c      	itt	ne
 8000472:	460b      	movne	r3, r1
 8000474:	4602      	movne	r2, r0
 8000476:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800047a:	bf06      	itte	eq
 800047c:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000480:	ea91 0f03 	teqeq	r1, r3
 8000484:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000488:	bd30      	pop	{r4, r5, pc}
 800048a:	bf00      	nop

0800048c <__aeabi_ui2d>:
 800048c:	f090 0f00 	teq	r0, #0
 8000490:	bf04      	itt	eq
 8000492:	2100      	moveq	r1, #0
 8000494:	4770      	bxeq	lr
 8000496:	b530      	push	{r4, r5, lr}
 8000498:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800049c:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004a0:	f04f 0500 	mov.w	r5, #0
 80004a4:	f04f 0100 	mov.w	r1, #0
 80004a8:	e750      	b.n	800034c <__adddf3+0x138>
 80004aa:	bf00      	nop

080004ac <__aeabi_i2d>:
 80004ac:	f090 0f00 	teq	r0, #0
 80004b0:	bf04      	itt	eq
 80004b2:	2100      	moveq	r1, #0
 80004b4:	4770      	bxeq	lr
 80004b6:	b530      	push	{r4, r5, lr}
 80004b8:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80004bc:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80004c0:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 80004c4:	bf48      	it	mi
 80004c6:	4240      	negmi	r0, r0
 80004c8:	f04f 0100 	mov.w	r1, #0
 80004cc:	e73e      	b.n	800034c <__adddf3+0x138>
 80004ce:	bf00      	nop

080004d0 <__aeabi_f2d>:
 80004d0:	0042      	lsls	r2, r0, #1
 80004d2:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004d6:	ea4f 0131 	mov.w	r1, r1, rrx
 80004da:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004de:	bf1f      	itttt	ne
 80004e0:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 80004e4:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 80004e8:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 80004ec:	4770      	bxne	lr
 80004ee:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 80004f2:	bf08      	it	eq
 80004f4:	4770      	bxeq	lr
 80004f6:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80004fa:	bf04      	itt	eq
 80004fc:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 8000500:	4770      	bxeq	lr
 8000502:	b530      	push	{r4, r5, lr}
 8000504:	f44f 7460 	mov.w	r4, #896	@ 0x380
 8000508:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 800050c:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000510:	e71c      	b.n	800034c <__adddf3+0x138>
 8000512:	bf00      	nop

08000514 <__aeabi_ul2d>:
 8000514:	ea50 0201 	orrs.w	r2, r0, r1
 8000518:	bf08      	it	eq
 800051a:	4770      	bxeq	lr
 800051c:	b530      	push	{r4, r5, lr}
 800051e:	f04f 0500 	mov.w	r5, #0
 8000522:	e00a      	b.n	800053a <__aeabi_l2d+0x16>

08000524 <__aeabi_l2d>:
 8000524:	ea50 0201 	orrs.w	r2, r0, r1
 8000528:	bf08      	it	eq
 800052a:	4770      	bxeq	lr
 800052c:	b530      	push	{r4, r5, lr}
 800052e:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 8000532:	d502      	bpl.n	800053a <__aeabi_l2d+0x16>
 8000534:	4240      	negs	r0, r0
 8000536:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800053a:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 800053e:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000542:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000546:	f43f aed8 	beq.w	80002fa <__adddf3+0xe6>
 800054a:	f04f 0203 	mov.w	r2, #3
 800054e:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000552:	bf18      	it	ne
 8000554:	3203      	addne	r2, #3
 8000556:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800055a:	bf18      	it	ne
 800055c:	3203      	addne	r2, #3
 800055e:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 8000562:	f1c2 0320 	rsb	r3, r2, #32
 8000566:	fa00 fc03 	lsl.w	ip, r0, r3
 800056a:	fa20 f002 	lsr.w	r0, r0, r2
 800056e:	fa01 fe03 	lsl.w	lr, r1, r3
 8000572:	ea40 000e 	orr.w	r0, r0, lr
 8000576:	fa21 f102 	lsr.w	r1, r1, r2
 800057a:	4414      	add	r4, r2
 800057c:	e6bd      	b.n	80002fa <__adddf3+0xe6>
 800057e:	bf00      	nop

08000580 <__aeabi_dmul>:
 8000580:	b570      	push	{r4, r5, r6, lr}
 8000582:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000586:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 800058a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800058e:	bf1d      	ittte	ne
 8000590:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000594:	ea94 0f0c 	teqne	r4, ip
 8000598:	ea95 0f0c 	teqne	r5, ip
 800059c:	f000 f8de 	bleq	800075c <__aeabi_dmul+0x1dc>
 80005a0:	442c      	add	r4, r5
 80005a2:	ea81 0603 	eor.w	r6, r1, r3
 80005a6:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005aa:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005ae:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005b2:	bf18      	it	ne
 80005b4:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005b8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80005bc:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 80005c0:	d038      	beq.n	8000634 <__aeabi_dmul+0xb4>
 80005c2:	fba0 ce02 	umull	ip, lr, r0, r2
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005ce:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 80005d2:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005d6:	f04f 0600 	mov.w	r6, #0
 80005da:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005de:	f09c 0f00 	teq	ip, #0
 80005e2:	bf18      	it	ne
 80005e4:	f04e 0e01 	orrne.w	lr, lr, #1
 80005e8:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 80005ec:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 80005f0:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 80005f4:	d204      	bcs.n	8000600 <__aeabi_dmul+0x80>
 80005f6:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80005fa:	416d      	adcs	r5, r5
 80005fc:	eb46 0606 	adc.w	r6, r6, r6
 8000600:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000604:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000608:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 800060c:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000610:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000614:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 8000618:	bf88      	it	hi
 800061a:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 800061e:	d81e      	bhi.n	800065e <__aeabi_dmul+0xde>
 8000620:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 8000624:	bf08      	it	eq
 8000626:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 800062a:	f150 0000 	adcs.w	r0, r0, #0
 800062e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000632:	bd70      	pop	{r4, r5, r6, pc}
 8000634:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 8000638:	ea46 0101 	orr.w	r1, r6, r1
 800063c:	ea40 0002 	orr.w	r0, r0, r2
 8000640:	ea81 0103 	eor.w	r1, r1, r3
 8000644:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000648:	bfc2      	ittt	gt
 800064a:	ebd4 050c 	rsbsgt	r5, r4, ip
 800064e:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000652:	bd70      	popgt	{r4, r5, r6, pc}
 8000654:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000658:	f04f 0e00 	mov.w	lr, #0
 800065c:	3c01      	subs	r4, #1
 800065e:	f300 80ab 	bgt.w	80007b8 <__aeabi_dmul+0x238>
 8000662:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 8000666:	bfde      	ittt	le
 8000668:	2000      	movle	r0, #0
 800066a:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 800066e:	bd70      	pople	{r4, r5, r6, pc}
 8000670:	f1c4 0400 	rsb	r4, r4, #0
 8000674:	3c20      	subs	r4, #32
 8000676:	da35      	bge.n	80006e4 <__aeabi_dmul+0x164>
 8000678:	340c      	adds	r4, #12
 800067a:	dc1b      	bgt.n	80006b4 <__aeabi_dmul+0x134>
 800067c:	f104 0414 	add.w	r4, r4, #20
 8000680:	f1c4 0520 	rsb	r5, r4, #32
 8000684:	fa00 f305 	lsl.w	r3, r0, r5
 8000688:	fa20 f004 	lsr.w	r0, r0, r4
 800068c:	fa01 f205 	lsl.w	r2, r1, r5
 8000690:	ea40 0002 	orr.w	r0, r0, r2
 8000694:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000698:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 800069c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006a0:	fa21 f604 	lsr.w	r6, r1, r4
 80006a4:	eb42 0106 	adc.w	r1, r2, r6
 80006a8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006ac:	bf08      	it	eq
 80006ae:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006b2:	bd70      	pop	{r4, r5, r6, pc}
 80006b4:	f1c4 040c 	rsb	r4, r4, #12
 80006b8:	f1c4 0520 	rsb	r5, r4, #32
 80006bc:	fa00 f304 	lsl.w	r3, r0, r4
 80006c0:	fa20 f005 	lsr.w	r0, r0, r5
 80006c4:	fa01 f204 	lsl.w	r2, r1, r4
 80006c8:	ea40 0002 	orr.w	r0, r0, r2
 80006cc:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80006d0:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006d4:	f141 0100 	adc.w	r1, r1, #0
 80006d8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006dc:	bf08      	it	eq
 80006de:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006e2:	bd70      	pop	{r4, r5, r6, pc}
 80006e4:	f1c4 0520 	rsb	r5, r4, #32
 80006e8:	fa00 f205 	lsl.w	r2, r0, r5
 80006ec:	ea4e 0e02 	orr.w	lr, lr, r2
 80006f0:	fa20 f304 	lsr.w	r3, r0, r4
 80006f4:	fa01 f205 	lsl.w	r2, r1, r5
 80006f8:	ea43 0302 	orr.w	r3, r3, r2
 80006fc:	fa21 f004 	lsr.w	r0, r1, r4
 8000700:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000704:	fa21 f204 	lsr.w	r2, r1, r4
 8000708:	ea20 0002 	bic.w	r0, r0, r2
 800070c:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000710:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000714:	bf08      	it	eq
 8000716:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800071a:	bd70      	pop	{r4, r5, r6, pc}
 800071c:	f094 0f00 	teq	r4, #0
 8000720:	d10f      	bne.n	8000742 <__aeabi_dmul+0x1c2>
 8000722:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 8000726:	0040      	lsls	r0, r0, #1
 8000728:	eb41 0101 	adc.w	r1, r1, r1
 800072c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000730:	bf08      	it	eq
 8000732:	3c01      	subeq	r4, #1
 8000734:	d0f7      	beq.n	8000726 <__aeabi_dmul+0x1a6>
 8000736:	ea41 0106 	orr.w	r1, r1, r6
 800073a:	f095 0f00 	teq	r5, #0
 800073e:	bf18      	it	ne
 8000740:	4770      	bxne	lr
 8000742:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 8000746:	0052      	lsls	r2, r2, #1
 8000748:	eb43 0303 	adc.w	r3, r3, r3
 800074c:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 8000750:	bf08      	it	eq
 8000752:	3d01      	subeq	r5, #1
 8000754:	d0f7      	beq.n	8000746 <__aeabi_dmul+0x1c6>
 8000756:	ea43 0306 	orr.w	r3, r3, r6
 800075a:	4770      	bx	lr
 800075c:	ea94 0f0c 	teq	r4, ip
 8000760:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000764:	bf18      	it	ne
 8000766:	ea95 0f0c 	teqne	r5, ip
 800076a:	d00c      	beq.n	8000786 <__aeabi_dmul+0x206>
 800076c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000770:	bf18      	it	ne
 8000772:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000776:	d1d1      	bne.n	800071c <__aeabi_dmul+0x19c>
 8000778:	ea81 0103 	eor.w	r1, r1, r3
 800077c:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000780:	f04f 0000 	mov.w	r0, #0
 8000784:	bd70      	pop	{r4, r5, r6, pc}
 8000786:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800078a:	bf06      	itte	eq
 800078c:	4610      	moveq	r0, r2
 800078e:	4619      	moveq	r1, r3
 8000790:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000794:	d019      	beq.n	80007ca <__aeabi_dmul+0x24a>
 8000796:	ea94 0f0c 	teq	r4, ip
 800079a:	d102      	bne.n	80007a2 <__aeabi_dmul+0x222>
 800079c:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007a0:	d113      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007a2:	ea95 0f0c 	teq	r5, ip
 80007a6:	d105      	bne.n	80007b4 <__aeabi_dmul+0x234>
 80007a8:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007ac:	bf1c      	itt	ne
 80007ae:	4610      	movne	r0, r2
 80007b0:	4619      	movne	r1, r3
 80007b2:	d10a      	bne.n	80007ca <__aeabi_dmul+0x24a>
 80007b4:	ea81 0103 	eor.w	r1, r1, r3
 80007b8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007bc:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007c0:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 80007c4:	f04f 0000 	mov.w	r0, #0
 80007c8:	bd70      	pop	{r4, r5, r6, pc}
 80007ca:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 80007ce:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 80007d2:	bd70      	pop	{r4, r5, r6, pc}

080007d4 <__aeabi_ddiv>:
 80007d4:	b570      	push	{r4, r5, r6, lr}
 80007d6:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 80007da:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 80007de:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007e2:	bf1d      	ittte	ne
 80007e4:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80007e8:	ea94 0f0c 	teqne	r4, ip
 80007ec:	ea95 0f0c 	teqne	r5, ip
 80007f0:	f000 f8a7 	bleq	8000942 <__aeabi_ddiv+0x16e>
 80007f4:	eba4 0405 	sub.w	r4, r4, r5
 80007f8:	ea81 0e03 	eor.w	lr, r1, r3
 80007fc:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000800:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000804:	f000 8088 	beq.w	8000918 <__aeabi_ddiv+0x144>
 8000808:	ea4f 3303 	mov.w	r3, r3, lsl #12
 800080c:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 8000810:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000814:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000818:	ea4f 2202 	mov.w	r2, r2, lsl #8
 800081c:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000820:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000824:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000828:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 800082c:	429d      	cmp	r5, r3
 800082e:	bf08      	it	eq
 8000830:	4296      	cmpeq	r6, r2
 8000832:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 8000836:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 800083a:	d202      	bcs.n	8000842 <__aeabi_ddiv+0x6e>
 800083c:	085b      	lsrs	r3, r3, #1
 800083e:	ea4f 0232 	mov.w	r2, r2, rrx
 8000842:	1ab6      	subs	r6, r6, r2
 8000844:	eb65 0503 	sbc.w	r5, r5, r3
 8000848:	085b      	lsrs	r3, r3, #1
 800084a:	ea4f 0232 	mov.w	r2, r2, rrx
 800084e:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 8000852:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 8000856:	ebb6 0e02 	subs.w	lr, r6, r2
 800085a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800085e:	bf22      	ittt	cs
 8000860:	1ab6      	subcs	r6, r6, r2
 8000862:	4675      	movcs	r5, lr
 8000864:	ea40 000c 	orrcs.w	r0, r0, ip
 8000868:	085b      	lsrs	r3, r3, #1
 800086a:	ea4f 0232 	mov.w	r2, r2, rrx
 800086e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000872:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000876:	bf22      	ittt	cs
 8000878:	1ab6      	subcs	r6, r6, r2
 800087a:	4675      	movcs	r5, lr
 800087c:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000880:	085b      	lsrs	r3, r3, #1
 8000882:	ea4f 0232 	mov.w	r2, r2, rrx
 8000886:	ebb6 0e02 	subs.w	lr, r6, r2
 800088a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800088e:	bf22      	ittt	cs
 8000890:	1ab6      	subcs	r6, r6, r2
 8000892:	4675      	movcs	r5, lr
 8000894:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000898:	085b      	lsrs	r3, r3, #1
 800089a:	ea4f 0232 	mov.w	r2, r2, rrx
 800089e:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008a6:	bf22      	ittt	cs
 80008a8:	1ab6      	subcs	r6, r6, r2
 80008aa:	4675      	movcs	r5, lr
 80008ac:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008b0:	ea55 0e06 	orrs.w	lr, r5, r6
 80008b4:	d018      	beq.n	80008e8 <__aeabi_ddiv+0x114>
 80008b6:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008ba:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008be:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008c2:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008c6:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008ca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008ce:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008d2:	d1c0      	bne.n	8000856 <__aeabi_ddiv+0x82>
 80008d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008d8:	d10b      	bne.n	80008f2 <__aeabi_ddiv+0x11e>
 80008da:	ea41 0100 	orr.w	r1, r1, r0
 80008de:	f04f 0000 	mov.w	r0, #0
 80008e2:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 80008e6:	e7b6      	b.n	8000856 <__aeabi_ddiv+0x82>
 80008e8:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80008ec:	bf04      	itt	eq
 80008ee:	4301      	orreq	r1, r0
 80008f0:	2000      	moveq	r0, #0
 80008f2:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80008f6:	bf88      	it	hi
 80008f8:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80008fc:	f63f aeaf 	bhi.w	800065e <__aeabi_dmul+0xde>
 8000900:	ebb5 0c03 	subs.w	ip, r5, r3
 8000904:	bf04      	itt	eq
 8000906:	ebb6 0c02 	subseq.w	ip, r6, r2
 800090a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800090e:	f150 0000 	adcs.w	r0, r0, #0
 8000912:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000916:	bd70      	pop	{r4, r5, r6, pc}
 8000918:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 800091c:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000920:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000924:	bfc2      	ittt	gt
 8000926:	ebd4 050c 	rsbsgt	r5, r4, ip
 800092a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800092e:	bd70      	popgt	{r4, r5, r6, pc}
 8000930:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000934:	f04f 0e00 	mov.w	lr, #0
 8000938:	3c01      	subs	r4, #1
 800093a:	e690      	b.n	800065e <__aeabi_dmul+0xde>
 800093c:	ea45 0e06 	orr.w	lr, r5, r6
 8000940:	e68d      	b.n	800065e <__aeabi_dmul+0xde>
 8000942:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000946:	ea94 0f0c 	teq	r4, ip
 800094a:	bf08      	it	eq
 800094c:	ea95 0f0c 	teqeq	r5, ip
 8000950:	f43f af3b 	beq.w	80007ca <__aeabi_dmul+0x24a>
 8000954:	ea94 0f0c 	teq	r4, ip
 8000958:	d10a      	bne.n	8000970 <__aeabi_ddiv+0x19c>
 800095a:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800095e:	f47f af34 	bne.w	80007ca <__aeabi_dmul+0x24a>
 8000962:	ea95 0f0c 	teq	r5, ip
 8000966:	f47f af25 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800096a:	4610      	mov	r0, r2
 800096c:	4619      	mov	r1, r3
 800096e:	e72c      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000970:	ea95 0f0c 	teq	r5, ip
 8000974:	d106      	bne.n	8000984 <__aeabi_ddiv+0x1b0>
 8000976:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800097a:	f43f aefd 	beq.w	8000778 <__aeabi_dmul+0x1f8>
 800097e:	4610      	mov	r0, r2
 8000980:	4619      	mov	r1, r3
 8000982:	e722      	b.n	80007ca <__aeabi_dmul+0x24a>
 8000984:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000988:	bf18      	it	ne
 800098a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800098e:	f47f aec5 	bne.w	800071c <__aeabi_dmul+0x19c>
 8000992:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000996:	f47f af0d 	bne.w	80007b4 <__aeabi_dmul+0x234>
 800099a:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 800099e:	f47f aeeb 	bne.w	8000778 <__aeabi_dmul+0x1f8>
 80009a2:	e712      	b.n	80007ca <__aeabi_dmul+0x24a>

080009a4 <__aeabi_d2iz>:
 80009a4:	ea4f 0241 	mov.w	r2, r1, lsl #1
 80009a8:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 80009ac:	d215      	bcs.n	80009da <__aeabi_d2iz+0x36>
 80009ae:	d511      	bpl.n	80009d4 <__aeabi_d2iz+0x30>
 80009b0:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 80009b4:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 80009b8:	d912      	bls.n	80009e0 <__aeabi_d2iz+0x3c>
 80009ba:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80009be:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 80009c2:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 80009c6:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 80009ca:	fa23 f002 	lsr.w	r0, r3, r2
 80009ce:	bf18      	it	ne
 80009d0:	4240      	negne	r0, r0
 80009d2:	4770      	bx	lr
 80009d4:	f04f 0000 	mov.w	r0, #0
 80009d8:	4770      	bx	lr
 80009da:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 80009de:	d105      	bne.n	80009ec <__aeabi_d2iz+0x48>
 80009e0:	f011 4000 	ands.w	r0, r1, #2147483648	@ 0x80000000
 80009e4:	bf08      	it	eq
 80009e6:	f06f 4000 	mvneq.w	r0, #2147483648	@ 0x80000000
 80009ea:	4770      	bx	lr
 80009ec:	f04f 0000 	mov.w	r0, #0
 80009f0:	4770      	bx	lr
 80009f2:	bf00      	nop

080009f4 <__aeabi_d2uiz>:
 80009f4:	004a      	lsls	r2, r1, #1
 80009f6:	d211      	bcs.n	8000a1c <__aeabi_d2uiz+0x28>
 80009f8:	f512 1200 	adds.w	r2, r2, #2097152	@ 0x200000
 80009fc:	d211      	bcs.n	8000a22 <__aeabi_d2uiz+0x2e>
 80009fe:	d50d      	bpl.n	8000a1c <__aeabi_d2uiz+0x28>
 8000a00:	f46f 7378 	mvn.w	r3, #992	@ 0x3e0
 8000a04:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000a08:	d40e      	bmi.n	8000a28 <__aeabi_d2uiz+0x34>
 8000a0a:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000a0e:	f043 4300 	orr.w	r3, r3, #2147483648	@ 0x80000000
 8000a12:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000a16:	fa23 f002 	lsr.w	r0, r3, r2
 8000a1a:	4770      	bx	lr
 8000a1c:	f04f 0000 	mov.w	r0, #0
 8000a20:	4770      	bx	lr
 8000a22:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000a26:	d102      	bne.n	8000a2e <__aeabi_d2uiz+0x3a>
 8000a28:	f04f 30ff 	mov.w	r0, #4294967295
 8000a2c:	4770      	bx	lr
 8000a2e:	f04f 0000 	mov.w	r0, #0
 8000a32:	4770      	bx	lr

08000a34 <__aeabi_uldivmod>:
 8000a34:	b953      	cbnz	r3, 8000a4c <__aeabi_uldivmod+0x18>
 8000a36:	b94a      	cbnz	r2, 8000a4c <__aeabi_uldivmod+0x18>
 8000a38:	2900      	cmp	r1, #0
 8000a3a:	bf08      	it	eq
 8000a3c:	2800      	cmpeq	r0, #0
 8000a3e:	bf1c      	itt	ne
 8000a40:	f04f 31ff 	movne.w	r1, #4294967295
 8000a44:	f04f 30ff 	movne.w	r0, #4294967295
 8000a48:	f000 b988 	b.w	8000d5c <__aeabi_idiv0>
 8000a4c:	f1ad 0c08 	sub.w	ip, sp, #8
 8000a50:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000a54:	f000 f806 	bl	8000a64 <__udivmoddi4>
 8000a58:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000a5c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000a60:	b004      	add	sp, #16
 8000a62:	4770      	bx	lr

08000a64 <__udivmoddi4>:
 8000a64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000a68:	9d08      	ldr	r5, [sp, #32]
 8000a6a:	468e      	mov	lr, r1
 8000a6c:	4604      	mov	r4, r0
 8000a6e:	4688      	mov	r8, r1
 8000a70:	2b00      	cmp	r3, #0
 8000a72:	d14a      	bne.n	8000b0a <__udivmoddi4+0xa6>
 8000a74:	428a      	cmp	r2, r1
 8000a76:	4617      	mov	r7, r2
 8000a78:	d962      	bls.n	8000b40 <__udivmoddi4+0xdc>
 8000a7a:	fab2 f682 	clz	r6, r2
 8000a7e:	b14e      	cbz	r6, 8000a94 <__udivmoddi4+0x30>
 8000a80:	f1c6 0320 	rsb	r3, r6, #32
 8000a84:	fa01 f806 	lsl.w	r8, r1, r6
 8000a88:	fa20 f303 	lsr.w	r3, r0, r3
 8000a8c:	40b7      	lsls	r7, r6
 8000a8e:	ea43 0808 	orr.w	r8, r3, r8
 8000a92:	40b4      	lsls	r4, r6
 8000a94:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000a98:	fa1f fc87 	uxth.w	ip, r7
 8000a9c:	fbb8 f1fe 	udiv	r1, r8, lr
 8000aa0:	0c23      	lsrs	r3, r4, #16
 8000aa2:	fb0e 8811 	mls	r8, lr, r1, r8
 8000aa6:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000aaa:	fb01 f20c 	mul.w	r2, r1, ip
 8000aae:	429a      	cmp	r2, r3
 8000ab0:	d909      	bls.n	8000ac6 <__udivmoddi4+0x62>
 8000ab2:	18fb      	adds	r3, r7, r3
 8000ab4:	f101 30ff 	add.w	r0, r1, #4294967295
 8000ab8:	f080 80ea 	bcs.w	8000c90 <__udivmoddi4+0x22c>
 8000abc:	429a      	cmp	r2, r3
 8000abe:	f240 80e7 	bls.w	8000c90 <__udivmoddi4+0x22c>
 8000ac2:	3902      	subs	r1, #2
 8000ac4:	443b      	add	r3, r7
 8000ac6:	1a9a      	subs	r2, r3, r2
 8000ac8:	b2a3      	uxth	r3, r4
 8000aca:	fbb2 f0fe 	udiv	r0, r2, lr
 8000ace:	fb0e 2210 	mls	r2, lr, r0, r2
 8000ad2:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000ad6:	fb00 fc0c 	mul.w	ip, r0, ip
 8000ada:	459c      	cmp	ip, r3
 8000adc:	d909      	bls.n	8000af2 <__udivmoddi4+0x8e>
 8000ade:	18fb      	adds	r3, r7, r3
 8000ae0:	f100 32ff 	add.w	r2, r0, #4294967295
 8000ae4:	f080 80d6 	bcs.w	8000c94 <__udivmoddi4+0x230>
 8000ae8:	459c      	cmp	ip, r3
 8000aea:	f240 80d3 	bls.w	8000c94 <__udivmoddi4+0x230>
 8000aee:	443b      	add	r3, r7
 8000af0:	3802      	subs	r0, #2
 8000af2:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000af6:	eba3 030c 	sub.w	r3, r3, ip
 8000afa:	2100      	movs	r1, #0
 8000afc:	b11d      	cbz	r5, 8000b06 <__udivmoddi4+0xa2>
 8000afe:	40f3      	lsrs	r3, r6
 8000b00:	2200      	movs	r2, #0
 8000b02:	e9c5 3200 	strd	r3, r2, [r5]
 8000b06:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000b0a:	428b      	cmp	r3, r1
 8000b0c:	d905      	bls.n	8000b1a <__udivmoddi4+0xb6>
 8000b0e:	b10d      	cbz	r5, 8000b14 <__udivmoddi4+0xb0>
 8000b10:	e9c5 0100 	strd	r0, r1, [r5]
 8000b14:	2100      	movs	r1, #0
 8000b16:	4608      	mov	r0, r1
 8000b18:	e7f5      	b.n	8000b06 <__udivmoddi4+0xa2>
 8000b1a:	fab3 f183 	clz	r1, r3
 8000b1e:	2900      	cmp	r1, #0
 8000b20:	d146      	bne.n	8000bb0 <__udivmoddi4+0x14c>
 8000b22:	4573      	cmp	r3, lr
 8000b24:	d302      	bcc.n	8000b2c <__udivmoddi4+0xc8>
 8000b26:	4282      	cmp	r2, r0
 8000b28:	f200 8105 	bhi.w	8000d36 <__udivmoddi4+0x2d2>
 8000b2c:	1a84      	subs	r4, r0, r2
 8000b2e:	eb6e 0203 	sbc.w	r2, lr, r3
 8000b32:	2001      	movs	r0, #1
 8000b34:	4690      	mov	r8, r2
 8000b36:	2d00      	cmp	r5, #0
 8000b38:	d0e5      	beq.n	8000b06 <__udivmoddi4+0xa2>
 8000b3a:	e9c5 4800 	strd	r4, r8, [r5]
 8000b3e:	e7e2      	b.n	8000b06 <__udivmoddi4+0xa2>
 8000b40:	2a00      	cmp	r2, #0
 8000b42:	f000 8090 	beq.w	8000c66 <__udivmoddi4+0x202>
 8000b46:	fab2 f682 	clz	r6, r2
 8000b4a:	2e00      	cmp	r6, #0
 8000b4c:	f040 80a4 	bne.w	8000c98 <__udivmoddi4+0x234>
 8000b50:	1a8a      	subs	r2, r1, r2
 8000b52:	0c03      	lsrs	r3, r0, #16
 8000b54:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000b58:	b280      	uxth	r0, r0
 8000b5a:	b2bc      	uxth	r4, r7
 8000b5c:	2101      	movs	r1, #1
 8000b5e:	fbb2 fcfe 	udiv	ip, r2, lr
 8000b62:	fb0e 221c 	mls	r2, lr, ip, r2
 8000b66:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8000b6a:	fb04 f20c 	mul.w	r2, r4, ip
 8000b6e:	429a      	cmp	r2, r3
 8000b70:	d907      	bls.n	8000b82 <__udivmoddi4+0x11e>
 8000b72:	18fb      	adds	r3, r7, r3
 8000b74:	f10c 38ff 	add.w	r8, ip, #4294967295
 8000b78:	d202      	bcs.n	8000b80 <__udivmoddi4+0x11c>
 8000b7a:	429a      	cmp	r2, r3
 8000b7c:	f200 80e0 	bhi.w	8000d40 <__udivmoddi4+0x2dc>
 8000b80:	46c4      	mov	ip, r8
 8000b82:	1a9b      	subs	r3, r3, r2
 8000b84:	fbb3 f2fe 	udiv	r2, r3, lr
 8000b88:	fb0e 3312 	mls	r3, lr, r2, r3
 8000b8c:	ea40 4303 	orr.w	r3, r0, r3, lsl #16
 8000b90:	fb02 f404 	mul.w	r4, r2, r4
 8000b94:	429c      	cmp	r4, r3
 8000b96:	d907      	bls.n	8000ba8 <__udivmoddi4+0x144>
 8000b98:	18fb      	adds	r3, r7, r3
 8000b9a:	f102 30ff 	add.w	r0, r2, #4294967295
 8000b9e:	d202      	bcs.n	8000ba6 <__udivmoddi4+0x142>
 8000ba0:	429c      	cmp	r4, r3
 8000ba2:	f200 80ca 	bhi.w	8000d3a <__udivmoddi4+0x2d6>
 8000ba6:	4602      	mov	r2, r0
 8000ba8:	1b1b      	subs	r3, r3, r4
 8000baa:	ea42 400c 	orr.w	r0, r2, ip, lsl #16
 8000bae:	e7a5      	b.n	8000afc <__udivmoddi4+0x98>
 8000bb0:	f1c1 0620 	rsb	r6, r1, #32
 8000bb4:	408b      	lsls	r3, r1
 8000bb6:	fa22 f706 	lsr.w	r7, r2, r6
 8000bba:	431f      	orrs	r7, r3
 8000bbc:	fa0e f401 	lsl.w	r4, lr, r1
 8000bc0:	fa20 f306 	lsr.w	r3, r0, r6
 8000bc4:	fa2e fe06 	lsr.w	lr, lr, r6
 8000bc8:	ea4f 4917 	mov.w	r9, r7, lsr #16
 8000bcc:	4323      	orrs	r3, r4
 8000bce:	fa00 f801 	lsl.w	r8, r0, r1
 8000bd2:	fa1f fc87 	uxth.w	ip, r7
 8000bd6:	fbbe f0f9 	udiv	r0, lr, r9
 8000bda:	0c1c      	lsrs	r4, r3, #16
 8000bdc:	fb09 ee10 	mls	lr, r9, r0, lr
 8000be0:	ea44 440e 	orr.w	r4, r4, lr, lsl #16
 8000be4:	fb00 fe0c 	mul.w	lr, r0, ip
 8000be8:	45a6      	cmp	lr, r4
 8000bea:	fa02 f201 	lsl.w	r2, r2, r1
 8000bee:	d909      	bls.n	8000c04 <__udivmoddi4+0x1a0>
 8000bf0:	193c      	adds	r4, r7, r4
 8000bf2:	f100 3aff 	add.w	sl, r0, #4294967295
 8000bf6:	f080 809c 	bcs.w	8000d32 <__udivmoddi4+0x2ce>
 8000bfa:	45a6      	cmp	lr, r4
 8000bfc:	f240 8099 	bls.w	8000d32 <__udivmoddi4+0x2ce>
 8000c00:	3802      	subs	r0, #2
 8000c02:	443c      	add	r4, r7
 8000c04:	eba4 040e 	sub.w	r4, r4, lr
 8000c08:	fa1f fe83 	uxth.w	lr, r3
 8000c0c:	fbb4 f3f9 	udiv	r3, r4, r9
 8000c10:	fb09 4413 	mls	r4, r9, r3, r4
 8000c14:	ea4e 4404 	orr.w	r4, lr, r4, lsl #16
 8000c18:	fb03 fc0c 	mul.w	ip, r3, ip
 8000c1c:	45a4      	cmp	ip, r4
 8000c1e:	d908      	bls.n	8000c32 <__udivmoddi4+0x1ce>
 8000c20:	193c      	adds	r4, r7, r4
 8000c22:	f103 3eff 	add.w	lr, r3, #4294967295
 8000c26:	f080 8082 	bcs.w	8000d2e <__udivmoddi4+0x2ca>
 8000c2a:	45a4      	cmp	ip, r4
 8000c2c:	d97f      	bls.n	8000d2e <__udivmoddi4+0x2ca>
 8000c2e:	3b02      	subs	r3, #2
 8000c30:	443c      	add	r4, r7
 8000c32:	ea43 4000 	orr.w	r0, r3, r0, lsl #16
 8000c36:	eba4 040c 	sub.w	r4, r4, ip
 8000c3a:	fba0 ec02 	umull	lr, ip, r0, r2
 8000c3e:	4564      	cmp	r4, ip
 8000c40:	4673      	mov	r3, lr
 8000c42:	46e1      	mov	r9, ip
 8000c44:	d362      	bcc.n	8000d0c <__udivmoddi4+0x2a8>
 8000c46:	d05f      	beq.n	8000d08 <__udivmoddi4+0x2a4>
 8000c48:	b15d      	cbz	r5, 8000c62 <__udivmoddi4+0x1fe>
 8000c4a:	ebb8 0203 	subs.w	r2, r8, r3
 8000c4e:	eb64 0409 	sbc.w	r4, r4, r9
 8000c52:	fa04 f606 	lsl.w	r6, r4, r6
 8000c56:	fa22 f301 	lsr.w	r3, r2, r1
 8000c5a:	431e      	orrs	r6, r3
 8000c5c:	40cc      	lsrs	r4, r1
 8000c5e:	e9c5 6400 	strd	r6, r4, [r5]
 8000c62:	2100      	movs	r1, #0
 8000c64:	e74f      	b.n	8000b06 <__udivmoddi4+0xa2>
 8000c66:	fbb1 fcf2 	udiv	ip, r1, r2
 8000c6a:	0c01      	lsrs	r1, r0, #16
 8000c6c:	ea41 410e 	orr.w	r1, r1, lr, lsl #16
 8000c70:	b280      	uxth	r0, r0
 8000c72:	ea40 4201 	orr.w	r2, r0, r1, lsl #16
 8000c76:	463b      	mov	r3, r7
 8000c78:	4638      	mov	r0, r7
 8000c7a:	463c      	mov	r4, r7
 8000c7c:	46b8      	mov	r8, r7
 8000c7e:	46be      	mov	lr, r7
 8000c80:	2620      	movs	r6, #32
 8000c82:	fbb1 f1f7 	udiv	r1, r1, r7
 8000c86:	eba2 0208 	sub.w	r2, r2, r8
 8000c8a:	ea41 410c 	orr.w	r1, r1, ip, lsl #16
 8000c8e:	e766      	b.n	8000b5e <__udivmoddi4+0xfa>
 8000c90:	4601      	mov	r1, r0
 8000c92:	e718      	b.n	8000ac6 <__udivmoddi4+0x62>
 8000c94:	4610      	mov	r0, r2
 8000c96:	e72c      	b.n	8000af2 <__udivmoddi4+0x8e>
 8000c98:	f1c6 0220 	rsb	r2, r6, #32
 8000c9c:	fa2e f302 	lsr.w	r3, lr, r2
 8000ca0:	40b7      	lsls	r7, r6
 8000ca2:	40b1      	lsls	r1, r6
 8000ca4:	fa20 f202 	lsr.w	r2, r0, r2
 8000ca8:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000cac:	430a      	orrs	r2, r1
 8000cae:	fbb3 f8fe 	udiv	r8, r3, lr
 8000cb2:	b2bc      	uxth	r4, r7
 8000cb4:	fb0e 3318 	mls	r3, lr, r8, r3
 8000cb8:	0c11      	lsrs	r1, r2, #16
 8000cba:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000cbe:	fb08 f904 	mul.w	r9, r8, r4
 8000cc2:	40b0      	lsls	r0, r6
 8000cc4:	4589      	cmp	r9, r1
 8000cc6:	ea4f 4310 	mov.w	r3, r0, lsr #16
 8000cca:	b280      	uxth	r0, r0
 8000ccc:	d93e      	bls.n	8000d4c <__udivmoddi4+0x2e8>
 8000cce:	1879      	adds	r1, r7, r1
 8000cd0:	f108 3cff 	add.w	ip, r8, #4294967295
 8000cd4:	d201      	bcs.n	8000cda <__udivmoddi4+0x276>
 8000cd6:	4589      	cmp	r9, r1
 8000cd8:	d81f      	bhi.n	8000d1a <__udivmoddi4+0x2b6>
 8000cda:	eba1 0109 	sub.w	r1, r1, r9
 8000cde:	fbb1 f9fe 	udiv	r9, r1, lr
 8000ce2:	fb09 f804 	mul.w	r8, r9, r4
 8000ce6:	fb0e 1119 	mls	r1, lr, r9, r1
 8000cea:	b292      	uxth	r2, r2
 8000cec:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000cf0:	4542      	cmp	r2, r8
 8000cf2:	d229      	bcs.n	8000d48 <__udivmoddi4+0x2e4>
 8000cf4:	18ba      	adds	r2, r7, r2
 8000cf6:	f109 31ff 	add.w	r1, r9, #4294967295
 8000cfa:	d2c4      	bcs.n	8000c86 <__udivmoddi4+0x222>
 8000cfc:	4542      	cmp	r2, r8
 8000cfe:	d2c2      	bcs.n	8000c86 <__udivmoddi4+0x222>
 8000d00:	f1a9 0102 	sub.w	r1, r9, #2
 8000d04:	443a      	add	r2, r7
 8000d06:	e7be      	b.n	8000c86 <__udivmoddi4+0x222>
 8000d08:	45f0      	cmp	r8, lr
 8000d0a:	d29d      	bcs.n	8000c48 <__udivmoddi4+0x1e4>
 8000d0c:	ebbe 0302 	subs.w	r3, lr, r2
 8000d10:	eb6c 0c07 	sbc.w	ip, ip, r7
 8000d14:	3801      	subs	r0, #1
 8000d16:	46e1      	mov	r9, ip
 8000d18:	e796      	b.n	8000c48 <__udivmoddi4+0x1e4>
 8000d1a:	eba7 0909 	sub.w	r9, r7, r9
 8000d1e:	4449      	add	r1, r9
 8000d20:	f1a8 0c02 	sub.w	ip, r8, #2
 8000d24:	fbb1 f9fe 	udiv	r9, r1, lr
 8000d28:	fb09 f804 	mul.w	r8, r9, r4
 8000d2c:	e7db      	b.n	8000ce6 <__udivmoddi4+0x282>
 8000d2e:	4673      	mov	r3, lr
 8000d30:	e77f      	b.n	8000c32 <__udivmoddi4+0x1ce>
 8000d32:	4650      	mov	r0, sl
 8000d34:	e766      	b.n	8000c04 <__udivmoddi4+0x1a0>
 8000d36:	4608      	mov	r0, r1
 8000d38:	e6fd      	b.n	8000b36 <__udivmoddi4+0xd2>
 8000d3a:	443b      	add	r3, r7
 8000d3c:	3a02      	subs	r2, #2
 8000d3e:	e733      	b.n	8000ba8 <__udivmoddi4+0x144>
 8000d40:	f1ac 0c02 	sub.w	ip, ip, #2
 8000d44:	443b      	add	r3, r7
 8000d46:	e71c      	b.n	8000b82 <__udivmoddi4+0x11e>
 8000d48:	4649      	mov	r1, r9
 8000d4a:	e79c      	b.n	8000c86 <__udivmoddi4+0x222>
 8000d4c:	eba1 0109 	sub.w	r1, r1, r9
 8000d50:	46c4      	mov	ip, r8
 8000d52:	fbb1 f9fe 	udiv	r9, r1, lr
 8000d56:	fb09 f804 	mul.w	r8, r9, r4
 8000d5a:	e7c4      	b.n	8000ce6 <__udivmoddi4+0x282>

08000d5c <__aeabi_idiv0>:
 8000d5c:	4770      	bx	lr
 8000d5e:	bf00      	nop

08000d60 <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 8000d60:	b580      	push	{r7, lr}
 8000d62:	b08a      	sub	sp, #40	@ 0x28
 8000d64:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000d66:	f107 0314 	add.w	r3, r7, #20
 8000d6a:	2200      	movs	r2, #0
 8000d6c:	601a      	str	r2, [r3, #0]
 8000d6e:	605a      	str	r2, [r3, #4]
 8000d70:	609a      	str	r2, [r3, #8]
 8000d72:	60da      	str	r2, [r3, #12]
 8000d74:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8000d76:	2300      	movs	r3, #0
 8000d78:	613b      	str	r3, [r7, #16]
 8000d7a:	4b3b      	ldr	r3, [pc, #236]	@ (8000e68 <MX_GPIO_Init+0x108>)
 8000d7c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d7e:	4a3a      	ldr	r2, [pc, #232]	@ (8000e68 <MX_GPIO_Init+0x108>)
 8000d80:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000d84:	6313      	str	r3, [r2, #48]	@ 0x30
 8000d86:	4b38      	ldr	r3, [pc, #224]	@ (8000e68 <MX_GPIO_Init+0x108>)
 8000d88:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d8a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8000d8e:	613b      	str	r3, [r7, #16]
 8000d90:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8000d92:	2300      	movs	r3, #0
 8000d94:	60fb      	str	r3, [r7, #12]
 8000d96:	4b34      	ldr	r3, [pc, #208]	@ (8000e68 <MX_GPIO_Init+0x108>)
 8000d98:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000d9a:	4a33      	ldr	r2, [pc, #204]	@ (8000e68 <MX_GPIO_Init+0x108>)
 8000d9c:	f043 0304 	orr.w	r3, r3, #4
 8000da0:	6313      	str	r3, [r2, #48]	@ 0x30
 8000da2:	4b31      	ldr	r3, [pc, #196]	@ (8000e68 <MX_GPIO_Init+0x108>)
 8000da4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000da6:	f003 0304 	and.w	r3, r3, #4
 8000daa:	60fb      	str	r3, [r7, #12]
 8000dac:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8000dae:	2300      	movs	r3, #0
 8000db0:	60bb      	str	r3, [r7, #8]
 8000db2:	4b2d      	ldr	r3, [pc, #180]	@ (8000e68 <MX_GPIO_Init+0x108>)
 8000db4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000db6:	4a2c      	ldr	r2, [pc, #176]	@ (8000e68 <MX_GPIO_Init+0x108>)
 8000db8:	f043 0301 	orr.w	r3, r3, #1
 8000dbc:	6313      	str	r3, [r2, #48]	@ 0x30
 8000dbe:	4b2a      	ldr	r3, [pc, #168]	@ (8000e68 <MX_GPIO_Init+0x108>)
 8000dc0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000dc2:	f003 0301 	and.w	r3, r3, #1
 8000dc6:	60bb      	str	r3, [r7, #8]
 8000dc8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8000dca:	2300      	movs	r3, #0
 8000dcc:	607b      	str	r3, [r7, #4]
 8000dce:	4b26      	ldr	r3, [pc, #152]	@ (8000e68 <MX_GPIO_Init+0x108>)
 8000dd0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000dd2:	4a25      	ldr	r2, [pc, #148]	@ (8000e68 <MX_GPIO_Init+0x108>)
 8000dd4:	f043 0302 	orr.w	r3, r3, #2
 8000dd8:	6313      	str	r3, [r2, #48]	@ 0x30
 8000dda:	4b23      	ldr	r3, [pc, #140]	@ (8000e68 <MX_GPIO_Init+0x108>)
 8000ddc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000dde:	f003 0302 	and.w	r3, r3, #2
 8000de2:	607b      	str	r3, [r7, #4]
 8000de4:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_7, GPIO_PIN_RESET);
 8000de6:	2200      	movs	r2, #0
 8000de8:	218c      	movs	r1, #140	@ 0x8c
 8000dea:	4820      	ldr	r0, [pc, #128]	@ (8000e6c <MX_GPIO_Init+0x10c>)
 8000dec:	f002 f970 	bl	80030d0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_9, GPIO_PIN_RESET);
 8000df0:	2200      	movs	r2, #0
 8000df2:	f240 2112 	movw	r1, #530	@ 0x212
 8000df6:	481e      	ldr	r0, [pc, #120]	@ (8000e70 <MX_GPIO_Init+0x110>)
 8000df8:	f002 f96a 	bl	80030d0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1|GPIO_PIN_13|GPIO_PIN_15|GPIO_PIN_5
 8000dfc:	2200      	movs	r2, #0
 8000dfe:	f24a 2162 	movw	r1, #41570	@ 0xa262
 8000e02:	481c      	ldr	r0, [pc, #112]	@ (8000e74 <MX_GPIO_Init+0x114>)
 8000e04:	f002 f964 	bl	80030d0 <HAL_GPIO_WritePin>
                          |GPIO_PIN_6|GPIO_PIN_9, GPIO_PIN_RESET);

  /*Configure GPIO pins : PC2 PC3 PC7 */
  GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3|GPIO_PIN_7;
 8000e08:	238c      	movs	r3, #140	@ 0x8c
 8000e0a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e0c:	2301      	movs	r3, #1
 8000e0e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e10:	2300      	movs	r3, #0
 8000e12:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e14:	2300      	movs	r3, #0
 8000e16:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8000e18:	f107 0314 	add.w	r3, r7, #20
 8000e1c:	4619      	mov	r1, r3
 8000e1e:	4813      	ldr	r0, [pc, #76]	@ (8000e6c <MX_GPIO_Init+0x10c>)
 8000e20:	f001 ffc2 	bl	8002da8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA1 PA4 PA9 */
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_4|GPIO_PIN_9;
 8000e24:	f240 2312 	movw	r3, #530	@ 0x212
 8000e28:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e2a:	2301      	movs	r3, #1
 8000e2c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e2e:	2300      	movs	r3, #0
 8000e30:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e32:	2300      	movs	r3, #0
 8000e34:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8000e36:	f107 0314 	add.w	r3, r7, #20
 8000e3a:	4619      	mov	r1, r3
 8000e3c:	480c      	ldr	r0, [pc, #48]	@ (8000e70 <MX_GPIO_Init+0x110>)
 8000e3e:	f001 ffb3 	bl	8002da8 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB1 PB13 PB15 PB5
                           PB6 PB9 */
  GPIO_InitStruct.Pin = GPIO_PIN_1|GPIO_PIN_13|GPIO_PIN_15|GPIO_PIN_5
 8000e42:	f24a 2362 	movw	r3, #41570	@ 0xa262
 8000e46:	617b      	str	r3, [r7, #20]
                          |GPIO_PIN_6|GPIO_PIN_9;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8000e48:	2301      	movs	r3, #1
 8000e4a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000e4c:	2300      	movs	r3, #0
 8000e4e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8000e50:	2300      	movs	r3, #0
 8000e52:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000e54:	f107 0314 	add.w	r3, r7, #20
 8000e58:	4619      	mov	r1, r3
 8000e5a:	4806      	ldr	r0, [pc, #24]	@ (8000e74 <MX_GPIO_Init+0x114>)
 8000e5c:	f001 ffa4 	bl	8002da8 <HAL_GPIO_Init>

}
 8000e60:	bf00      	nop
 8000e62:	3728      	adds	r7, #40	@ 0x28
 8000e64:	46bd      	mov	sp, r7
 8000e66:	bd80      	pop	{r7, pc}
 8000e68:	40023800 	.word	0x40023800
 8000e6c:	40020800 	.word	0x40020800
 8000e70:	40020000 	.word	0x40020000
 8000e74:	40020400 	.word	0x40020400

08000e78 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 8000e78:	b580      	push	{r7, lr}
 8000e7a:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8000e7c:	4b12      	ldr	r3, [pc, #72]	@ (8000ec8 <MX_I2C1_Init+0x50>)
 8000e7e:	4a13      	ldr	r2, [pc, #76]	@ (8000ecc <MX_I2C1_Init+0x54>)
 8000e80:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 400000;
 8000e82:	4b11      	ldr	r3, [pc, #68]	@ (8000ec8 <MX_I2C1_Init+0x50>)
 8000e84:	4a12      	ldr	r2, [pc, #72]	@ (8000ed0 <MX_I2C1_Init+0x58>)
 8000e86:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 8000e88:	4b0f      	ldr	r3, [pc, #60]	@ (8000ec8 <MX_I2C1_Init+0x50>)
 8000e8a:	2200      	movs	r2, #0
 8000e8c:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 8000e8e:	4b0e      	ldr	r3, [pc, #56]	@ (8000ec8 <MX_I2C1_Init+0x50>)
 8000e90:	2200      	movs	r2, #0
 8000e92:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8000e94:	4b0c      	ldr	r3, [pc, #48]	@ (8000ec8 <MX_I2C1_Init+0x50>)
 8000e96:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 8000e9a:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8000e9c:	4b0a      	ldr	r3, [pc, #40]	@ (8000ec8 <MX_I2C1_Init+0x50>)
 8000e9e:	2200      	movs	r2, #0
 8000ea0:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 8000ea2:	4b09      	ldr	r3, [pc, #36]	@ (8000ec8 <MX_I2C1_Init+0x50>)
 8000ea4:	2200      	movs	r2, #0
 8000ea6:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8000ea8:	4b07      	ldr	r3, [pc, #28]	@ (8000ec8 <MX_I2C1_Init+0x50>)
 8000eaa:	2200      	movs	r2, #0
 8000eac:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8000eae:	4b06      	ldr	r3, [pc, #24]	@ (8000ec8 <MX_I2C1_Init+0x50>)
 8000eb0:	2200      	movs	r2, #0
 8000eb2:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8000eb4:	4804      	ldr	r0, [pc, #16]	@ (8000ec8 <MX_I2C1_Init+0x50>)
 8000eb6:	f002 f925 	bl	8003104 <HAL_I2C_Init>
 8000eba:	4603      	mov	r3, r0
 8000ebc:	2b00      	cmp	r3, #0
 8000ebe:	d001      	beq.n	8000ec4 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 8000ec0:	f000 ff42 	bl	8001d48 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8000ec4:	bf00      	nop
 8000ec6:	bd80      	pop	{r7, pc}
 8000ec8:	20000028 	.word	0x20000028
 8000ecc:	40005400 	.word	0x40005400
 8000ed0:	00061a80 	.word	0x00061a80

08000ed4 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 8000ed4:	b580      	push	{r7, lr}
 8000ed6:	b08a      	sub	sp, #40	@ 0x28
 8000ed8:	af00      	add	r7, sp, #0
 8000eda:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8000edc:	f107 0314 	add.w	r3, r7, #20
 8000ee0:	2200      	movs	r2, #0
 8000ee2:	601a      	str	r2, [r3, #0]
 8000ee4:	605a      	str	r2, [r3, #4]
 8000ee6:	609a      	str	r2, [r3, #8]
 8000ee8:	60da      	str	r2, [r3, #12]
 8000eea:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 8000eec:	687b      	ldr	r3, [r7, #4]
 8000eee:	681b      	ldr	r3, [r3, #0]
 8000ef0:	4a19      	ldr	r2, [pc, #100]	@ (8000f58 <HAL_I2C_MspInit+0x84>)
 8000ef2:	4293      	cmp	r3, r2
 8000ef4:	d12c      	bne.n	8000f50 <HAL_I2C_MspInit+0x7c>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8000ef6:	2300      	movs	r3, #0
 8000ef8:	613b      	str	r3, [r7, #16]
 8000efa:	4b18      	ldr	r3, [pc, #96]	@ (8000f5c <HAL_I2C_MspInit+0x88>)
 8000efc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000efe:	4a17      	ldr	r2, [pc, #92]	@ (8000f5c <HAL_I2C_MspInit+0x88>)
 8000f00:	f043 0302 	orr.w	r3, r3, #2
 8000f04:	6313      	str	r3, [r2, #48]	@ 0x30
 8000f06:	4b15      	ldr	r3, [pc, #84]	@ (8000f5c <HAL_I2C_MspInit+0x88>)
 8000f08:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000f0a:	f003 0302 	and.w	r3, r3, #2
 8000f0e:	613b      	str	r3, [r7, #16]
 8000f10:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB7     ------> I2C1_SDA
    PB8     ------> I2C1_SCL
    */
    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_8;
 8000f12:	f44f 73c0 	mov.w	r3, #384	@ 0x180
 8000f16:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8000f18:	2312      	movs	r3, #18
 8000f1a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8000f1c:	2300      	movs	r3, #0
 8000f1e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8000f20:	2303      	movs	r3, #3
 8000f22:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8000f24:	2304      	movs	r3, #4
 8000f26:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8000f28:	f107 0314 	add.w	r3, r7, #20
 8000f2c:	4619      	mov	r1, r3
 8000f2e:	480c      	ldr	r0, [pc, #48]	@ (8000f60 <HAL_I2C_MspInit+0x8c>)
 8000f30:	f001 ff3a 	bl	8002da8 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8000f34:	2300      	movs	r3, #0
 8000f36:	60fb      	str	r3, [r7, #12]
 8000f38:	4b08      	ldr	r3, [pc, #32]	@ (8000f5c <HAL_I2C_MspInit+0x88>)
 8000f3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f3c:	4a07      	ldr	r2, [pc, #28]	@ (8000f5c <HAL_I2C_MspInit+0x88>)
 8000f3e:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8000f42:	6413      	str	r3, [r2, #64]	@ 0x40
 8000f44:	4b05      	ldr	r3, [pc, #20]	@ (8000f5c <HAL_I2C_MspInit+0x88>)
 8000f46:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8000f48:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8000f4c:	60fb      	str	r3, [r7, #12]
 8000f4e:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 8000f50:	bf00      	nop
 8000f52:	3728      	adds	r7, #40	@ 0x28
 8000f54:	46bd      	mov	sp, r7
 8000f56:	bd80      	pop	{r7, pc}
 8000f58:	40005400 	.word	0x40005400
 8000f5c:	40023800 	.word	0x40023800
 8000f60:	40020400 	.word	0x40020400

08000f64 <RC522_SPI_Transfer>:
/*
 * Naziv funkcije: RC522_SPI_Transfer
 * Opis: Slanje jednog bajta podataka preko SPI i istovremeno primanje odgovora.
 * Napomena: MFRC522 uvijek vraća neki podatak pri SPI prijenosu, zato koristimo TransmitReceive.
 */
uint8_t RC522_SPI_Transfer(uchar data) {
 8000f64:	b580      	push	{r7, lr}
 8000f66:	b086      	sub	sp, #24
 8000f68:	af02      	add	r7, sp, #8
 8000f6a:	4603      	mov	r3, r0
 8000f6c:	71fb      	strb	r3, [r7, #7]
	uchar rx_data;
	HAL_SPI_TransmitReceive(HSPI_INSTANCE, &data, &rx_data, 1, 100); // Timeout 100ms - dovoljno za brze transakcije
 8000f6e:	f107 020f 	add.w	r2, r7, #15
 8000f72:	1df9      	adds	r1, r7, #7
 8000f74:	2364      	movs	r3, #100	@ 0x64
 8000f76:	9300      	str	r3, [sp, #0]
 8000f78:	2301      	movs	r3, #1
 8000f7a:	4804      	ldr	r0, [pc, #16]	@ (8000f8c <RC522_SPI_Transfer+0x28>)
 8000f7c:	f003 fb5b 	bl	8004636 <HAL_SPI_TransmitReceive>

	return rx_data;
 8000f80:	7bfb      	ldrb	r3, [r7, #15]
}
 8000f82:	4618      	mov	r0, r3
 8000f84:	3710      	adds	r7, #16
 8000f86:	46bd      	mov	sp, r7
 8000f88:	bd80      	pop	{r7, pc}
 8000f8a:	bf00      	nop
 8000f8c:	200004d0 	.word	0x200004d0

08000f90 <Write_MFRC522>:
/*
 * Naziv funkcije: Write_MFRC522
 * Opis: Upis vrijednosti u registar RC522.
 * Napomena: CS pin mora biti LOW prije slanja i HIGH nakon slanja da bi RC522 ispravno registrirao naredbu.
 */
void Write_MFRC522(uchar addr, uchar val) {
 8000f90:	b580      	push	{r7, lr}
 8000f92:	b082      	sub	sp, #8
 8000f94:	af00      	add	r7, sp, #0
 8000f96:	4603      	mov	r3, r0
 8000f98:	460a      	mov	r2, r1
 8000f9a:	71fb      	strb	r3, [r7, #7]
 8000f9c:	4613      	mov	r3, r2
 8000f9e:	71bb      	strb	r3, [r7, #6]
	/* Aktivacija SPI veze prema RC522 */
	HAL_GPIO_WritePin(MFRC522_CS_PORT, MFRC522_CS_PIN, GPIO_PIN_RESET);
 8000fa0:	2200      	movs	r2, #0
 8000fa2:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000fa6:	480d      	ldr	r0, [pc, #52]	@ (8000fdc <Write_MFRC522+0x4c>)
 8000fa8:	f002 f892 	bl	80030d0 <HAL_GPIO_WritePin>

	/* Šaljemo adresu registra (shift lijevo, zadnji bit 0 = write) */
	RC522_SPI_Transfer((addr << 1) & 0x7E);
 8000fac:	79fb      	ldrb	r3, [r7, #7]
 8000fae:	005b      	lsls	r3, r3, #1
 8000fb0:	b2db      	uxtb	r3, r3
 8000fb2:	f003 037e 	and.w	r3, r3, #126	@ 0x7e
 8000fb6:	b2db      	uxtb	r3, r3
 8000fb8:	4618      	mov	r0, r3
 8000fba:	f7ff ffd3 	bl	8000f64 <RC522_SPI_Transfer>
	/* Šaljemo vrijednost za upis */
	RC522_SPI_Transfer(val);
 8000fbe:	79bb      	ldrb	r3, [r7, #6]
 8000fc0:	4618      	mov	r0, r3
 8000fc2:	f7ff ffcf 	bl	8000f64 <RC522_SPI_Transfer>

	/* Deaktivacija SPI veze */
	HAL_GPIO_WritePin(MFRC522_CS_PORT, MFRC522_CS_PIN, GPIO_PIN_SET);
 8000fc6:	2201      	movs	r2, #1
 8000fc8:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000fcc:	4803      	ldr	r0, [pc, #12]	@ (8000fdc <Write_MFRC522+0x4c>)
 8000fce:	f002 f87f 	bl	80030d0 <HAL_GPIO_WritePin>
}
 8000fd2:	bf00      	nop
 8000fd4:	3708      	adds	r7, #8
 8000fd6:	46bd      	mov	sp, r7
 8000fd8:	bd80      	pop	{r7, pc}
 8000fda:	bf00      	nop
 8000fdc:	40020400 	.word	0x40020400

08000fe0 <Read_MFRC522>:
/*
 * Naziv funkcije: Read_MFRC522
 * Opis: Čitanje vrijednosti iz registra RC522.
 * Napomena: Zadnji bit adrese je 1 = read.
 */
uchar Read_MFRC522(uchar addr) {
 8000fe0:	b580      	push	{r7, lr}
 8000fe2:	b084      	sub	sp, #16
 8000fe4:	af00      	add	r7, sp, #0
 8000fe6:	4603      	mov	r3, r0
 8000fe8:	71fb      	strb	r3, [r7, #7]
	uchar val;

	HAL_GPIO_WritePin(MFRC522_CS_PORT, MFRC522_CS_PIN, GPIO_PIN_RESET);
 8000fea:	2200      	movs	r2, #0
 8000fec:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8000ff0:	4810      	ldr	r0, [pc, #64]	@ (8001034 <Read_MFRC522+0x54>)
 8000ff2:	f002 f86d 	bl	80030d0 <HAL_GPIO_WritePin>

	RC522_SPI_Transfer(((addr << 1) & 0x7E) | 0x80); // MSB=1 -> read mode
 8000ff6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8000ffa:	005b      	lsls	r3, r3, #1
 8000ffc:	b25b      	sxtb	r3, r3
 8000ffe:	f003 037e 	and.w	r3, r3, #126	@ 0x7e
 8001002:	b25b      	sxtb	r3, r3
 8001004:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001008:	b25b      	sxtb	r3, r3
 800100a:	b2db      	uxtb	r3, r3
 800100c:	4618      	mov	r0, r3
 800100e:	f7ff ffa9 	bl	8000f64 <RC522_SPI_Transfer>
	val = RC522_SPI_Transfer(0x00); // Pošaljemo dummy bajt da dobijemo odgovor
 8001012:	2000      	movs	r0, #0
 8001014:	f7ff ffa6 	bl	8000f64 <RC522_SPI_Transfer>
 8001018:	4603      	mov	r3, r0
 800101a:	73fb      	strb	r3, [r7, #15]

	HAL_GPIO_WritePin(MFRC522_CS_PORT, MFRC522_CS_PIN, GPIO_PIN_SET);
 800101c:	2201      	movs	r2, #1
 800101e:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001022:	4804      	ldr	r0, [pc, #16]	@ (8001034 <Read_MFRC522+0x54>)
 8001024:	f002 f854 	bl	80030d0 <HAL_GPIO_WritePin>

	return val;
 8001028:	7bfb      	ldrb	r3, [r7, #15]
}
 800102a:	4618      	mov	r0, r3
 800102c:	3710      	adds	r7, #16
 800102e:	46bd      	mov	sp, r7
 8001030:	bd80      	pop	{r7, pc}
 8001032:	bf00      	nop
 8001034:	40020400 	.word	0x40020400

08001038 <SetBitMask>:
/*
 * Naziv funkcije: SetBitMask
 * Opis: Postavlja određene bitove u registru.
 * Koristi se za uključivanje pojedinih funkcija bez mijenjanja ostalih bitova.
 */
void SetBitMask(uchar reg, uchar mask) {
 8001038:	b580      	push	{r7, lr}
 800103a:	b084      	sub	sp, #16
 800103c:	af00      	add	r7, sp, #0
 800103e:	4603      	mov	r3, r0
 8001040:	460a      	mov	r2, r1
 8001042:	71fb      	strb	r3, [r7, #7]
 8001044:	4613      	mov	r3, r2
 8001046:	71bb      	strb	r3, [r7, #6]
	uchar tmp = Read_MFRC522(reg);
 8001048:	79fb      	ldrb	r3, [r7, #7]
 800104a:	4618      	mov	r0, r3
 800104c:	f7ff ffc8 	bl	8000fe0 <Read_MFRC522>
 8001050:	4603      	mov	r3, r0
 8001052:	73fb      	strb	r3, [r7, #15]
	Write_MFRC522(reg, tmp | mask);
 8001054:	7bfa      	ldrb	r2, [r7, #15]
 8001056:	79bb      	ldrb	r3, [r7, #6]
 8001058:	4313      	orrs	r3, r2
 800105a:	b2da      	uxtb	r2, r3
 800105c:	79fb      	ldrb	r3, [r7, #7]
 800105e:	4611      	mov	r1, r2
 8001060:	4618      	mov	r0, r3
 8001062:	f7ff ff95 	bl	8000f90 <Write_MFRC522>
}
 8001066:	bf00      	nop
 8001068:	3710      	adds	r7, #16
 800106a:	46bd      	mov	sp, r7
 800106c:	bd80      	pop	{r7, pc}

0800106e <ClearBitMask>:
/*
 * Naziv funkcije: ClearBitMask
 * Opis: Briše određene bitove u registru.
 * Koristi se za gašenje pojedinih funkcija bez utjecaja na ostale bitove.
 */
void ClearBitMask(uchar reg, uchar mask) {
 800106e:	b580      	push	{r7, lr}
 8001070:	b084      	sub	sp, #16
 8001072:	af00      	add	r7, sp, #0
 8001074:	4603      	mov	r3, r0
 8001076:	460a      	mov	r2, r1
 8001078:	71fb      	strb	r3, [r7, #7]
 800107a:	4613      	mov	r3, r2
 800107c:	71bb      	strb	r3, [r7, #6]
	uchar tmp = Read_MFRC522(reg);
 800107e:	79fb      	ldrb	r3, [r7, #7]
 8001080:	4618      	mov	r0, r3
 8001082:	f7ff ffad 	bl	8000fe0 <Read_MFRC522>
 8001086:	4603      	mov	r3, r0
 8001088:	73fb      	strb	r3, [r7, #15]
	Write_MFRC522(reg, tmp & (~mask));
 800108a:	f997 3006 	ldrsb.w	r3, [r7, #6]
 800108e:	43db      	mvns	r3, r3
 8001090:	b25a      	sxtb	r2, r3
 8001092:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001096:	4013      	ands	r3, r2
 8001098:	b25b      	sxtb	r3, r3
 800109a:	b2da      	uxtb	r2, r3
 800109c:	79fb      	ldrb	r3, [r7, #7]
 800109e:	4611      	mov	r1, r2
 80010a0:	4618      	mov	r0, r3
 80010a2:	f7ff ff75 	bl	8000f90 <Write_MFRC522>
}
 80010a6:	bf00      	nop
 80010a8:	3710      	adds	r7, #16
 80010aa:	46bd      	mov	sp, r7
 80010ac:	bd80      	pop	{r7, pc}

080010ae <AntennaOn>:
/*
 * Naziv funkcije: AntennaOn
 * Opis: Uključuje RF antenu.
 * Napomena: Potrebno je imati uključenu antenu prije komunikacije s karticom.
 */
void AntennaOn(void) {
 80010ae:	b580      	push	{r7, lr}
 80010b0:	af00      	add	r7, sp, #0
	Read_MFRC522(TxControlReg); // Čitanje registra nije nužno, ali se često radi radi stabilnosti
 80010b2:	2014      	movs	r0, #20
 80010b4:	f7ff ff94 	bl	8000fe0 <Read_MFRC522>
	SetBitMask(TxControlReg, 0x03);
 80010b8:	2103      	movs	r1, #3
 80010ba:	2014      	movs	r0, #20
 80010bc:	f7ff ffbc 	bl	8001038 <SetBitMask>
}
 80010c0:	bf00      	nop
 80010c2:	bd80      	pop	{r7, pc}

080010c4 <MFRC522_Reset>:
/*
 * Naziv funkcije: MFRC522_Reset
 * Opis: Resetira MFRC522 čip.
 * Napomena: Nakon reseta potrebno je ponovno inicijalizirati sve registre.
 */
void MFRC522_Reset(void) {
 80010c4:	b580      	push	{r7, lr}
 80010c6:	af00      	add	r7, sp, #0
	Write_MFRC522(CommandReg, PCD_RESETPHASE);
 80010c8:	210f      	movs	r1, #15
 80010ca:	2001      	movs	r0, #1
 80010cc:	f7ff ff60 	bl	8000f90 <Write_MFRC522>
}
 80010d0:	bf00      	nop
 80010d2:	bd80      	pop	{r7, pc}

080010d4 <MFRC522_Init>:
/*
 * Naziv funkcije: MFRC522_Init
 * Opis: Inicijalizira MFRC522 u radno stanje.
 * Napomena: Postavlja tajmere, modulaciju, CRC i uključuje antenu.
 */
void MFRC522_Init(void) {
 80010d4:	b580      	push	{r7, lr}
 80010d6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(MFRC522_CS_PORT, MFRC522_CS_PIN, GPIO_PIN_SET);
 80010d8:	2201      	movs	r2, #1
 80010da:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80010de:	4813      	ldr	r0, [pc, #76]	@ (800112c <MFRC522_Init+0x58>)
 80010e0:	f001 fff6 	bl	80030d0 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(MFRC522_RST_PORT, MFRC522_RST_PIN, GPIO_PIN_SET);
 80010e4:	2201      	movs	r2, #1
 80010e6:	2180      	movs	r1, #128	@ 0x80
 80010e8:	4811      	ldr	r0, [pc, #68]	@ (8001130 <MFRC522_Init+0x5c>)
 80010ea:	f001 fff1 	bl	80030d0 <HAL_GPIO_WritePin>
	MFRC522_Reset();
 80010ee:	f7ff ffe9 	bl	80010c4 <MFRC522_Reset>

	Write_MFRC522(TModeReg, 0x8D);
 80010f2:	218d      	movs	r1, #141	@ 0x8d
 80010f4:	202a      	movs	r0, #42	@ 0x2a
 80010f6:	f7ff ff4b 	bl	8000f90 <Write_MFRC522>
	Write_MFRC522(TPrescalerReg, 0x3E);
 80010fa:	213e      	movs	r1, #62	@ 0x3e
 80010fc:	202b      	movs	r0, #43	@ 0x2b
 80010fe:	f7ff ff47 	bl	8000f90 <Write_MFRC522>
	Write_MFRC522(TReloadRegL, 30);
 8001102:	211e      	movs	r1, #30
 8001104:	202d      	movs	r0, #45	@ 0x2d
 8001106:	f7ff ff43 	bl	8000f90 <Write_MFRC522>
	Write_MFRC522(TReloadRegH, 0);
 800110a:	2100      	movs	r1, #0
 800110c:	202c      	movs	r0, #44	@ 0x2c
 800110e:	f7ff ff3f 	bl	8000f90 <Write_MFRC522>

	Write_MFRC522(TxAutoReg, 0x40); // 100% ASK modulacija
 8001112:	2140      	movs	r1, #64	@ 0x40
 8001114:	2015      	movs	r0, #21
 8001116:	f7ff ff3b 	bl	8000f90 <Write_MFRC522>
	Write_MFRC522(ModeReg, 0x3D);   // CRC početna vrijednost 0x6363
 800111a:	213d      	movs	r1, #61	@ 0x3d
 800111c:	2011      	movs	r0, #17
 800111e:	f7ff ff37 	bl	8000f90 <Write_MFRC522>

	AntennaOn();
 8001122:	f7ff ffc4 	bl	80010ae <AntennaOn>
}
 8001126:	bf00      	nop
 8001128:	bd80      	pop	{r7, pc}
 800112a:	bf00      	nop
 800112c:	40020400 	.word	0x40020400
 8001130:	40020800 	.word	0x40020800

08001134 <MFRC522_ToCard>:
 * Naziv funkcije: MFRC522_ToCard
 * Opis: Glavna funkcija za slanje i primanje podataka između RC522 i kartice.
 * Napomena: Koristi FIFO buffer čipa, upravlja prekidima i provjerava greške.
 */
uchar MFRC522_ToCard(uchar command, uchar *sendData, uchar sendLen,
		uchar *backData, uint *backLen) {
 8001134:	b590      	push	{r4, r7, lr}
 8001136:	b089      	sub	sp, #36	@ 0x24
 8001138:	af00      	add	r7, sp, #0
 800113a:	60b9      	str	r1, [r7, #8]
 800113c:	607b      	str	r3, [r7, #4]
 800113e:	4603      	mov	r3, r0
 8001140:	73fb      	strb	r3, [r7, #15]
 8001142:	4613      	mov	r3, r2
 8001144:	73bb      	strb	r3, [r7, #14]
	uchar status = MI_ERR;
 8001146:	2302      	movs	r3, #2
 8001148:	77fb      	strb	r3, [r7, #31]
	uchar irqEn = 0x00;
 800114a:	2300      	movs	r3, #0
 800114c:	77bb      	strb	r3, [r7, #30]
	uchar waitIRq = 0x00;
 800114e:	2300      	movs	r3, #0
 8001150:	777b      	strb	r3, [r7, #29]
	uchar lastBits;
	uchar n;
	uint i;

	/* Određivanje prekida i čekanja ovisno o naredbi */
	switch (command) {
 8001152:	7bfb      	ldrb	r3, [r7, #15]
 8001154:	2b0c      	cmp	r3, #12
 8001156:	d006      	beq.n	8001166 <MFRC522_ToCard+0x32>
 8001158:	2b0e      	cmp	r3, #14
 800115a:	d109      	bne.n	8001170 <MFRC522_ToCard+0x3c>
	case PCD_AUTHENT:
		irqEn = 0x12;
 800115c:	2312      	movs	r3, #18
 800115e:	77bb      	strb	r3, [r7, #30]
		waitIRq = 0x10;
 8001160:	2310      	movs	r3, #16
 8001162:	777b      	strb	r3, [r7, #29]
		break;
 8001164:	e004      	b.n	8001170 <MFRC522_ToCard+0x3c>
	case PCD_TRANSCEIVE:
		irqEn = 0x77;
 8001166:	2377      	movs	r3, #119	@ 0x77
 8001168:	77bb      	strb	r3, [r7, #30]
		waitIRq = 0x30;
 800116a:	2330      	movs	r3, #48	@ 0x30
 800116c:	777b      	strb	r3, [r7, #29]
		break;
 800116e:	bf00      	nop
	}

	Write_MFRC522(CommIEnReg, irqEn | 0x80); // Omogućavamo prekide
 8001170:	7fbb      	ldrb	r3, [r7, #30]
 8001172:	f063 037f 	orn	r3, r3, #127	@ 0x7f
 8001176:	b2db      	uxtb	r3, r3
 8001178:	4619      	mov	r1, r3
 800117a:	2002      	movs	r0, #2
 800117c:	f7ff ff08 	bl	8000f90 <Write_MFRC522>
	ClearBitMask(CommIrqReg, 0x80);        // Brišemo zastavice prekida
 8001180:	2180      	movs	r1, #128	@ 0x80
 8001182:	2004      	movs	r0, #4
 8001184:	f7ff ff73 	bl	800106e <ClearBitMask>
	SetBitMask(FIFOLevelReg, 0x80);        // Reset FIFO buffera
 8001188:	2180      	movs	r1, #128	@ 0x80
 800118a:	200a      	movs	r0, #10
 800118c:	f7ff ff54 	bl	8001038 <SetBitMask>

	Write_MFRC522(CommandReg, PCD_IDLE);   // Prekid trenutne operacije
 8001190:	2100      	movs	r1, #0
 8001192:	2001      	movs	r0, #1
 8001194:	f7ff fefc 	bl	8000f90 <Write_MFRC522>

	/* Slanje podataka u FIFO */
	for (i = 0; i < sendLen; i++)
 8001198:	2300      	movs	r3, #0
 800119a:	61bb      	str	r3, [r7, #24]
 800119c:	e00a      	b.n	80011b4 <MFRC522_ToCard+0x80>
		Write_MFRC522(FIFODataReg, sendData[i]);
 800119e:	68ba      	ldr	r2, [r7, #8]
 80011a0:	69bb      	ldr	r3, [r7, #24]
 80011a2:	4413      	add	r3, r2
 80011a4:	781b      	ldrb	r3, [r3, #0]
 80011a6:	4619      	mov	r1, r3
 80011a8:	2009      	movs	r0, #9
 80011aa:	f7ff fef1 	bl	8000f90 <Write_MFRC522>
	for (i = 0; i < sendLen; i++)
 80011ae:	69bb      	ldr	r3, [r7, #24]
 80011b0:	3301      	adds	r3, #1
 80011b2:	61bb      	str	r3, [r7, #24]
 80011b4:	7bbb      	ldrb	r3, [r7, #14]
 80011b6:	69ba      	ldr	r2, [r7, #24]
 80011b8:	429a      	cmp	r2, r3
 80011ba:	d3f0      	bcc.n	800119e <MFRC522_ToCard+0x6a>

	/* Pokretanje naredbe */
	Write_MFRC522(CommandReg, command);
 80011bc:	7bfb      	ldrb	r3, [r7, #15]
 80011be:	4619      	mov	r1, r3
 80011c0:	2001      	movs	r0, #1
 80011c2:	f7ff fee5 	bl	8000f90 <Write_MFRC522>
	if (command == PCD_TRANSCEIVE)
 80011c6:	7bfb      	ldrb	r3, [r7, #15]
 80011c8:	2b0c      	cmp	r3, #12
 80011ca:	d103      	bne.n	80011d4 <MFRC522_ToCard+0xa0>
		SetBitMask(BitFramingReg, 0x80); // StartSend = 1
 80011cc:	2180      	movs	r1, #128	@ 0x80
 80011ce:	200d      	movs	r0, #13
 80011d0:	f7ff ff32 	bl	8001038 <SetBitMask>

	/* Čekanje završetka operacije */
	i = 2000; // Timeout - prilagoditi ako je RC522 spor
 80011d4:	f44f 63fa 	mov.w	r3, #2000	@ 0x7d0
 80011d8:	61bb      	str	r3, [r7, #24]
	do {
		n = Read_MFRC522(CommIrqReg);
 80011da:	2004      	movs	r0, #4
 80011dc:	f7ff ff00 	bl	8000fe0 <Read_MFRC522>
 80011e0:	4603      	mov	r3, r0
 80011e2:	773b      	strb	r3, [r7, #28]
		i--;
 80011e4:	69bb      	ldr	r3, [r7, #24]
 80011e6:	3b01      	subs	r3, #1
 80011e8:	61bb      	str	r3, [r7, #24]
	} while ((i != 0) && !(n & 0x01) && !(n & waitIRq));
 80011ea:	69bb      	ldr	r3, [r7, #24]
 80011ec:	2b00      	cmp	r3, #0
 80011ee:	d00a      	beq.n	8001206 <MFRC522_ToCard+0xd2>
 80011f0:	7f3b      	ldrb	r3, [r7, #28]
 80011f2:	f003 0301 	and.w	r3, r3, #1
 80011f6:	2b00      	cmp	r3, #0
 80011f8:	d105      	bne.n	8001206 <MFRC522_ToCard+0xd2>
 80011fa:	7f3a      	ldrb	r2, [r7, #28]
 80011fc:	7f7b      	ldrb	r3, [r7, #29]
 80011fe:	4013      	ands	r3, r2
 8001200:	b2db      	uxtb	r3, r3
 8001202:	2b00      	cmp	r3, #0
 8001204:	d0e9      	beq.n	80011da <MFRC522_ToCard+0xa6>

	ClearBitMask(BitFramingReg, 0x80); // Stop slanja
 8001206:	2180      	movs	r1, #128	@ 0x80
 8001208:	200d      	movs	r0, #13
 800120a:	f7ff ff30 	bl	800106e <ClearBitMask>

	/* Provjera rezultata */
	if (i != 0) {
 800120e:	69bb      	ldr	r3, [r7, #24]
 8001210:	2b00      	cmp	r3, #0
 8001212:	d050      	beq.n	80012b6 <MFRC522_ToCard+0x182>
		if (!(Read_MFRC522(ErrorReg) & 0x1B)) // Nema grešaka
 8001214:	2006      	movs	r0, #6
 8001216:	f7ff fee3 	bl	8000fe0 <Read_MFRC522>
 800121a:	4603      	mov	r3, r0
 800121c:	f003 031b 	and.w	r3, r3, #27
 8001220:	2b00      	cmp	r3, #0
 8001222:	d146      	bne.n	80012b2 <MFRC522_ToCard+0x17e>
		{
			status = MI_OK;
 8001224:	2300      	movs	r3, #0
 8001226:	77fb      	strb	r3, [r7, #31]
			if (n & irqEn & 0x01)
 8001228:	7f3a      	ldrb	r2, [r7, #28]
 800122a:	7fbb      	ldrb	r3, [r7, #30]
 800122c:	4013      	ands	r3, r2
 800122e:	b2db      	uxtb	r3, r3
 8001230:	f003 0301 	and.w	r3, r3, #1
 8001234:	2b00      	cmp	r3, #0
 8001236:	d001      	beq.n	800123c <MFRC522_ToCard+0x108>
				status = MI_NOTAGERR;
 8001238:	2301      	movs	r3, #1
 800123a:	77fb      	strb	r3, [r7, #31]

			if (command == PCD_TRANSCEIVE) {
 800123c:	7bfb      	ldrb	r3, [r7, #15]
 800123e:	2b0c      	cmp	r3, #12
 8001240:	d139      	bne.n	80012b6 <MFRC522_ToCard+0x182>
				n = Read_MFRC522(FIFOLevelReg);
 8001242:	200a      	movs	r0, #10
 8001244:	f7ff fecc 	bl	8000fe0 <Read_MFRC522>
 8001248:	4603      	mov	r3, r0
 800124a:	773b      	strb	r3, [r7, #28]
				lastBits = Read_MFRC522(ControlReg) & 0x07;
 800124c:	200c      	movs	r0, #12
 800124e:	f7ff fec7 	bl	8000fe0 <Read_MFRC522>
 8001252:	4603      	mov	r3, r0
 8001254:	f003 0307 	and.w	r3, r3, #7
 8001258:	75fb      	strb	r3, [r7, #23]
				*backLen = lastBits ? (n - 1) * 8 + lastBits : n * 8;
 800125a:	7dfb      	ldrb	r3, [r7, #23]
 800125c:	2b00      	cmp	r3, #0
 800125e:	d006      	beq.n	800126e <MFRC522_ToCard+0x13a>
 8001260:	7f3b      	ldrb	r3, [r7, #28]
 8001262:	3b01      	subs	r3, #1
 8001264:	00da      	lsls	r2, r3, #3
 8001266:	7dfb      	ldrb	r3, [r7, #23]
 8001268:	4413      	add	r3, r2
 800126a:	461a      	mov	r2, r3
 800126c:	e002      	b.n	8001274 <MFRC522_ToCard+0x140>
 800126e:	7f3b      	ldrb	r3, [r7, #28]
 8001270:	00db      	lsls	r3, r3, #3
 8001272:	461a      	mov	r2, r3
 8001274:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8001276:	601a      	str	r2, [r3, #0]
				if (n == 0)
 8001278:	7f3b      	ldrb	r3, [r7, #28]
 800127a:	2b00      	cmp	r3, #0
 800127c:	d101      	bne.n	8001282 <MFRC522_ToCard+0x14e>
					n = 1;
 800127e:	2301      	movs	r3, #1
 8001280:	773b      	strb	r3, [r7, #28]
				if (n > MAX_LEN)
 8001282:	7f3b      	ldrb	r3, [r7, #28]
 8001284:	2b10      	cmp	r3, #16
 8001286:	d901      	bls.n	800128c <MFRC522_ToCard+0x158>
					n = MAX_LEN;
 8001288:	2310      	movs	r3, #16
 800128a:	773b      	strb	r3, [r7, #28]

				for (i = 0; i < n; i++)
 800128c:	2300      	movs	r3, #0
 800128e:	61bb      	str	r3, [r7, #24]
 8001290:	e00a      	b.n	80012a8 <MFRC522_ToCard+0x174>
					backData[i] = Read_MFRC522(FIFODataReg);
 8001292:	687a      	ldr	r2, [r7, #4]
 8001294:	69bb      	ldr	r3, [r7, #24]
 8001296:	18d4      	adds	r4, r2, r3
 8001298:	2009      	movs	r0, #9
 800129a:	f7ff fea1 	bl	8000fe0 <Read_MFRC522>
 800129e:	4603      	mov	r3, r0
 80012a0:	7023      	strb	r3, [r4, #0]
				for (i = 0; i < n; i++)
 80012a2:	69bb      	ldr	r3, [r7, #24]
 80012a4:	3301      	adds	r3, #1
 80012a6:	61bb      	str	r3, [r7, #24]
 80012a8:	7f3b      	ldrb	r3, [r7, #28]
 80012aa:	69ba      	ldr	r2, [r7, #24]
 80012ac:	429a      	cmp	r2, r3
 80012ae:	d3f0      	bcc.n	8001292 <MFRC522_ToCard+0x15e>
 80012b0:	e001      	b.n	80012b6 <MFRC522_ToCard+0x182>
			}
		} else
			status = MI_ERR;
 80012b2:	2302      	movs	r3, #2
 80012b4:	77fb      	strb	r3, [r7, #31]
	}

	return status;
 80012b6:	7ffb      	ldrb	r3, [r7, #31]
}
 80012b8:	4618      	mov	r0, r3
 80012ba:	3724      	adds	r7, #36	@ 0x24
 80012bc:	46bd      	mov	sp, r7
 80012be:	bd90      	pop	{r4, r7, pc}

080012c0 <MFRC522_Request>:
 *                  PICC_REQALL = traži sve kartice u RF polju)
 *       TagType - polje u koje se sprema tip kartice (2 bajta)
 * Povrat: MI_OK ako je kartica pronađena i tip pročitan; MI_ERR inače.
 * Napomena: Ovo je prva funkcija u procesu detekcije kartice.
 */
uchar MFRC522_Request(uchar reqMode, uchar *TagType) {
 80012c0:	b580      	push	{r7, lr}
 80012c2:	b086      	sub	sp, #24
 80012c4:	af02      	add	r7, sp, #8
 80012c6:	4603      	mov	r3, r0
 80012c8:	6039      	str	r1, [r7, #0]
 80012ca:	71fb      	strb	r3, [r7, #7]
	uchar status;
	uint backBits; // broj bitova vraćenih iz odgovora

	Write_MFRC522(BitFramingReg, 0x07); // postavljanje broja validnih bitova u posljednjem bajtu (7 bitova)
 80012cc:	2107      	movs	r1, #7
 80012ce:	200d      	movs	r0, #13
 80012d0:	f7ff fe5e 	bl	8000f90 <Write_MFRC522>

	TagType[0] = reqMode; // spremamo tip zahtjeva u prvi bajt
 80012d4:	683b      	ldr	r3, [r7, #0]
 80012d6:	79fa      	ldrb	r2, [r7, #7]
 80012d8:	701a      	strb	r2, [r3, #0]
	status = MFRC522_ToCard(PCD_TRANSCEIVE, TagType, 1, TagType, &backBits);
 80012da:	f107 0308 	add.w	r3, r7, #8
 80012de:	9300      	str	r3, [sp, #0]
 80012e0:	683b      	ldr	r3, [r7, #0]
 80012e2:	2201      	movs	r2, #1
 80012e4:	6839      	ldr	r1, [r7, #0]
 80012e6:	200c      	movs	r0, #12
 80012e8:	f7ff ff24 	bl	8001134 <MFRC522_ToCard>
 80012ec:	4603      	mov	r3, r0
 80012ee:	73fb      	strb	r3, [r7, #15]

	// Ako odgovor nije MI_OK ili ako nema očekivanih 2 bajta (16 bitova)
	if ((status != MI_OK) || (backBits != 0x10))
 80012f0:	7bfb      	ldrb	r3, [r7, #15]
 80012f2:	2b00      	cmp	r3, #0
 80012f4:	d102      	bne.n	80012fc <MFRC522_Request+0x3c>
 80012f6:	68bb      	ldr	r3, [r7, #8]
 80012f8:	2b10      	cmp	r3, #16
 80012fa:	d001      	beq.n	8001300 <MFRC522_Request+0x40>
		status = MI_ERR;
 80012fc:	2302      	movs	r3, #2
 80012fe:	73fb      	strb	r3, [r7, #15]

	return status;
 8001300:	7bfb      	ldrb	r3, [r7, #15]
}
 8001302:	4618      	mov	r0, r3
 8001304:	3710      	adds	r7, #16
 8001306:	46bd      	mov	sp, r7
 8001308:	bd80      	pop	{r7, pc}

0800130a <MFRC522_Anticoll>:
 * Opis: Očitava serijski broj kartice koristeći anti-kolizijski postupak.
 * Ulaz: serNum - polje u koje se sprema serijski broj (5 bajtova, zadnji je kontrolni XOR).
 * Povrat: MI_OK ako je serijski broj uspješno očitan; MI_ERR inače.
 * Napomena: Sprječava kolizije kada je više kartica u RF polju.
 */
uchar MFRC522_Anticoll(uchar *serNum) {
 800130a:	b580      	push	{r7, lr}
 800130c:	b086      	sub	sp, #24
 800130e:	af02      	add	r7, sp, #8
 8001310:	6078      	str	r0, [r7, #4]
	uchar status;
	uchar i;
	uchar serNumCheck = 0; // kontrolni zbroj XOR svih bajtova
 8001312:	2300      	movs	r3, #0
 8001314:	737b      	strb	r3, [r7, #13]
	uint unLen;

	Write_MFRC522(BitFramingReg, 0x00); // bez dodatnog poravnanja bitova
 8001316:	2100      	movs	r1, #0
 8001318:	200d      	movs	r0, #13
 800131a:	f7ff fe39 	bl	8000f90 <Write_MFRC522>

	serNum[0] = PICC_ANTICOLL; // naredba za anti-koliziju
 800131e:	687b      	ldr	r3, [r7, #4]
 8001320:	2293      	movs	r2, #147	@ 0x93
 8001322:	701a      	strb	r2, [r3, #0]
	serNum[1] = 0x20; // NVB - broj bajtova koji se šalju i primaju
 8001324:	687b      	ldr	r3, [r7, #4]
 8001326:	3301      	adds	r3, #1
 8001328:	2220      	movs	r2, #32
 800132a:	701a      	strb	r2, [r3, #0]
	status = MFRC522_ToCard(PCD_TRANSCEIVE, serNum, 2, serNum, &unLen);
 800132c:	f107 0308 	add.w	r3, r7, #8
 8001330:	9300      	str	r3, [sp, #0]
 8001332:	687b      	ldr	r3, [r7, #4]
 8001334:	2202      	movs	r2, #2
 8001336:	6879      	ldr	r1, [r7, #4]
 8001338:	200c      	movs	r0, #12
 800133a:	f7ff fefb 	bl	8001134 <MFRC522_ToCard>
 800133e:	4603      	mov	r3, r0
 8001340:	73fb      	strb	r3, [r7, #15]

	if (status == MI_OK) {
 8001342:	7bfb      	ldrb	r3, [r7, #15]
 8001344:	2b00      	cmp	r3, #0
 8001346:	d118      	bne.n	800137a <MFRC522_Anticoll+0x70>
		// Računanje XOR svih 4 bajta serijskog broja
		for (i = 0; i < 4; i++)
 8001348:	2300      	movs	r3, #0
 800134a:	73bb      	strb	r3, [r7, #14]
 800134c:	e009      	b.n	8001362 <MFRC522_Anticoll+0x58>
			serNumCheck ^= serNum[i];
 800134e:	7bbb      	ldrb	r3, [r7, #14]
 8001350:	687a      	ldr	r2, [r7, #4]
 8001352:	4413      	add	r3, r2
 8001354:	781a      	ldrb	r2, [r3, #0]
 8001356:	7b7b      	ldrb	r3, [r7, #13]
 8001358:	4053      	eors	r3, r2
 800135a:	737b      	strb	r3, [r7, #13]
		for (i = 0; i < 4; i++)
 800135c:	7bbb      	ldrb	r3, [r7, #14]
 800135e:	3301      	adds	r3, #1
 8001360:	73bb      	strb	r3, [r7, #14]
 8001362:	7bbb      	ldrb	r3, [r7, #14]
 8001364:	2b03      	cmp	r3, #3
 8001366:	d9f2      	bls.n	800134e <MFRC522_Anticoll+0x44>

		// Provjera kontrolnog bajta (5. bajt)
		if (serNumCheck != serNum[i])
 8001368:	7bbb      	ldrb	r3, [r7, #14]
 800136a:	687a      	ldr	r2, [r7, #4]
 800136c:	4413      	add	r3, r2
 800136e:	781b      	ldrb	r3, [r3, #0]
 8001370:	7b7a      	ldrb	r2, [r7, #13]
 8001372:	429a      	cmp	r2, r3
 8001374:	d001      	beq.n	800137a <MFRC522_Anticoll+0x70>
			status = MI_ERR;
 8001376:	2302      	movs	r3, #2
 8001378:	73fb      	strb	r3, [r7, #15]
	}

	return status;
 800137a:	7bfb      	ldrb	r3, [r7, #15]
}
 800137c:	4618      	mov	r0, r3
 800137e:	3710      	adds	r7, #16
 8001380:	46bd      	mov	sp, r7
 8001382:	bd80      	pop	{r7, pc}
 8001384:	0000      	movs	r0, r0
	...

08001388 <HAL_TIM_IC_CaptureCallback>:
		;  // Čekaj dok ne istekne vrijeme

}

// callback funkcije
void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim) {
 8001388:	b580      	push	{r7, lr}
 800138a:	b082      	sub	sp, #8
 800138c:	af00      	add	r7, sp, #0
 800138e:	6078      	str	r0, [r7, #4]
	// 1. ULTRAZVUČNI
	if (htim->Channel == HAL_TIM_ACTIVE_CHANNEL_1) // ako je interupt na kanalu 1 aktivan
 8001390:	687b      	ldr	r3, [r7, #4]
 8001392:	7f1b      	ldrb	r3, [r3, #28]
 8001394:	2b01      	cmp	r3, #1
 8001396:	f040 8083 	bne.w	80014a0 <HAL_TIM_IC_CaptureCallback+0x118>
			{
		if (Is_First_Captured == 0) // Uhvati vrijeme uzlaznog ruba
 800139a:	4b99      	ldr	r3, [pc, #612]	@ (8001600 <HAL_TIM_IC_CaptureCallback+0x278>)
 800139c:	781b      	ldrb	r3, [r3, #0]
 800139e:	2b00      	cmp	r3, #0
 80013a0:	d11a      	bne.n	80013d8 <HAL_TIM_IC_CaptureCallback+0x50>
				{
			IC_Val1 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1); // pročitaj prvu vrijednost
 80013a2:	2100      	movs	r1, #0
 80013a4:	6878      	ldr	r0, [r7, #4]
 80013a6:	f004 fa99 	bl	80058dc <HAL_TIM_ReadCapturedValue>
 80013aa:	4603      	mov	r3, r0
 80013ac:	4a95      	ldr	r2, [pc, #596]	@ (8001604 <HAL_TIM_IC_CaptureCallback+0x27c>)
 80013ae:	6013      	str	r3, [r2, #0]
			Is_First_Captured = 1;  // postavi prvu vrijednost u 1
 80013b0:	4b93      	ldr	r3, [pc, #588]	@ (8001600 <HAL_TIM_IC_CaptureCallback+0x278>)
 80013b2:	2201      	movs	r2, #1
 80013b4:	701a      	strb	r2, [r3, #0]
			// mjenja polaritet na falling edge
			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1,
 80013b6:	687b      	ldr	r3, [r7, #4]
 80013b8:	681b      	ldr	r3, [r3, #0]
 80013ba:	6a1a      	ldr	r2, [r3, #32]
 80013bc:	687b      	ldr	r3, [r7, #4]
 80013be:	681b      	ldr	r3, [r3, #0]
 80013c0:	f022 020a 	bic.w	r2, r2, #10
 80013c4:	621a      	str	r2, [r3, #32]
 80013c6:	687b      	ldr	r3, [r7, #4]
 80013c8:	681b      	ldr	r3, [r3, #0]
 80013ca:	6a1a      	ldr	r2, [r3, #32]
 80013cc:	687b      	ldr	r3, [r7, #4]
 80013ce:	681b      	ldr	r3, [r3, #0]
 80013d0:	f042 0202 	orr.w	r2, r2, #2
 80013d4:	621a      	str	r2, [r3, #32]
 80013d6:	e063      	b.n	80014a0 <HAL_TIM_IC_CaptureCallback+0x118>
					TIM_INPUTCHANNELPOLARITY_FALLING); // Čekaj silazni rub
		}

		else if (Is_First_Captured == 1)   // ako je već u 1
 80013d8:	4b89      	ldr	r3, [pc, #548]	@ (8001600 <HAL_TIM_IC_CaptureCallback+0x278>)
 80013da:	781b      	ldrb	r3, [r3, #0]
 80013dc:	2b01      	cmp	r3, #1
 80013de:	d15f      	bne.n	80014a0 <HAL_TIM_IC_CaptureCallback+0x118>
				{
			IC_Val2 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_1); // pročitaj drugu vrijednost
 80013e0:	2100      	movs	r1, #0
 80013e2:	6878      	ldr	r0, [r7, #4]
 80013e4:	f004 fa7a 	bl	80058dc <HAL_TIM_ReadCapturedValue>
 80013e8:	4603      	mov	r3, r0
 80013ea:	4a87      	ldr	r2, [pc, #540]	@ (8001608 <HAL_TIM_IC_CaptureCallback+0x280>)
 80013ec:	6013      	str	r3, [r2, #0]
			__HAL_TIM_SET_COUNTER(htim, 0);  // resetiraj brojač
 80013ee:	687b      	ldr	r3, [r7, #4]
 80013f0:	681b      	ldr	r3, [r3, #0]
 80013f2:	2200      	movs	r2, #0
 80013f4:	625a      	str	r2, [r3, #36]	@ 0x24

			if (IC_Val2 > IC_Val1) {
 80013f6:	4b84      	ldr	r3, [pc, #528]	@ (8001608 <HAL_TIM_IC_CaptureCallback+0x280>)
 80013f8:	681a      	ldr	r2, [r3, #0]
 80013fa:	4b82      	ldr	r3, [pc, #520]	@ (8001604 <HAL_TIM_IC_CaptureCallback+0x27c>)
 80013fc:	681b      	ldr	r3, [r3, #0]
 80013fe:	429a      	cmp	r2, r3
 8001400:	d907      	bls.n	8001412 <HAL_TIM_IC_CaptureCallback+0x8a>
				Difference = IC_Val2 - IC_Val1;
 8001402:	4b81      	ldr	r3, [pc, #516]	@ (8001608 <HAL_TIM_IC_CaptureCallback+0x280>)
 8001404:	681a      	ldr	r2, [r3, #0]
 8001406:	4b7f      	ldr	r3, [pc, #508]	@ (8001604 <HAL_TIM_IC_CaptureCallback+0x27c>)
 8001408:	681b      	ldr	r3, [r3, #0]
 800140a:	1ad3      	subs	r3, r2, r3
 800140c:	4a7f      	ldr	r2, [pc, #508]	@ (800160c <HAL_TIM_IC_CaptureCallback+0x284>)
 800140e:	6013      	str	r3, [r2, #0]
 8001410:	e00f      	b.n	8001432 <HAL_TIM_IC_CaptureCallback+0xaa>
			}

			else if (IC_Val1 > IC_Val2) {
 8001412:	4b7c      	ldr	r3, [pc, #496]	@ (8001604 <HAL_TIM_IC_CaptureCallback+0x27c>)
 8001414:	681a      	ldr	r2, [r3, #0]
 8001416:	4b7c      	ldr	r3, [pc, #496]	@ (8001608 <HAL_TIM_IC_CaptureCallback+0x280>)
 8001418:	681b      	ldr	r3, [r3, #0]
 800141a:	429a      	cmp	r2, r3
 800141c:	d909      	bls.n	8001432 <HAL_TIM_IC_CaptureCallback+0xaa>
				Difference = (0xffff - IC_Val1) + IC_Val2;
 800141e:	4b7a      	ldr	r3, [pc, #488]	@ (8001608 <HAL_TIM_IC_CaptureCallback+0x280>)
 8001420:	681a      	ldr	r2, [r3, #0]
 8001422:	4b78      	ldr	r3, [pc, #480]	@ (8001604 <HAL_TIM_IC_CaptureCallback+0x27c>)
 8001424:	681b      	ldr	r3, [r3, #0]
 8001426:	1ad3      	subs	r3, r2, r3
 8001428:	f503 437f 	add.w	r3, r3, #65280	@ 0xff00
 800142c:	33ff      	adds	r3, #255	@ 0xff
 800142e:	4a77      	ldr	r2, [pc, #476]	@ (800160c <HAL_TIM_IC_CaptureCallback+0x284>)
 8001430:	6013      	str	r3, [r2, #0]
			}

			Distance = Difference * .034 / 2; // Konverzija u centimetre
 8001432:	4b76      	ldr	r3, [pc, #472]	@ (800160c <HAL_TIM_IC_CaptureCallback+0x284>)
 8001434:	681b      	ldr	r3, [r3, #0]
 8001436:	4618      	mov	r0, r3
 8001438:	f7ff f828 	bl	800048c <__aeabi_ui2d>
 800143c:	a36e      	add	r3, pc, #440	@ (adr r3, 80015f8 <HAL_TIM_IC_CaptureCallback+0x270>)
 800143e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001442:	f7ff f89d 	bl	8000580 <__aeabi_dmul>
 8001446:	4602      	mov	r2, r0
 8001448:	460b      	mov	r3, r1
 800144a:	4610      	mov	r0, r2
 800144c:	4619      	mov	r1, r3
 800144e:	f04f 0200 	mov.w	r2, #0
 8001452:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001456:	f7ff f9bd 	bl	80007d4 <__aeabi_ddiv>
 800145a:	4602      	mov	r2, r0
 800145c:	460b      	mov	r3, r1
 800145e:	4610      	mov	r0, r2
 8001460:	4619      	mov	r1, r3
 8001462:	f7ff fac7 	bl	80009f4 <__aeabi_d2uiz>
 8001466:	4603      	mov	r3, r0
 8001468:	b2da      	uxtb	r2, r3
 800146a:	4b69      	ldr	r3, [pc, #420]	@ (8001610 <HAL_TIM_IC_CaptureCallback+0x288>)
 800146c:	701a      	strb	r2, [r3, #0]
			Is_First_Captured = 0; // Reset
 800146e:	4b64      	ldr	r3, [pc, #400]	@ (8001600 <HAL_TIM_IC_CaptureCallback+0x278>)
 8001470:	2200      	movs	r2, #0
 8001472:	701a      	strb	r2, [r3, #0]

			// postavlja polaritet na rising edge
			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1,
 8001474:	687b      	ldr	r3, [r7, #4]
 8001476:	681b      	ldr	r3, [r3, #0]
 8001478:	6a1a      	ldr	r2, [r3, #32]
 800147a:	687b      	ldr	r3, [r7, #4]
 800147c:	681b      	ldr	r3, [r3, #0]
 800147e:	f022 020a 	bic.w	r2, r2, #10
 8001482:	621a      	str	r2, [r3, #32]
 8001484:	687b      	ldr	r3, [r7, #4]
 8001486:	681a      	ldr	r2, [r3, #0]
 8001488:	687b      	ldr	r3, [r7, #4]
 800148a:	681b      	ldr	r3, [r3, #0]
 800148c:	6a12      	ldr	r2, [r2, #32]
 800148e:	621a      	str	r2, [r3, #32]
					TIM_INPUTCHANNELPOLARITY_RISING);
			__HAL_TIM_DISABLE_IT(&htim1, TIM_IT_CC1);
 8001490:	4b60      	ldr	r3, [pc, #384]	@ (8001614 <HAL_TIM_IC_CaptureCallback+0x28c>)
 8001492:	681b      	ldr	r3, [r3, #0]
 8001494:	68da      	ldr	r2, [r3, #12]
 8001496:	4b5f      	ldr	r3, [pc, #380]	@ (8001614 <HAL_TIM_IC_CaptureCallback+0x28c>)
 8001498:	681b      	ldr	r3, [r3, #0]
 800149a:	f022 0202 	bic.w	r2, r2, #2
 800149e:	60da      	str	r2, [r3, #12]
		}
	}

	// 2. ULTRAZVUČNI
	if (htim->Channel == HAL_TIM_ACTIVE_CHANNEL_3) {
 80014a0:	687b      	ldr	r3, [r7, #4]
 80014a2:	7f1b      	ldrb	r3, [r3, #28]
 80014a4:	2b04      	cmp	r3, #4
 80014a6:	f040 8083 	bne.w	80015b0 <HAL_TIM_IC_CaptureCallback+0x228>
		if (Is_First_Captured_2 == 0) {
 80014aa:	4b5b      	ldr	r3, [pc, #364]	@ (8001618 <HAL_TIM_IC_CaptureCallback+0x290>)
 80014ac:	781b      	ldrb	r3, [r3, #0]
 80014ae:	2b00      	cmp	r3, #0
 80014b0:	d11a      	bne.n	80014e8 <HAL_TIM_IC_CaptureCallback+0x160>
			IC_Val1_2 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_3);
 80014b2:	2108      	movs	r1, #8
 80014b4:	6878      	ldr	r0, [r7, #4]
 80014b6:	f004 fa11 	bl	80058dc <HAL_TIM_ReadCapturedValue>
 80014ba:	4603      	mov	r3, r0
 80014bc:	4a57      	ldr	r2, [pc, #348]	@ (800161c <HAL_TIM_IC_CaptureCallback+0x294>)
 80014be:	6013      	str	r3, [r2, #0]
			Is_First_Captured_2 = 1;
 80014c0:	4b55      	ldr	r3, [pc, #340]	@ (8001618 <HAL_TIM_IC_CaptureCallback+0x290>)
 80014c2:	2201      	movs	r2, #1
 80014c4:	701a      	strb	r2, [r3, #0]

			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_3,
 80014c6:	687b      	ldr	r3, [r7, #4]
 80014c8:	681b      	ldr	r3, [r3, #0]
 80014ca:	6a1a      	ldr	r2, [r3, #32]
 80014cc:	687b      	ldr	r3, [r7, #4]
 80014ce:	681b      	ldr	r3, [r3, #0]
 80014d0:	f422 6220 	bic.w	r2, r2, #2560	@ 0xa00
 80014d4:	621a      	str	r2, [r3, #32]
 80014d6:	687b      	ldr	r3, [r7, #4]
 80014d8:	681b      	ldr	r3, [r3, #0]
 80014da:	6a1a      	ldr	r2, [r3, #32]
 80014dc:	687b      	ldr	r3, [r7, #4]
 80014de:	681b      	ldr	r3, [r3, #0]
 80014e0:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80014e4:	621a      	str	r2, [r3, #32]
 80014e6:	e063      	b.n	80015b0 <HAL_TIM_IC_CaptureCallback+0x228>
					TIM_INPUTCHANNELPOLARITY_FALLING);
		}

		else if (Is_First_Captured_2 == 1) {
 80014e8:	4b4b      	ldr	r3, [pc, #300]	@ (8001618 <HAL_TIM_IC_CaptureCallback+0x290>)
 80014ea:	781b      	ldrb	r3, [r3, #0]
 80014ec:	2b01      	cmp	r3, #1
 80014ee:	d15f      	bne.n	80015b0 <HAL_TIM_IC_CaptureCallback+0x228>
			IC_Val2_2 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_3);
 80014f0:	2108      	movs	r1, #8
 80014f2:	6878      	ldr	r0, [r7, #4]
 80014f4:	f004 f9f2 	bl	80058dc <HAL_TIM_ReadCapturedValue>
 80014f8:	4603      	mov	r3, r0
 80014fa:	4a49      	ldr	r2, [pc, #292]	@ (8001620 <HAL_TIM_IC_CaptureCallback+0x298>)
 80014fc:	6013      	str	r3, [r2, #0]
			__HAL_TIM_SET_COUNTER(htim, 0);
 80014fe:	687b      	ldr	r3, [r7, #4]
 8001500:	681b      	ldr	r3, [r3, #0]
 8001502:	2200      	movs	r2, #0
 8001504:	625a      	str	r2, [r3, #36]	@ 0x24

			if (IC_Val2_2 > IC_Val1_2) {
 8001506:	4b46      	ldr	r3, [pc, #280]	@ (8001620 <HAL_TIM_IC_CaptureCallback+0x298>)
 8001508:	681a      	ldr	r2, [r3, #0]
 800150a:	4b44      	ldr	r3, [pc, #272]	@ (800161c <HAL_TIM_IC_CaptureCallback+0x294>)
 800150c:	681b      	ldr	r3, [r3, #0]
 800150e:	429a      	cmp	r2, r3
 8001510:	d907      	bls.n	8001522 <HAL_TIM_IC_CaptureCallback+0x19a>
				Difference2 = IC_Val2_2 - IC_Val1_2;
 8001512:	4b43      	ldr	r3, [pc, #268]	@ (8001620 <HAL_TIM_IC_CaptureCallback+0x298>)
 8001514:	681a      	ldr	r2, [r3, #0]
 8001516:	4b41      	ldr	r3, [pc, #260]	@ (800161c <HAL_TIM_IC_CaptureCallback+0x294>)
 8001518:	681b      	ldr	r3, [r3, #0]
 800151a:	1ad3      	subs	r3, r2, r3
 800151c:	4a41      	ldr	r2, [pc, #260]	@ (8001624 <HAL_TIM_IC_CaptureCallback+0x29c>)
 800151e:	6013      	str	r3, [r2, #0]
 8001520:	e00f      	b.n	8001542 <HAL_TIM_IC_CaptureCallback+0x1ba>
			}

			else if (IC_Val1_2 > IC_Val2_2) {
 8001522:	4b3e      	ldr	r3, [pc, #248]	@ (800161c <HAL_TIM_IC_CaptureCallback+0x294>)
 8001524:	681a      	ldr	r2, [r3, #0]
 8001526:	4b3e      	ldr	r3, [pc, #248]	@ (8001620 <HAL_TIM_IC_CaptureCallback+0x298>)
 8001528:	681b      	ldr	r3, [r3, #0]
 800152a:	429a      	cmp	r2, r3
 800152c:	d909      	bls.n	8001542 <HAL_TIM_IC_CaptureCallback+0x1ba>
				Difference2 = (0xffff - IC_Val1_2) + IC_Val2_2;
 800152e:	4b3c      	ldr	r3, [pc, #240]	@ (8001620 <HAL_TIM_IC_CaptureCallback+0x298>)
 8001530:	681a      	ldr	r2, [r3, #0]
 8001532:	4b3a      	ldr	r3, [pc, #232]	@ (800161c <HAL_TIM_IC_CaptureCallback+0x294>)
 8001534:	681b      	ldr	r3, [r3, #0]
 8001536:	1ad3      	subs	r3, r2, r3
 8001538:	f503 437f 	add.w	r3, r3, #65280	@ 0xff00
 800153c:	33ff      	adds	r3, #255	@ 0xff
 800153e:	4a39      	ldr	r2, [pc, #228]	@ (8001624 <HAL_TIM_IC_CaptureCallback+0x29c>)
 8001540:	6013      	str	r3, [r2, #0]
			}

			Distance2 = Difference2 * .034 / 2;
 8001542:	4b38      	ldr	r3, [pc, #224]	@ (8001624 <HAL_TIM_IC_CaptureCallback+0x29c>)
 8001544:	681b      	ldr	r3, [r3, #0]
 8001546:	4618      	mov	r0, r3
 8001548:	f7fe ffa0 	bl	800048c <__aeabi_ui2d>
 800154c:	a32a      	add	r3, pc, #168	@ (adr r3, 80015f8 <HAL_TIM_IC_CaptureCallback+0x270>)
 800154e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001552:	f7ff f815 	bl	8000580 <__aeabi_dmul>
 8001556:	4602      	mov	r2, r0
 8001558:	460b      	mov	r3, r1
 800155a:	4610      	mov	r0, r2
 800155c:	4619      	mov	r1, r3
 800155e:	f04f 0200 	mov.w	r2, #0
 8001562:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 8001566:	f7ff f935 	bl	80007d4 <__aeabi_ddiv>
 800156a:	4602      	mov	r2, r0
 800156c:	460b      	mov	r3, r1
 800156e:	4610      	mov	r0, r2
 8001570:	4619      	mov	r1, r3
 8001572:	f7ff fa3f 	bl	80009f4 <__aeabi_d2uiz>
 8001576:	4603      	mov	r3, r0
 8001578:	b2da      	uxtb	r2, r3
 800157a:	4b2b      	ldr	r3, [pc, #172]	@ (8001628 <HAL_TIM_IC_CaptureCallback+0x2a0>)
 800157c:	701a      	strb	r2, [r3, #0]
			Is_First_Captured_2 = 0;
 800157e:	4b26      	ldr	r3, [pc, #152]	@ (8001618 <HAL_TIM_IC_CaptureCallback+0x290>)
 8001580:	2200      	movs	r2, #0
 8001582:	701a      	strb	r2, [r3, #0]

			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_3,
 8001584:	687b      	ldr	r3, [r7, #4]
 8001586:	681b      	ldr	r3, [r3, #0]
 8001588:	6a1a      	ldr	r2, [r3, #32]
 800158a:	687b      	ldr	r3, [r7, #4]
 800158c:	681b      	ldr	r3, [r3, #0]
 800158e:	f422 6220 	bic.w	r2, r2, #2560	@ 0xa00
 8001592:	621a      	str	r2, [r3, #32]
 8001594:	687b      	ldr	r3, [r7, #4]
 8001596:	681a      	ldr	r2, [r3, #0]
 8001598:	687b      	ldr	r3, [r7, #4]
 800159a:	681b      	ldr	r3, [r3, #0]
 800159c:	6a12      	ldr	r2, [r2, #32]
 800159e:	621a      	str	r2, [r3, #32]
					TIM_INPUTCHANNELPOLARITY_RISING);
			__HAL_TIM_DISABLE_IT(&htim1, TIM_IT_CC3);
 80015a0:	4b1c      	ldr	r3, [pc, #112]	@ (8001614 <HAL_TIM_IC_CaptureCallback+0x28c>)
 80015a2:	681b      	ldr	r3, [r3, #0]
 80015a4:	68da      	ldr	r2, [r3, #12]
 80015a6:	4b1b      	ldr	r3, [pc, #108]	@ (8001614 <HAL_TIM_IC_CaptureCallback+0x28c>)
 80015a8:	681b      	ldr	r3, [r3, #0]
 80015aa:	f022 0208 	bic.w	r2, r2, #8
 80015ae:	60da      	str	r2, [r3, #12]
		}
	}

	// 3. ULTRAZVUČNI
	if (htim->Channel == HAL_TIM_ACTIVE_CHANNEL_4) {
 80015b0:	687b      	ldr	r3, [r7, #4]
 80015b2:	7f1b      	ldrb	r3, [r3, #28]
 80015b4:	2b08      	cmp	r3, #8
 80015b6:	f040 80a1 	bne.w	80016fc <HAL_TIM_IC_CaptureCallback+0x374>
		if (Is_First_Captured_3 == 0) {
 80015ba:	4b1c      	ldr	r3, [pc, #112]	@ (800162c <HAL_TIM_IC_CaptureCallback+0x2a4>)
 80015bc:	781b      	ldrb	r3, [r3, #0]
 80015be:	2b00      	cmp	r3, #0
 80015c0:	d138      	bne.n	8001634 <HAL_TIM_IC_CaptureCallback+0x2ac>
			IC_Val1_3 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_4);
 80015c2:	210c      	movs	r1, #12
 80015c4:	6878      	ldr	r0, [r7, #4]
 80015c6:	f004 f989 	bl	80058dc <HAL_TIM_ReadCapturedValue>
 80015ca:	4603      	mov	r3, r0
 80015cc:	4a18      	ldr	r2, [pc, #96]	@ (8001630 <HAL_TIM_IC_CaptureCallback+0x2a8>)
 80015ce:	6013      	str	r3, [r2, #0]
			Is_First_Captured_3 = 1;
 80015d0:	4b16      	ldr	r3, [pc, #88]	@ (800162c <HAL_TIM_IC_CaptureCallback+0x2a4>)
 80015d2:	2201      	movs	r2, #1
 80015d4:	701a      	strb	r2, [r3, #0]

			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_4,
 80015d6:	687b      	ldr	r3, [r7, #4]
 80015d8:	681b      	ldr	r3, [r3, #0]
 80015da:	6a1a      	ldr	r2, [r3, #32]
 80015dc:	687b      	ldr	r3, [r7, #4]
 80015de:	681b      	ldr	r3, [r3, #0]
 80015e0:	f422 4220 	bic.w	r2, r2, #40960	@ 0xa000
 80015e4:	621a      	str	r2, [r3, #32]
 80015e6:	687b      	ldr	r3, [r7, #4]
 80015e8:	681b      	ldr	r3, [r3, #0]
 80015ea:	6a1a      	ldr	r2, [r3, #32]
 80015ec:	687b      	ldr	r3, [r7, #4]
 80015ee:	681b      	ldr	r3, [r3, #0]
 80015f0:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80015f4:	621a      	str	r2, [r3, #32]
					TIM_INPUTCHANNELPOLARITY_RISING);
			__HAL_TIM_DISABLE_IT(&htim1, TIM_IT_CC4);
		}
	}

}
 80015f6:	e081      	b.n	80016fc <HAL_TIM_IC_CaptureCallback+0x374>
 80015f8:	b020c49c 	.word	0xb020c49c
 80015fc:	3fa16872 	.word	0x3fa16872
 8001600:	20000088 	.word	0x20000088
 8001604:	2000007c 	.word	0x2000007c
 8001608:	20000080 	.word	0x20000080
 800160c:	20000084 	.word	0x20000084
 8001610:	20000089 	.word	0x20000089
 8001614:	20000528 	.word	0x20000528
 8001618:	20000094 	.word	0x20000094
 800161c:	2000008c 	.word	0x2000008c
 8001620:	20000090 	.word	0x20000090
 8001624:	20000098 	.word	0x20000098
 8001628:	20000095 	.word	0x20000095
 800162c:	200000a4 	.word	0x200000a4
 8001630:	2000009c 	.word	0x2000009c
		else if (Is_First_Captured_3 == 1) {
 8001634:	4b36      	ldr	r3, [pc, #216]	@ (8001710 <HAL_TIM_IC_CaptureCallback+0x388>)
 8001636:	781b      	ldrb	r3, [r3, #0]
 8001638:	2b01      	cmp	r3, #1
 800163a:	d15f      	bne.n	80016fc <HAL_TIM_IC_CaptureCallback+0x374>
			IC_Val2_3 = HAL_TIM_ReadCapturedValue(htim, TIM_CHANNEL_4);
 800163c:	210c      	movs	r1, #12
 800163e:	6878      	ldr	r0, [r7, #4]
 8001640:	f004 f94c 	bl	80058dc <HAL_TIM_ReadCapturedValue>
 8001644:	4603      	mov	r3, r0
 8001646:	4a33      	ldr	r2, [pc, #204]	@ (8001714 <HAL_TIM_IC_CaptureCallback+0x38c>)
 8001648:	6013      	str	r3, [r2, #0]
			__HAL_TIM_SET_COUNTER(htim, 0);
 800164a:	687b      	ldr	r3, [r7, #4]
 800164c:	681b      	ldr	r3, [r3, #0]
 800164e:	2200      	movs	r2, #0
 8001650:	625a      	str	r2, [r3, #36]	@ 0x24
			if (IC_Val2_3 > IC_Val1_3) {
 8001652:	4b30      	ldr	r3, [pc, #192]	@ (8001714 <HAL_TIM_IC_CaptureCallback+0x38c>)
 8001654:	681a      	ldr	r2, [r3, #0]
 8001656:	4b30      	ldr	r3, [pc, #192]	@ (8001718 <HAL_TIM_IC_CaptureCallback+0x390>)
 8001658:	681b      	ldr	r3, [r3, #0]
 800165a:	429a      	cmp	r2, r3
 800165c:	d907      	bls.n	800166e <HAL_TIM_IC_CaptureCallback+0x2e6>
				Difference3 = IC_Val2_3 - IC_Val1_3;
 800165e:	4b2d      	ldr	r3, [pc, #180]	@ (8001714 <HAL_TIM_IC_CaptureCallback+0x38c>)
 8001660:	681a      	ldr	r2, [r3, #0]
 8001662:	4b2d      	ldr	r3, [pc, #180]	@ (8001718 <HAL_TIM_IC_CaptureCallback+0x390>)
 8001664:	681b      	ldr	r3, [r3, #0]
 8001666:	1ad3      	subs	r3, r2, r3
 8001668:	4a2c      	ldr	r2, [pc, #176]	@ (800171c <HAL_TIM_IC_CaptureCallback+0x394>)
 800166a:	6013      	str	r3, [r2, #0]
 800166c:	e00f      	b.n	800168e <HAL_TIM_IC_CaptureCallback+0x306>
			else if (IC_Val1_3 > IC_Val2_3) {
 800166e:	4b2a      	ldr	r3, [pc, #168]	@ (8001718 <HAL_TIM_IC_CaptureCallback+0x390>)
 8001670:	681a      	ldr	r2, [r3, #0]
 8001672:	4b28      	ldr	r3, [pc, #160]	@ (8001714 <HAL_TIM_IC_CaptureCallback+0x38c>)
 8001674:	681b      	ldr	r3, [r3, #0]
 8001676:	429a      	cmp	r2, r3
 8001678:	d909      	bls.n	800168e <HAL_TIM_IC_CaptureCallback+0x306>
				Difference3 = (0xffff - IC_Val1_3) + IC_Val2_3;
 800167a:	4b26      	ldr	r3, [pc, #152]	@ (8001714 <HAL_TIM_IC_CaptureCallback+0x38c>)
 800167c:	681a      	ldr	r2, [r3, #0]
 800167e:	4b26      	ldr	r3, [pc, #152]	@ (8001718 <HAL_TIM_IC_CaptureCallback+0x390>)
 8001680:	681b      	ldr	r3, [r3, #0]
 8001682:	1ad3      	subs	r3, r2, r3
 8001684:	f503 437f 	add.w	r3, r3, #65280	@ 0xff00
 8001688:	33ff      	adds	r3, #255	@ 0xff
 800168a:	4a24      	ldr	r2, [pc, #144]	@ (800171c <HAL_TIM_IC_CaptureCallback+0x394>)
 800168c:	6013      	str	r3, [r2, #0]
			Distance3 = Difference3 * .034 / 2;
 800168e:	4b23      	ldr	r3, [pc, #140]	@ (800171c <HAL_TIM_IC_CaptureCallback+0x394>)
 8001690:	681b      	ldr	r3, [r3, #0]
 8001692:	4618      	mov	r0, r3
 8001694:	f7fe fefa 	bl	800048c <__aeabi_ui2d>
 8001698:	a31b      	add	r3, pc, #108	@ (adr r3, 8001708 <HAL_TIM_IC_CaptureCallback+0x380>)
 800169a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800169e:	f7fe ff6f 	bl	8000580 <__aeabi_dmul>
 80016a2:	4602      	mov	r2, r0
 80016a4:	460b      	mov	r3, r1
 80016a6:	4610      	mov	r0, r2
 80016a8:	4619      	mov	r1, r3
 80016aa:	f04f 0200 	mov.w	r2, #0
 80016ae:	f04f 4380 	mov.w	r3, #1073741824	@ 0x40000000
 80016b2:	f7ff f88f 	bl	80007d4 <__aeabi_ddiv>
 80016b6:	4602      	mov	r2, r0
 80016b8:	460b      	mov	r3, r1
 80016ba:	4610      	mov	r0, r2
 80016bc:	4619      	mov	r1, r3
 80016be:	f7ff f999 	bl	80009f4 <__aeabi_d2uiz>
 80016c2:	4603      	mov	r3, r0
 80016c4:	b2da      	uxtb	r2, r3
 80016c6:	4b16      	ldr	r3, [pc, #88]	@ (8001720 <HAL_TIM_IC_CaptureCallback+0x398>)
 80016c8:	701a      	strb	r2, [r3, #0]
			Is_First_Captured_3 = 0;
 80016ca:	4b11      	ldr	r3, [pc, #68]	@ (8001710 <HAL_TIM_IC_CaptureCallback+0x388>)
 80016cc:	2200      	movs	r2, #0
 80016ce:	701a      	strb	r2, [r3, #0]
			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_4,
 80016d0:	687b      	ldr	r3, [r7, #4]
 80016d2:	681b      	ldr	r3, [r3, #0]
 80016d4:	6a1a      	ldr	r2, [r3, #32]
 80016d6:	687b      	ldr	r3, [r7, #4]
 80016d8:	681b      	ldr	r3, [r3, #0]
 80016da:	f422 4220 	bic.w	r2, r2, #40960	@ 0xa000
 80016de:	621a      	str	r2, [r3, #32]
 80016e0:	687b      	ldr	r3, [r7, #4]
 80016e2:	681a      	ldr	r2, [r3, #0]
 80016e4:	687b      	ldr	r3, [r7, #4]
 80016e6:	681b      	ldr	r3, [r3, #0]
 80016e8:	6a12      	ldr	r2, [r2, #32]
 80016ea:	621a      	str	r2, [r3, #32]
			__HAL_TIM_DISABLE_IT(&htim1, TIM_IT_CC4);
 80016ec:	4b0d      	ldr	r3, [pc, #52]	@ (8001724 <HAL_TIM_IC_CaptureCallback+0x39c>)
 80016ee:	681b      	ldr	r3, [r3, #0]
 80016f0:	68da      	ldr	r2, [r3, #12]
 80016f2:	4b0c      	ldr	r3, [pc, #48]	@ (8001724 <HAL_TIM_IC_CaptureCallback+0x39c>)
 80016f4:	681b      	ldr	r3, [r3, #0]
 80016f6:	f022 0210 	bic.w	r2, r2, #16
 80016fa:	60da      	str	r2, [r3, #12]
}
 80016fc:	bf00      	nop
 80016fe:	3708      	adds	r7, #8
 8001700:	46bd      	mov	sp, r7
 8001702:	bd80      	pop	{r7, pc}
 8001704:	f3af 8000 	nop.w
 8001708:	b020c49c 	.word	0xb020c49c
 800170c:	3fa16872 	.word	0x3fa16872
 8001710:	200000a4 	.word	0x200000a4
 8001714:	200000a0 	.word	0x200000a0
 8001718:	2000009c 	.word	0x2000009c
 800171c:	200000a8 	.word	0x200000a8
 8001720:	200000a5 	.word	0x200000a5
 8001724:	20000528 	.word	0x20000528

08001728 <HCSR04_Read>:

void HCSR04_Read(void) {
 8001728:	b580      	push	{r7, lr}
 800172a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(TRIG_PORT, TRIG_PIN, GPIO_PIN_SET); // Pošalji TRIG impuls
 800172c:	2201      	movs	r2, #1
 800172e:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001732:	480b      	ldr	r0, [pc, #44]	@ (8001760 <HCSR04_Read+0x38>)
 8001734:	f001 fccc 	bl	80030d0 <HAL_GPIO_WritePin>
	HAL_Delay(1);   // wait for 10 us
 8001738:	2001      	movs	r0, #1
 800173a:	f001 f9ff 	bl	8002b3c <HAL_Delay>
	HAL_GPIO_WritePin(TRIG_PORT, TRIG_PIN, GPIO_PIN_RESET);
 800173e:	2200      	movs	r2, #0
 8001740:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001744:	4806      	ldr	r0, [pc, #24]	@ (8001760 <HCSR04_Read+0x38>)
 8001746:	f001 fcc3 	bl	80030d0 <HAL_GPIO_WritePin>

	__HAL_TIM_ENABLE_IT(&htim1, TIM_IT_CC1); // Omogući interrupt za mjerenje
 800174a:	4b06      	ldr	r3, [pc, #24]	@ (8001764 <HCSR04_Read+0x3c>)
 800174c:	681b      	ldr	r3, [r3, #0]
 800174e:	68da      	ldr	r2, [r3, #12]
 8001750:	4b04      	ldr	r3, [pc, #16]	@ (8001764 <HCSR04_Read+0x3c>)
 8001752:	681b      	ldr	r3, [r3, #0]
 8001754:	f042 0202 	orr.w	r2, r2, #2
 8001758:	60da      	str	r2, [r3, #12]
}
 800175a:	bf00      	nop
 800175c:	bd80      	pop	{r7, pc}
 800175e:	bf00      	nop
 8001760:	40020000 	.word	0x40020000
 8001764:	20000528 	.word	0x20000528

08001768 <HCSR04_Read2>:
void HCSR04_Read2(void) {
 8001768:	b580      	push	{r7, lr}
 800176a:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(TRIG2_PORT, TRIG2_PIN, GPIO_PIN_SET);
 800176c:	2201      	movs	r2, #1
 800176e:	2102      	movs	r1, #2
 8001770:	480a      	ldr	r0, [pc, #40]	@ (800179c <HCSR04_Read2+0x34>)
 8001772:	f001 fcad 	bl	80030d0 <HAL_GPIO_WritePin>
	HAL_Delay(1);   // wait for 10 us
 8001776:	2001      	movs	r0, #1
 8001778:	f001 f9e0 	bl	8002b3c <HAL_Delay>
	HAL_GPIO_WritePin(TRIG2_PORT, TRIG2_PIN, GPIO_PIN_RESET);
 800177c:	2200      	movs	r2, #0
 800177e:	2102      	movs	r1, #2
 8001780:	4806      	ldr	r0, [pc, #24]	@ (800179c <HCSR04_Read2+0x34>)
 8001782:	f001 fca5 	bl	80030d0 <HAL_GPIO_WritePin>

	__HAL_TIM_ENABLE_IT(&htim1, TIM_IT_CC3);
 8001786:	4b06      	ldr	r3, [pc, #24]	@ (80017a0 <HCSR04_Read2+0x38>)
 8001788:	681b      	ldr	r3, [r3, #0]
 800178a:	68da      	ldr	r2, [r3, #12]
 800178c:	4b04      	ldr	r3, [pc, #16]	@ (80017a0 <HCSR04_Read2+0x38>)
 800178e:	681b      	ldr	r3, [r3, #0]
 8001790:	f042 0208 	orr.w	r2, r2, #8
 8001794:	60da      	str	r2, [r3, #12]
}
 8001796:	bf00      	nop
 8001798:	bd80      	pop	{r7, pc}
 800179a:	bf00      	nop
 800179c:	40020000 	.word	0x40020000
 80017a0:	20000528 	.word	0x20000528

080017a4 <HCSR04_Read3>:
void HCSR04_Read3(void) {
 80017a4:	b580      	push	{r7, lr}
 80017a6:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(TRIG3_PORT, TRIG3_PIN, GPIO_PIN_SET);
 80017a8:	2201      	movs	r2, #1
 80017aa:	2110      	movs	r1, #16
 80017ac:	480a      	ldr	r0, [pc, #40]	@ (80017d8 <HCSR04_Read3+0x34>)
 80017ae:	f001 fc8f 	bl	80030d0 <HAL_GPIO_WritePin>
	HAL_Delay(1);   // wait for 10 us
 80017b2:	2001      	movs	r0, #1
 80017b4:	f001 f9c2 	bl	8002b3c <HAL_Delay>
	HAL_GPIO_WritePin(TRIG3_PORT, TRIG3_PIN, GPIO_PIN_RESET);
 80017b8:	2200      	movs	r2, #0
 80017ba:	2110      	movs	r1, #16
 80017bc:	4806      	ldr	r0, [pc, #24]	@ (80017d8 <HCSR04_Read3+0x34>)
 80017be:	f001 fc87 	bl	80030d0 <HAL_GPIO_WritePin>

	__HAL_TIM_ENABLE_IT(&htim1, TIM_IT_CC4);
 80017c2:	4b06      	ldr	r3, [pc, #24]	@ (80017dc <HCSR04_Read3+0x38>)
 80017c4:	681b      	ldr	r3, [r3, #0]
 80017c6:	68da      	ldr	r2, [r3, #12]
 80017c8:	4b04      	ldr	r3, [pc, #16]	@ (80017dc <HCSR04_Read3+0x38>)
 80017ca:	681b      	ldr	r3, [r3, #0]
 80017cc:	f042 0210 	orr.w	r2, r2, #16
 80017d0:	60da      	str	r2, [r3, #12]
}
 80017d2:	bf00      	nop
 80017d4:	bd80      	pop	{r7, pc}
 80017d6:	bf00      	nop
 80017d8:	40020000 	.word	0x40020000
 80017dc:	20000528 	.word	0x20000528

080017e0 <playTone>:

//
void playTone(uint32_t freq, uint32_t duration_ms) {
 80017e0:	b580      	push	{r7, lr}
 80017e2:	b086      	sub	sp, #24
 80017e4:	af00      	add	r7, sp, #0
 80017e6:	6078      	str	r0, [r7, #4]
 80017e8:	6039      	str	r1, [r7, #0]
	uint32_t timer_clk = 1000000;  // After prescaler = 89
 80017ea:	4b13      	ldr	r3, [pc, #76]	@ (8001838 <playTone+0x58>)
 80017ec:	617b      	str	r3, [r7, #20]
	uint32_t period = timer_clk / freq - 1;
 80017ee:	697a      	ldr	r2, [r7, #20]
 80017f0:	687b      	ldr	r3, [r7, #4]
 80017f2:	fbb2 f3f3 	udiv	r3, r2, r3
 80017f6:	3b01      	subs	r3, #1
 80017f8:	613b      	str	r3, [r7, #16]
	uint32_t duty = (period + 1) / 4;
 80017fa:	693b      	ldr	r3, [r7, #16]
 80017fc:	3301      	adds	r3, #1
 80017fe:	089b      	lsrs	r3, r3, #2
 8001800:	60fb      	str	r3, [r7, #12]

	__HAL_TIM_SET_AUTORELOAD(&htim3, period);
 8001802:	4b0e      	ldr	r3, [pc, #56]	@ (800183c <playTone+0x5c>)
 8001804:	681b      	ldr	r3, [r3, #0]
 8001806:	693a      	ldr	r2, [r7, #16]
 8001808:	62da      	str	r2, [r3, #44]	@ 0x2c
 800180a:	4a0c      	ldr	r2, [pc, #48]	@ (800183c <playTone+0x5c>)
 800180c:	693b      	ldr	r3, [r7, #16]
 800180e:	60d3      	str	r3, [r2, #12]
	__HAL_TIM_SET_COMPARE(&htim3, TIM_CHANNEL_1, duty);
 8001810:	4b0a      	ldr	r3, [pc, #40]	@ (800183c <playTone+0x5c>)
 8001812:	681b      	ldr	r3, [r3, #0]
 8001814:	68fa      	ldr	r2, [r7, #12]
 8001816:	635a      	str	r2, [r3, #52]	@ 0x34

	HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 8001818:	2100      	movs	r1, #0
 800181a:	4808      	ldr	r0, [pc, #32]	@ (800183c <playTone+0x5c>)
 800181c:	f003 fa98 	bl	8004d50 <HAL_TIM_PWM_Start>
	HAL_Delay(duration_ms);
 8001820:	6838      	ldr	r0, [r7, #0]
 8001822:	f001 f98b 	bl	8002b3c <HAL_Delay>
	HAL_TIM_PWM_Stop(&htim3, TIM_CHANNEL_1);
 8001826:	2100      	movs	r1, #0
 8001828:	4804      	ldr	r0, [pc, #16]	@ (800183c <playTone+0x5c>)
 800182a:	f003 fb59 	bl	8004ee0 <HAL_TIM_PWM_Stop>
}
 800182e:	bf00      	nop
 8001830:	3718      	adds	r7, #24
 8001832:	46bd      	mov	sp, r7
 8001834:	bd80      	pop	{r7, pc}
 8001836:	bf00      	nop
 8001838:	000f4240 	.word	0x000f4240
 800183c:	200005b8 	.word	0x200005b8

08001840 <map>:
EkranStanje trenutnoStanje = EKRAN_NEPOZNATO;

void SystemClock_Config(void);

//postavke za servo motor
int map(int st1, int fn1, int st2, int fn2, int value) {
 8001840:	b5b0      	push	{r4, r5, r7, lr}
 8001842:	b084      	sub	sp, #16
 8001844:	af00      	add	r7, sp, #0
 8001846:	60f8      	str	r0, [r7, #12]
 8001848:	60b9      	str	r1, [r7, #8]
 800184a:	607a      	str	r2, [r7, #4]
 800184c:	603b      	str	r3, [r7, #0]
	return (1.0 * (value - st1)) / ((fn1 - st1) * 1.0) * (fn2 - st2) + st2;
 800184e:	6a3a      	ldr	r2, [r7, #32]
 8001850:	68fb      	ldr	r3, [r7, #12]
 8001852:	1ad3      	subs	r3, r2, r3
 8001854:	4618      	mov	r0, r3
 8001856:	f7fe fe29 	bl	80004ac <__aeabi_i2d>
 800185a:	4604      	mov	r4, r0
 800185c:	460d      	mov	r5, r1
 800185e:	68ba      	ldr	r2, [r7, #8]
 8001860:	68fb      	ldr	r3, [r7, #12]
 8001862:	1ad3      	subs	r3, r2, r3
 8001864:	4618      	mov	r0, r3
 8001866:	f7fe fe21 	bl	80004ac <__aeabi_i2d>
 800186a:	4602      	mov	r2, r0
 800186c:	460b      	mov	r3, r1
 800186e:	4620      	mov	r0, r4
 8001870:	4629      	mov	r1, r5
 8001872:	f7fe ffaf 	bl	80007d4 <__aeabi_ddiv>
 8001876:	4602      	mov	r2, r0
 8001878:	460b      	mov	r3, r1
 800187a:	4614      	mov	r4, r2
 800187c:	461d      	mov	r5, r3
 800187e:	683a      	ldr	r2, [r7, #0]
 8001880:	687b      	ldr	r3, [r7, #4]
 8001882:	1ad3      	subs	r3, r2, r3
 8001884:	4618      	mov	r0, r3
 8001886:	f7fe fe11 	bl	80004ac <__aeabi_i2d>
 800188a:	4602      	mov	r2, r0
 800188c:	460b      	mov	r3, r1
 800188e:	4620      	mov	r0, r4
 8001890:	4629      	mov	r1, r5
 8001892:	f7fe fe75 	bl	8000580 <__aeabi_dmul>
 8001896:	4602      	mov	r2, r0
 8001898:	460b      	mov	r3, r1
 800189a:	4614      	mov	r4, r2
 800189c:	461d      	mov	r5, r3
 800189e:	6878      	ldr	r0, [r7, #4]
 80018a0:	f7fe fe04 	bl	80004ac <__aeabi_i2d>
 80018a4:	4602      	mov	r2, r0
 80018a6:	460b      	mov	r3, r1
 80018a8:	4620      	mov	r0, r4
 80018aa:	4629      	mov	r1, r5
 80018ac:	f7fe fcb2 	bl	8000214 <__adddf3>
 80018b0:	4602      	mov	r2, r0
 80018b2:	460b      	mov	r3, r1
 80018b4:	4610      	mov	r0, r2
 80018b6:	4619      	mov	r1, r3
 80018b8:	f7ff f874 	bl	80009a4 <__aeabi_d2iz>
 80018bc:	4603      	mov	r3, r0
}
 80018be:	4618      	mov	r0, r3
 80018c0:	3710      	adds	r7, #16
 80018c2:	46bd      	mov	sp, r7
 80018c4:	bdb0      	pop	{r4, r5, r7, pc}
	...

080018c8 <servo_write>:

void servo_write(int angle) {
 80018c8:	b580      	push	{r7, lr}
 80018ca:	b084      	sub	sp, #16
 80018cc:	af02      	add	r7, sp, #8
 80018ce:	6078      	str	r0, [r7, #4]
	htim2.Instance->CCR1 = map(0, 180, 50, 250, angle); // Pretvori kut u PWM širinu
 80018d0:	687b      	ldr	r3, [r7, #4]
 80018d2:	9300      	str	r3, [sp, #0]
 80018d4:	23fa      	movs	r3, #250	@ 0xfa
 80018d6:	2232      	movs	r2, #50	@ 0x32
 80018d8:	21b4      	movs	r1, #180	@ 0xb4
 80018da:	2000      	movs	r0, #0
 80018dc:	f7ff ffb0 	bl	8001840 <map>
 80018e0:	4602      	mov	r2, r0
 80018e2:	4b03      	ldr	r3, [pc, #12]	@ (80018f0 <servo_write+0x28>)
 80018e4:	681b      	ldr	r3, [r3, #0]
 80018e6:	635a      	str	r2, [r3, #52]	@ 0x34
}
 80018e8:	bf00      	nop
 80018ea:	3708      	adds	r7, #8
 80018ec:	46bd      	mov	sp, r7
 80018ee:	bd80      	pop	{r7, pc}
 80018f0:	20000570 	.word	0x20000570

080018f4 <servo_sweep>:

void servo_sweep(void) {
 80018f4:	b580      	push	{r7, lr}
 80018f6:	b082      	sub	sp, #8
 80018f8:	af00      	add	r7, sp, #0
	for (int i = 0; i <= 50; i++) { // Postavljanje kuta na 90 stupnjeva
 80018fa:	2300      	movs	r3, #0
 80018fc:	607b      	str	r3, [r7, #4]
 80018fe:	e008      	b.n	8001912 <servo_sweep+0x1e>
		servo_write(i);
 8001900:	6878      	ldr	r0, [r7, #4]
 8001902:	f7ff ffe1 	bl	80018c8 <servo_write>
		HAL_Delay(10);
 8001906:	200a      	movs	r0, #10
 8001908:	f001 f918 	bl	8002b3c <HAL_Delay>
	for (int i = 0; i <= 50; i++) { // Postavljanje kuta na 90 stupnjeva
 800190c:	687b      	ldr	r3, [r7, #4]
 800190e:	3301      	adds	r3, #1
 8001910:	607b      	str	r3, [r7, #4]
 8001912:	687b      	ldr	r3, [r7, #4]
 8001914:	2b32      	cmp	r3, #50	@ 0x32
 8001916:	ddf3      	ble.n	8001900 <servo_sweep+0xc>
	}
	HAL_Delay(3000);
 8001918:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 800191c:	f001 f90e 	bl	8002b3c <HAL_Delay>
	for (int i = 50; i >= 0; i--) { // Postavljanje kuta na 0 stupnjeva
 8001920:	2332      	movs	r3, #50	@ 0x32
 8001922:	603b      	str	r3, [r7, #0]
 8001924:	e008      	b.n	8001938 <servo_sweep+0x44>
		servo_write(i);
 8001926:	6838      	ldr	r0, [r7, #0]
 8001928:	f7ff ffce 	bl	80018c8 <servo_write>
		HAL_Delay(10);
 800192c:	200a      	movs	r0, #10
 800192e:	f001 f905 	bl	8002b3c <HAL_Delay>
	for (int i = 50; i >= 0; i--) { // Postavljanje kuta na 0 stupnjeva
 8001932:	683b      	ldr	r3, [r7, #0]
 8001934:	3b01      	subs	r3, #1
 8001936:	603b      	str	r3, [r7, #0]
 8001938:	683b      	ldr	r3, [r7, #0]
 800193a:	2b00      	cmp	r3, #0
 800193c:	daf3      	bge.n	8001926 <servo_sweep+0x32>
	}

}
 800193e:	bf00      	nop
 8001940:	bf00      	nop
 8001942:	3708      	adds	r7, #8
 8001944:	46bd      	mov	sp, r7
 8001946:	bd80      	pop	{r7, pc}

08001948 <ocitanje>:

void ocitanje(void) { // Funkcija za uČitavanje kartice, provjeru zauzetih mjesta, podizanje rampe i ispisa na ekran
 8001948:	b580      	push	{r7, lr}
 800194a:	b086      	sub	sp, #24
 800194c:	af02      	add	r7, sp, #8

	HCSR04_Read();
 800194e:	f7ff feeb 	bl	8001728 <HCSR04_Read>

	if (Distance <= 5) {
 8001952:	4b9c      	ldr	r3, [pc, #624]	@ (8001bc4 <ocitanje+0x27c>)
 8001954:	781b      	ldrb	r3, [r3, #0]
 8001956:	2b05      	cmp	r3, #5
 8001958:	d80a      	bhi.n	8001970 <ocitanje+0x28>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, 0);
 800195a:	2200      	movs	r2, #0
 800195c:	2140      	movs	r1, #64	@ 0x40
 800195e:	489a      	ldr	r0, [pc, #616]	@ (8001bc8 <ocitanje+0x280>)
 8001960:	f001 fbb6 	bl	80030d0 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, 1);
 8001964:	2201      	movs	r2, #1
 8001966:	2108      	movs	r1, #8
 8001968:	4898      	ldr	r0, [pc, #608]	@ (8001bcc <ocitanje+0x284>)
 800196a:	f001 fbb1 	bl	80030d0 <HAL_GPIO_WritePin>
 800196e:	e009      	b.n	8001984 <ocitanje+0x3c>
	} else {
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_6, 1);
 8001970:	2201      	movs	r2, #1
 8001972:	2140      	movs	r1, #64	@ 0x40
 8001974:	4894      	ldr	r0, [pc, #592]	@ (8001bc8 <ocitanje+0x280>)
 8001976:	f001 fbab 	bl	80030d0 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_3, 0);
 800197a:	2200      	movs	r2, #0
 800197c:	2108      	movs	r1, #8
 800197e:	4893      	ldr	r0, [pc, #588]	@ (8001bcc <ocitanje+0x284>)
 8001980:	f001 fba6 	bl	80030d0 <HAL_GPIO_WritePin>
	}

	HCSR04_Read2();
 8001984:	f7ff fef0 	bl	8001768 <HCSR04_Read2>

	if (Distance2 <= 5) {
 8001988:	4b91      	ldr	r3, [pc, #580]	@ (8001bd0 <ocitanje+0x288>)
 800198a:	781b      	ldrb	r3, [r3, #0]
 800198c:	2b05      	cmp	r3, #5
 800198e:	d80b      	bhi.n	80019a8 <ocitanje+0x60>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, 0);
 8001990:	2200      	movs	r2, #0
 8001992:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8001996:	488c      	ldr	r0, [pc, #560]	@ (8001bc8 <ocitanje+0x280>)
 8001998:	f001 fb9a 	bl	80030d0 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, 1);
 800199c:	2201      	movs	r2, #1
 800199e:	2104      	movs	r1, #4
 80019a0:	488a      	ldr	r0, [pc, #552]	@ (8001bcc <ocitanje+0x284>)
 80019a2:	f001 fb95 	bl	80030d0 <HAL_GPIO_WritePin>
 80019a6:	e00a      	b.n	80019be <ocitanje+0x76>
	} else {
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_13, 1);
 80019a8:	2201      	movs	r2, #1
 80019aa:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 80019ae:	4886      	ldr	r0, [pc, #536]	@ (8001bc8 <ocitanje+0x280>)
 80019b0:	f001 fb8e 	bl	80030d0 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOC, GPIO_PIN_2, 0);
 80019b4:	2200      	movs	r2, #0
 80019b6:	2104      	movs	r1, #4
 80019b8:	4884      	ldr	r0, [pc, #528]	@ (8001bcc <ocitanje+0x284>)
 80019ba:	f001 fb89 	bl	80030d0 <HAL_GPIO_WritePin>
	}

	HCSR04_Read3();
 80019be:	f7ff fef1 	bl	80017a4 <HCSR04_Read3>

	if (Distance3 <= 5) {
 80019c2:	4b84      	ldr	r3, [pc, #528]	@ (8001bd4 <ocitanje+0x28c>)
 80019c4:	781b      	ldrb	r3, [r3, #0]
 80019c6:	2b05      	cmp	r3, #5
 80019c8:	d80b      	bhi.n	80019e2 <ocitanje+0x9a>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, 0);
 80019ca:	2200      	movs	r2, #0
 80019cc:	2102      	movs	r1, #2
 80019ce:	487e      	ldr	r0, [pc, #504]	@ (8001bc8 <ocitanje+0x280>)
 80019d0:	f001 fb7e 	bl	80030d0 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, 1);
 80019d4:	2201      	movs	r2, #1
 80019d6:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80019da:	487b      	ldr	r0, [pc, #492]	@ (8001bc8 <ocitanje+0x280>)
 80019dc:	f001 fb78 	bl	80030d0 <HAL_GPIO_WritePin>
 80019e0:	e00a      	b.n	80019f8 <ocitanje+0xb0>
	} else {
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, 1);
 80019e2:	2201      	movs	r2, #1
 80019e4:	2102      	movs	r1, #2
 80019e6:	4878      	ldr	r0, [pc, #480]	@ (8001bc8 <ocitanje+0x280>)
 80019e8:	f001 fb72 	bl	80030d0 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_15, 0);
 80019ec:	2200      	movs	r2, #0
 80019ee:	f44f 4100 	mov.w	r1, #32768	@ 0x8000
 80019f2:	4875      	ldr	r0, [pc, #468]	@ (8001bc8 <ocitanje+0x280>)
 80019f4:	f001 fb6c 	bl	80030d0 <HAL_GPIO_WritePin>
	}

	status = MFRC522_Request(PICC_REQIDL, str);  // Traži RFID tag
 80019f8:	4977      	ldr	r1, [pc, #476]	@ (8001bd8 <ocitanje+0x290>)
 80019fa:	2026      	movs	r0, #38	@ 0x26
 80019fc:	f7ff fc60 	bl	80012c0 <MFRC522_Request>
 8001a00:	4603      	mov	r3, r0
 8001a02:	461a      	mov	r2, r3
 8001a04:	4b75      	ldr	r3, [pc, #468]	@ (8001bdc <ocitanje+0x294>)
 8001a06:	701a      	strb	r2, [r3, #0]
	status = MFRC522_Anticoll(str);              // Anti-kolizija (dobije UID)
 8001a08:	4873      	ldr	r0, [pc, #460]	@ (8001bd8 <ocitanje+0x290>)
 8001a0a:	f7ff fc7e 	bl	800130a <MFRC522_Anticoll>
 8001a0e:	4603      	mov	r3, r0
 8001a10:	461a      	mov	r2, r3
 8001a12:	4b72      	ldr	r3, [pc, #456]	@ (8001bdc <ocitanje+0x294>)
 8001a14:	701a      	strb	r2, [r3, #0]
	memcpy(sNum, str, 4);                        // Kopira UID u buffer
 8001a16:	4b70      	ldr	r3, [pc, #448]	@ (8001bd8 <ocitanje+0x290>)
 8001a18:	681b      	ldr	r3, [r3, #0]
 8001a1a:	4a71      	ldr	r2, [pc, #452]	@ (8001be0 <ocitanje+0x298>)
 8001a1c:	6013      	str	r3, [r2, #0]

	HAL_Delay(200);
 8001a1e:	20c8      	movs	r0, #200	@ 0xc8
 8001a20:	f001 f88c 	bl	8002b3c <HAL_Delay>

	// Validna kartica
	uint8_t validna_kartica[] = { 0x75, 0xED, 0xE7, 0x2B };
 8001a24:	4b6f      	ldr	r3, [pc, #444]	@ (8001be4 <ocitanje+0x29c>)
 8001a26:	607b      	str	r3, [r7, #4]
	bool is_valid = true;
 8001a28:	2301      	movs	r3, #1
 8001a2a:	73fb      	strb	r3, [r7, #15]

	// Provjeri je li očitana kartica validna
	for (int i = 0; i < 4; i++) {
 8001a2c:	2300      	movs	r3, #0
 8001a2e:	60bb      	str	r3, [r7, #8]
 8001a30:	e00f      	b.n	8001a52 <ocitanje+0x10a>
		if (str[i] != validna_kartica[i]) {
 8001a32:	4a69      	ldr	r2, [pc, #420]	@ (8001bd8 <ocitanje+0x290>)
 8001a34:	68bb      	ldr	r3, [r7, #8]
 8001a36:	4413      	add	r3, r2
 8001a38:	781a      	ldrb	r2, [r3, #0]
 8001a3a:	1d39      	adds	r1, r7, #4
 8001a3c:	68bb      	ldr	r3, [r7, #8]
 8001a3e:	440b      	add	r3, r1
 8001a40:	781b      	ldrb	r3, [r3, #0]
 8001a42:	429a      	cmp	r2, r3
 8001a44:	d002      	beq.n	8001a4c <ocitanje+0x104>
			is_valid = false;
 8001a46:	2300      	movs	r3, #0
 8001a48:	73fb      	strb	r3, [r7, #15]
			break;
 8001a4a:	e005      	b.n	8001a58 <ocitanje+0x110>
	for (int i = 0; i < 4; i++) {
 8001a4c:	68bb      	ldr	r3, [r7, #8]
 8001a4e:	3301      	adds	r3, #1
 8001a50:	60bb      	str	r3, [r7, #8]
 8001a52:	68bb      	ldr	r3, [r7, #8]
 8001a54:	2b03      	cmp	r3, #3
 8001a56:	ddec      	ble.n	8001a32 <ocitanje+0xea>
		}
	}

	if (Distance <= 5 && Distance2 <= 5 && Distance3 <= 5
 8001a58:	4b5a      	ldr	r3, [pc, #360]	@ (8001bc4 <ocitanje+0x27c>)
 8001a5a:	781b      	ldrb	r3, [r3, #0]
 8001a5c:	2b05      	cmp	r3, #5
 8001a5e:	d828      	bhi.n	8001ab2 <ocitanje+0x16a>
 8001a60:	4b5b      	ldr	r3, [pc, #364]	@ (8001bd0 <ocitanje+0x288>)
 8001a62:	781b      	ldrb	r3, [r3, #0]
 8001a64:	2b05      	cmp	r3, #5
 8001a66:	d824      	bhi.n	8001ab2 <ocitanje+0x16a>
 8001a68:	4b5a      	ldr	r3, [pc, #360]	@ (8001bd4 <ocitanje+0x28c>)
 8001a6a:	781b      	ldrb	r3, [r3, #0]
 8001a6c:	2b05      	cmp	r3, #5
 8001a6e:	d820      	bhi.n	8001ab2 <ocitanje+0x16a>
			&& (status != MI_OK || status == MI_OK)) { // Ako su sva mjesta zauzeta
 8001a70:	4b5a      	ldr	r3, [pc, #360]	@ (8001bdc <ocitanje+0x294>)
 8001a72:	781b      	ldrb	r3, [r3, #0]
 8001a74:	2b00      	cmp	r3, #0
 8001a76:	d103      	bne.n	8001a80 <ocitanje+0x138>
 8001a78:	4b58      	ldr	r3, [pc, #352]	@ (8001bdc <ocitanje+0x294>)
 8001a7a:	781b      	ldrb	r3, [r3, #0]
 8001a7c:	2b00      	cmp	r3, #0
 8001a7e:	d118      	bne.n	8001ab2 <ocitanje+0x16a>
		if (trenutnoStanje != EKRAN_ZAUZETO) {
 8001a80:	4b59      	ldr	r3, [pc, #356]	@ (8001be8 <ocitanje+0x2a0>)
 8001a82:	781b      	ldrb	r3, [r3, #0]
 8001a84:	2b02      	cmp	r3, #2
 8001a86:	f000 8097 	beq.w	8001bb8 <ocitanje+0x270>
			oled_Fill(Black);
 8001a8a:	2000      	movs	r0, #0
 8001a8c:	f000 fa06 	bl	8001e9c <oled_Fill>
			oled_SetCursor(0, 0);
 8001a90:	2100      	movs	r1, #0
 8001a92:	2000      	movs	r0, #0
 8001a94:	f000 fb4e 	bl	8002134 <oled_SetCursor>
			oled_WriteString("Mjesta su zauzeta!", Font_6x8, White);
 8001a98:	4b54      	ldr	r3, [pc, #336]	@ (8001bec <ocitanje+0x2a4>)
 8001a9a:	2201      	movs	r2, #1
 8001a9c:	9200      	str	r2, [sp, #0]
 8001a9e:	cb0e      	ldmia	r3, {r1, r2, r3}
 8001aa0:	4853      	ldr	r0, [pc, #332]	@ (8001bf0 <ocitanje+0x2a8>)
 8001aa2:	f000 fb21 	bl	80020e8 <oled_WriteString>
			oled_UpdateScreen();
 8001aa6:	f000 fa11 	bl	8001ecc <oled_UpdateScreen>
			trenutnoStanje = EKRAN_ZAUZETO; // Spremanje varijable
 8001aaa:	4b4f      	ldr	r3, [pc, #316]	@ (8001be8 <ocitanje+0x2a0>)
 8001aac:	2202      	movs	r2, #2
 8001aae:	701a      	strb	r2, [r3, #0]
		}
		return;
 8001ab0:	e082      	b.n	8001bb8 <ocitanje+0x270>
	}

	if (status != MI_OK) {
 8001ab2:	4b4a      	ldr	r3, [pc, #296]	@ (8001bdc <ocitanje+0x294>)
 8001ab4:	781b      	ldrb	r3, [r3, #0]
 8001ab6:	2b00      	cmp	r3, #0
 8001ab8:	d017      	beq.n	8001aea <ocitanje+0x1a2>
		if (trenutnoStanje != EKRAN_KARTICA) { // Defautno stanje
 8001aba:	4b4b      	ldr	r3, [pc, #300]	@ (8001be8 <ocitanje+0x2a0>)
 8001abc:	781b      	ldrb	r3, [r3, #0]
 8001abe:	2b01      	cmp	r3, #1
 8001ac0:	d07c      	beq.n	8001bbc <ocitanje+0x274>
			oled_Fill(Black);
 8001ac2:	2000      	movs	r0, #0
 8001ac4:	f000 f9ea 	bl	8001e9c <oled_Fill>
			oled_SetCursor(0, 0);
 8001ac8:	2100      	movs	r1, #0
 8001aca:	2000      	movs	r0, #0
 8001acc:	f000 fb32 	bl	8002134 <oled_SetCursor>
			oled_WriteString("Prislonite karticu.\n", Font_6x8, White);
 8001ad0:	4b46      	ldr	r3, [pc, #280]	@ (8001bec <ocitanje+0x2a4>)
 8001ad2:	2201      	movs	r2, #1
 8001ad4:	9200      	str	r2, [sp, #0]
 8001ad6:	cb0e      	ldmia	r3, {r1, r2, r3}
 8001ad8:	4846      	ldr	r0, [pc, #280]	@ (8001bf4 <ocitanje+0x2ac>)
 8001ada:	f000 fb05 	bl	80020e8 <oled_WriteString>
			oled_UpdateScreen();
 8001ade:	f000 f9f5 	bl	8001ecc <oled_UpdateScreen>
			trenutnoStanje = EKRAN_KARTICA;
 8001ae2:	4b41      	ldr	r3, [pc, #260]	@ (8001be8 <ocitanje+0x2a0>)
 8001ae4:	2201      	movs	r2, #1
 8001ae6:	701a      	strb	r2, [r3, #0]
		}
		return;
 8001ae8:	e068      	b.n	8001bbc <ocitanje+0x274>
	}

	else if (is_valid) {
 8001aea:	7bfb      	ldrb	r3, [r7, #15]
 8001aec:	2b00      	cmp	r3, #0
 8001aee:	d034      	beq.n	8001b5a <ocitanje+0x212>
		if (trenutnoStanje != EKRAN_ISPRAVNA) { // Ako je kartica ispravna
 8001af0:	4b3d      	ldr	r3, [pc, #244]	@ (8001be8 <ocitanje+0x2a0>)
 8001af2:	781b      	ldrb	r3, [r3, #0]
 8001af4:	2b03      	cmp	r3, #3
 8001af6:	d062      	beq.n	8001bbe <ocitanje+0x276>
			HAL_Delay(30);
 8001af8:	201e      	movs	r0, #30
 8001afa:	f001 f81f 	bl	8002b3c <HAL_Delay>
			playTone(3500, 100);
 8001afe:	2164      	movs	r1, #100	@ 0x64
 8001b00:	f640 50ac 	movw	r0, #3500	@ 0xdac
 8001b04:	f7ff fe6c 	bl	80017e0 <playTone>
			HAL_Delay(50);
 8001b08:	2032      	movs	r0, #50	@ 0x32
 8001b0a:	f001 f817 	bl	8002b3c <HAL_Delay>
			playTone(4000, 100);
 8001b0e:	2164      	movs	r1, #100	@ 0x64
 8001b10:	f44f 607a 	mov.w	r0, #4000	@ 0xfa0
 8001b14:	f7ff fe64 	bl	80017e0 <playTone>
			HAL_Delay(50);
 8001b18:	2032      	movs	r0, #50	@ 0x32
 8001b1a:	f001 f80f 	bl	8002b3c <HAL_Delay>
			playTone(4500, 100);
 8001b1e:	2164      	movs	r1, #100	@ 0x64
 8001b20:	f241 1094 	movw	r0, #4500	@ 0x1194
 8001b24:	f7ff fe5c 	bl	80017e0 <playTone>
			HAL_Delay(50);
 8001b28:	2032      	movs	r0, #50	@ 0x32
 8001b2a:	f001 f807 	bl	8002b3c <HAL_Delay>
			oled_Fill(Black);
 8001b2e:	2000      	movs	r0, #0
 8001b30:	f000 f9b4 	bl	8001e9c <oled_Fill>
			oled_SetCursor(0, 0);
 8001b34:	2100      	movs	r1, #0
 8001b36:	2000      	movs	r0, #0
 8001b38:	f000 fafc 	bl	8002134 <oled_SetCursor>
			oled_WriteString("Ispravna kartica!", Font_6x8, White);
 8001b3c:	4b2b      	ldr	r3, [pc, #172]	@ (8001bec <ocitanje+0x2a4>)
 8001b3e:	2201      	movs	r2, #1
 8001b40:	9200      	str	r2, [sp, #0]
 8001b42:	cb0e      	ldmia	r3, {r1, r2, r3}
 8001b44:	482c      	ldr	r0, [pc, #176]	@ (8001bf8 <ocitanje+0x2b0>)
 8001b46:	f000 facf 	bl	80020e8 <oled_WriteString>
			oled_UpdateScreen();
 8001b4a:	f000 f9bf 	bl	8001ecc <oled_UpdateScreen>
			trenutnoStanje = EKRAN_ISPRAVNA;
 8001b4e:	4b26      	ldr	r3, [pc, #152]	@ (8001be8 <ocitanje+0x2a0>)
 8001b50:	2203      	movs	r2, #3
 8001b52:	701a      	strb	r2, [r3, #0]
			servo_sweep();
 8001b54:	f7ff fece 	bl	80018f4 <servo_sweep>
 8001b58:	e031      	b.n	8001bbe <ocitanje+0x276>
		}
	}

	else {
		if (trenutnoStanje != EKRAN_NEISPRAVNA) {  // Ako je kartica pogrešna
 8001b5a:	4b23      	ldr	r3, [pc, #140]	@ (8001be8 <ocitanje+0x2a0>)
 8001b5c:	781b      	ldrb	r3, [r3, #0]
 8001b5e:	2b04      	cmp	r3, #4
 8001b60:	d02d      	beq.n	8001bbe <ocitanje+0x276>
			HAL_Delay(30);
 8001b62:	201e      	movs	r0, #30
 8001b64:	f000 ffea 	bl	8002b3c <HAL_Delay>
			playTone(3000, 100);
 8001b68:	2164      	movs	r1, #100	@ 0x64
 8001b6a:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 8001b6e:	f7ff fe37 	bl	80017e0 <playTone>
			HAL_Delay(50);
 8001b72:	2032      	movs	r0, #50	@ 0x32
 8001b74:	f000 ffe2 	bl	8002b3c <HAL_Delay>
			playTone(2500, 200);
 8001b78:	21c8      	movs	r1, #200	@ 0xc8
 8001b7a:	f640 10c4 	movw	r0, #2500	@ 0x9c4
 8001b7e:	f7ff fe2f 	bl	80017e0 <playTone>
			HAL_Delay(50);
 8001b82:	2032      	movs	r0, #50	@ 0x32
 8001b84:	f000 ffda 	bl	8002b3c <HAL_Delay>
			oled_Fill(Black);
 8001b88:	2000      	movs	r0, #0
 8001b8a:	f000 f987 	bl	8001e9c <oled_Fill>
			oled_SetCursor(0, 0);
 8001b8e:	2100      	movs	r1, #0
 8001b90:	2000      	movs	r0, #0
 8001b92:	f000 facf 	bl	8002134 <oled_SetCursor>
			oled_WriteString("Pogresna kartica!", Font_6x8, White);
 8001b96:	4b15      	ldr	r3, [pc, #84]	@ (8001bec <ocitanje+0x2a4>)
 8001b98:	2201      	movs	r2, #1
 8001b9a:	9200      	str	r2, [sp, #0]
 8001b9c:	cb0e      	ldmia	r3, {r1, r2, r3}
 8001b9e:	4817      	ldr	r0, [pc, #92]	@ (8001bfc <ocitanje+0x2b4>)
 8001ba0:	f000 faa2 	bl	80020e8 <oled_WriteString>
			oled_UpdateScreen();
 8001ba4:	f000 f992 	bl	8001ecc <oled_UpdateScreen>
			HAL_Delay(3000);
 8001ba8:	f640 30b8 	movw	r0, #3000	@ 0xbb8
 8001bac:	f000 ffc6 	bl	8002b3c <HAL_Delay>
			trenutnoStanje = EKRAN_NEISPRAVNA;
 8001bb0:	4b0d      	ldr	r3, [pc, #52]	@ (8001be8 <ocitanje+0x2a0>)
 8001bb2:	2204      	movs	r2, #4
 8001bb4:	701a      	strb	r2, [r3, #0]
 8001bb6:	e002      	b.n	8001bbe <ocitanje+0x276>
		return;
 8001bb8:	bf00      	nop
 8001bba:	e000      	b.n	8001bbe <ocitanje+0x276>
		return;
 8001bbc:	bf00      	nop
		}
	}

}
 8001bbe:	3710      	adds	r7, #16
 8001bc0:	46bd      	mov	sp, r7
 8001bc2:	bd80      	pop	{r7, pc}
 8001bc4:	20000089 	.word	0x20000089
 8001bc8:	40020400 	.word	0x40020400
 8001bcc:	40020800 	.word	0x40020800
 8001bd0:	20000095 	.word	0x20000095
 8001bd4:	200000a5 	.word	0x200000a5
 8001bd8:	200000b0 	.word	0x200000b0
 8001bdc:	200000ac 	.word	0x200000ac
 8001be0:	200000c0 	.word	0x200000c0
 8001be4:	2be7ed75 	.word	0x2be7ed75
 8001be8:	200000c4 	.word	0x200000c4
 8001bec:	08006f90 	.word	0x08006f90
 8001bf0:	0800694c 	.word	0x0800694c
 8001bf4:	08006960 	.word	0x08006960
 8001bf8:	08006978 	.word	0x08006978
 8001bfc:	0800698c 	.word	0x0800698c

08001c00 <main>:
/* USER CODE END 0 */

int main(void) {
 8001c00:	b580      	push	{r7, lr}
 8001c02:	af00      	add	r7, sp, #0

	HAL_Init();               // Inicijalizacija HAL biblioteke
 8001c04:	f000 ff28 	bl	8002a58 <HAL_Init>
	SystemClock_Config();     // Konfiguracija takta
 8001c08:	f000 f830 	bl	8001c6c <SystemClock_Config>

	MX_GPIO_Init();           // Inicijalizacija GPIO pinova
 8001c0c:	f7ff f8a8 	bl	8000d60 <MX_GPIO_Init>
	MX_SPI1_Init();           // SPI (za RFID modul)
 8001c10:	f000 fada 	bl	80021c8 <MX_SPI1_Init>
	MX_USART2_UART_Init();    // UART (ako treba debug)
 8001c14:	f000 fe84 	bl	8002920 <MX_USART2_UART_Init>
	MX_I2C1_Init();           // I2C (za OLED)
 8001c18:	f7ff f92e 	bl	8000e78 <MX_I2C1_Init>
	MX_TIM1_Init();           // Tajmeri za IC (ultrazvuk)
 8001c1c:	f000 fbfa 	bl	8002414 <MX_TIM1_Init>
	MX_TIM6_Init();           // Tajmer za delay()
 8001c20:	f000 fd34 	bl	800268c <MX_TIM6_Init>
	MX_TIM3_Init();           // PWM za buzzer
 8001c24:	f000 fcd8 	bl	80025d8 <MX_TIM3_Init>
	MX_TIM2_Init();           // PWM za servo motor
 8001c28:	f000 fc60 	bl	80024ec <MX_TIM2_Init>

	MFRC522_Init();           // Inicijalizacija RFID modula
 8001c2c:	f7ff fa52 	bl	80010d4 <MFRC522_Init>
	oled_Init();           // OLED ekran
 8001c30:	f000 f8ca 	bl	8001dc8 <oled_Init>

	// Start interrupt capture za sva 3 kanala
	HAL_TIM_IC_Start_IT(&htim1, TIM_CHANNEL_1);
 8001c34:	2100      	movs	r1, #0
 8001c36:	480a      	ldr	r0, [pc, #40]	@ (8001c60 <main+0x60>)
 8001c38:	f003 fa12 	bl	8005060 <HAL_TIM_IC_Start_IT>
	HAL_TIM_IC_Start_IT(&htim1, TIM_CHANNEL_3);
 8001c3c:	2108      	movs	r1, #8
 8001c3e:	4808      	ldr	r0, [pc, #32]	@ (8001c60 <main+0x60>)
 8001c40:	f003 fa0e 	bl	8005060 <HAL_TIM_IC_Start_IT>
	HAL_TIM_IC_Start_IT(&htim1, TIM_CHANNEL_4);
 8001c44:	210c      	movs	r1, #12
 8001c46:	4806      	ldr	r0, [pc, #24]	@ (8001c60 <main+0x60>)
 8001c48:	f003 fa0a 	bl	8005060 <HAL_TIM_IC_Start_IT>

	HAL_TIM_Base_Start(&htim6);   // Start delay tajmera
 8001c4c:	4805      	ldr	r0, [pc, #20]	@ (8001c64 <main+0x64>)
 8001c4e:	f002 ffc7 	bl	8004be0 <HAL_TIM_Base_Start>
	HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);  // Start PWM za servo
 8001c52:	2100      	movs	r1, #0
 8001c54:	4804      	ldr	r0, [pc, #16]	@ (8001c68 <main+0x68>)
 8001c56:	f003 f87b 	bl	8004d50 <HAL_TIM_PWM_Start>

	while (1) {

		ocitanje(); // Pozivanje glavne funkcije
 8001c5a:	f7ff fe75 	bl	8001948 <ocitanje>
 8001c5e:	e7fc      	b.n	8001c5a <main+0x5a>
 8001c60:	20000528 	.word	0x20000528
 8001c64:	20000600 	.word	0x20000600
 8001c68:	20000570 	.word	0x20000570

08001c6c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001c6c:	b580      	push	{r7, lr}
 8001c6e:	b094      	sub	sp, #80	@ 0x50
 8001c70:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001c72:	f107 031c 	add.w	r3, r7, #28
 8001c76:	2234      	movs	r2, #52	@ 0x34
 8001c78:	2100      	movs	r1, #0
 8001c7a:	4618      	mov	r0, r3
 8001c7c:	f004 fe2e 	bl	80068dc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001c80:	f107 0308 	add.w	r3, r7, #8
 8001c84:	2200      	movs	r2, #0
 8001c86:	601a      	str	r2, [r3, #0]
 8001c88:	605a      	str	r2, [r3, #4]
 8001c8a:	609a      	str	r2, [r3, #8]
 8001c8c:	60da      	str	r2, [r3, #12]
 8001c8e:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001c90:	2300      	movs	r3, #0
 8001c92:	607b      	str	r3, [r7, #4]
 8001c94:	4b2a      	ldr	r3, [pc, #168]	@ (8001d40 <SystemClock_Config+0xd4>)
 8001c96:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c98:	4a29      	ldr	r2, [pc, #164]	@ (8001d40 <SystemClock_Config+0xd4>)
 8001c9a:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001c9e:	6413      	str	r3, [r2, #64]	@ 0x40
 8001ca0:	4b27      	ldr	r3, [pc, #156]	@ (8001d40 <SystemClock_Config+0xd4>)
 8001ca2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001ca4:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001ca8:	607b      	str	r3, [r7, #4]
 8001caa:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE3);
 8001cac:	2300      	movs	r3, #0
 8001cae:	603b      	str	r3, [r7, #0]
 8001cb0:	4b24      	ldr	r3, [pc, #144]	@ (8001d44 <SystemClock_Config+0xd8>)
 8001cb2:	681b      	ldr	r3, [r3, #0]
 8001cb4:	f423 4340 	bic.w	r3, r3, #49152	@ 0xc000
 8001cb8:	4a22      	ldr	r2, [pc, #136]	@ (8001d44 <SystemClock_Config+0xd8>)
 8001cba:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001cbe:	6013      	str	r3, [r2, #0]
 8001cc0:	4b20      	ldr	r3, [pc, #128]	@ (8001d44 <SystemClock_Config+0xd8>)
 8001cc2:	681b      	ldr	r3, [r3, #0]
 8001cc4:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 8001cc8:	603b      	str	r3, [r7, #0]
 8001cca:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001ccc:	2302      	movs	r3, #2
 8001cce:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001cd0:	2301      	movs	r3, #1
 8001cd2:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001cd4:	2310      	movs	r3, #16
 8001cd6:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8001cd8:	2302      	movs	r3, #2
 8001cda:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001cdc:	2300      	movs	r3, #0
 8001cde:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001ce0:	2308      	movs	r3, #8
 8001ce2:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 64;
 8001ce4:	2340      	movs	r3, #64	@ 0x40
 8001ce6:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8001ce8:	2302      	movs	r3, #2
 8001cea:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8001cec:	2302      	movs	r3, #2
 8001cee:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8001cf0:	2302      	movs	r3, #2
 8001cf2:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001cf4:	f107 031c 	add.w	r3, r7, #28
 8001cf8:	4618      	mov	r0, r3
 8001cfa:	f002 f975 	bl	8003fe8 <HAL_RCC_OscConfig>
 8001cfe:	4603      	mov	r3, r0
 8001d00:	2b00      	cmp	r3, #0
 8001d02:	d001      	beq.n	8001d08 <SystemClock_Config+0x9c>
  {
    Error_Handler();
 8001d04:	f000 f820 	bl	8001d48 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001d08:	230f      	movs	r3, #15
 8001d0a:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001d0c:	2302      	movs	r3, #2
 8001d0e:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV4;
 8001d10:	2390      	movs	r3, #144	@ 0x90
 8001d12:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 8001d14:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 8001d18:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001d1a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001d1e:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001d20:	f107 0308 	add.w	r3, r7, #8
 8001d24:	2100      	movs	r1, #0
 8001d26:	4618      	mov	r0, r3
 8001d28:	f001 fe9a 	bl	8003a60 <HAL_RCC_ClockConfig>
 8001d2c:	4603      	mov	r3, r0
 8001d2e:	2b00      	cmp	r3, #0
 8001d30:	d001      	beq.n	8001d36 <SystemClock_Config+0xca>
  {
    Error_Handler();
 8001d32:	f000 f809 	bl	8001d48 <Error_Handler>
  }
}
 8001d36:	bf00      	nop
 8001d38:	3750      	adds	r7, #80	@ 0x50
 8001d3a:	46bd      	mov	sp, r7
 8001d3c:	bd80      	pop	{r7, pc}
 8001d3e:	bf00      	nop
 8001d40:	40023800 	.word	0x40023800
 8001d44:	40007000 	.word	0x40007000

08001d48 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8001d48:	b480      	push	{r7}
 8001d4a:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001d4c:	b672      	cpsid	i
}
 8001d4e:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	/* User can add his own implementation to report the HAL error return state */
	__disable_irq();
	while (1) {
 8001d50:	bf00      	nop
 8001d52:	e7fd      	b.n	8001d50 <Error_Handler+0x8>

08001d54 <oled_Reset>:
#include <stdlib.h>
#include <string.h>

#if defined(OLED_USE_I2C)

void oled_Reset(void) {
 8001d54:	b480      	push	{r7}
 8001d56:	af00      	add	r7, sp, #0
    /* for I2C - do nothing */
}
 8001d58:	bf00      	nop
 8001d5a:	46bd      	mov	sp, r7
 8001d5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001d60:	4770      	bx	lr
	...

08001d64 <oled_WriteCommand>:

// Send a byte to the command register
void oled_WriteCommand(uint8_t byte) {
 8001d64:	b580      	push	{r7, lr}
 8001d66:	b086      	sub	sp, #24
 8001d68:	af04      	add	r7, sp, #16
 8001d6a:	4603      	mov	r3, r0
 8001d6c:	71fb      	strb	r3, [r7, #7]
    HAL_I2C_Mem_Write(&OLED_I2C_PORT, OLED_I2C_ADDR, 0x00, 1, &byte, 1, HAL_MAX_DELAY);
 8001d6e:	f04f 33ff 	mov.w	r3, #4294967295
 8001d72:	9302      	str	r3, [sp, #8]
 8001d74:	2301      	movs	r3, #1
 8001d76:	9301      	str	r3, [sp, #4]
 8001d78:	1dfb      	adds	r3, r7, #7
 8001d7a:	9300      	str	r3, [sp, #0]
 8001d7c:	2301      	movs	r3, #1
 8001d7e:	2200      	movs	r2, #0
 8001d80:	2178      	movs	r1, #120	@ 0x78
 8001d82:	4803      	ldr	r0, [pc, #12]	@ (8001d90 <oled_WriteCommand+0x2c>)
 8001d84:	f001 fb02 	bl	800338c <HAL_I2C_Mem_Write>
}
 8001d88:	bf00      	nop
 8001d8a:	3708      	adds	r7, #8
 8001d8c:	46bd      	mov	sp, r7
 8001d8e:	bd80      	pop	{r7, pc}
 8001d90:	20000028 	.word	0x20000028

08001d94 <oled_WriteData>:

// Send data
void oled_WriteData(uint8_t* buffer, size_t buff_size) {
 8001d94:	b580      	push	{r7, lr}
 8001d96:	b086      	sub	sp, #24
 8001d98:	af04      	add	r7, sp, #16
 8001d9a:	6078      	str	r0, [r7, #4]
 8001d9c:	6039      	str	r1, [r7, #0]
    HAL_I2C_Mem_Write(&OLED_I2C_PORT, OLED_I2C_ADDR, 0x40, 1, buffer, buff_size, HAL_MAX_DELAY);
 8001d9e:	683b      	ldr	r3, [r7, #0]
 8001da0:	b29b      	uxth	r3, r3
 8001da2:	f04f 32ff 	mov.w	r2, #4294967295
 8001da6:	9202      	str	r2, [sp, #8]
 8001da8:	9301      	str	r3, [sp, #4]
 8001daa:	687b      	ldr	r3, [r7, #4]
 8001dac:	9300      	str	r3, [sp, #0]
 8001dae:	2301      	movs	r3, #1
 8001db0:	2240      	movs	r2, #64	@ 0x40
 8001db2:	2178      	movs	r1, #120	@ 0x78
 8001db4:	4803      	ldr	r0, [pc, #12]	@ (8001dc4 <oled_WriteData+0x30>)
 8001db6:	f001 fae9 	bl	800338c <HAL_I2C_Mem_Write>
}
 8001dba:	bf00      	nop
 8001dbc:	3708      	adds	r7, #8
 8001dbe:	46bd      	mov	sp, r7
 8001dc0:	bd80      	pop	{r7, pc}
 8001dc2:	bf00      	nop
 8001dc4:	20000028 	.word	0x20000028

08001dc8 <oled_Init>:

// Screen object
static OLED_t OLED;

/* Initialize the oled screen */
void oled_Init(void) {
 8001dc8:	b580      	push	{r7, lr}
 8001dca:	af00      	add	r7, sp, #0
    // Reset OLED
    oled_Reset();
 8001dcc:	f7ff ffc2 	bl	8001d54 <oled_Reset>

    // Wait for the screen to boot
    HAL_Delay(100);
 8001dd0:	2064      	movs	r0, #100	@ 0x64
 8001dd2:	f000 feb3 	bl	8002b3c <HAL_Delay>

    // Init OLED
    oled_SetDisplayOn(0); //display off
 8001dd6:	2000      	movs	r0, #0
 8001dd8:	f000 f9d8 	bl	800218c <oled_SetDisplayOn>

    oled_WriteCommand(0x20); //Set Memory Addressing Mode
 8001ddc:	2020      	movs	r0, #32
 8001dde:	f7ff ffc1 	bl	8001d64 <oled_WriteCommand>
    oled_WriteCommand(0x00); // 00b,Horizontal Addressing Mode; 01b,Vertical Addressing Mode;
 8001de2:	2000      	movs	r0, #0
 8001de4:	f7ff ffbe 	bl	8001d64 <oled_WriteCommand>
                                // 10b,Page Addressing Mode (RESET); 11b,Invalid

    oled_WriteCommand(0xB0); //Set Page Start Address for Page Addressing Mode,0-7
 8001de8:	20b0      	movs	r0, #176	@ 0xb0
 8001dea:	f7ff ffbb 	bl	8001d64 <oled_WriteCommand>

#ifdef OLED_MIRROR_VERT
    oled_WriteCommand(0xC0); // Mirror vertically
#else
    oled_WriteCommand(0xC8); //Set COM Output Scan Direction
 8001dee:	20c8      	movs	r0, #200	@ 0xc8
 8001df0:	f7ff ffb8 	bl	8001d64 <oled_WriteCommand>
#endif

    oled_WriteCommand(0x00); //---set low column address
 8001df4:	2000      	movs	r0, #0
 8001df6:	f7ff ffb5 	bl	8001d64 <oled_WriteCommand>
    oled_WriteCommand(0x10); //---set high column address
 8001dfa:	2010      	movs	r0, #16
 8001dfc:	f7ff ffb2 	bl	8001d64 <oled_WriteCommand>

    oled_WriteCommand(0x40); //--set start line address - CHECK
 8001e00:	2040      	movs	r0, #64	@ 0x40
 8001e02:	f7ff ffaf 	bl	8001d64 <oled_WriteCommand>

    oled_SetContrast(0xFF);
 8001e06:	20ff      	movs	r0, #255	@ 0xff
 8001e08:	f000 f9ac 	bl	8002164 <oled_SetContrast>

#ifdef OLED_MIRROR_HORIZ
    oled_WriteCommand(0xA0); // Mirror horizontally
#else
    oled_WriteCommand(0xA1); //--set segment re-map 0 to 127 - CHECK
 8001e0c:	20a1      	movs	r0, #161	@ 0xa1
 8001e0e:	f7ff ffa9 	bl	8001d64 <oled_WriteCommand>
#endif

#ifdef OLED_INVERSE_COLOR
    oled_WriteCommand(0xA7); //--set inverse color
#else
    oled_WriteCommand(0xA6); //--set normal color
 8001e12:	20a6      	movs	r0, #166	@ 0xa6
 8001e14:	f7ff ffa6 	bl	8001d64 <oled_WriteCommand>
// Set multiplex ratio.
#if (OLED_HEIGHT == 128)
    // Found in the Luma Python lib for SH1106.
    oled_WriteCommand(0xFF);
#else
    oled_WriteCommand(0xA8); //--set multiplex ratio(1 to 64) - CHECK
 8001e18:	20a8      	movs	r0, #168	@ 0xa8
 8001e1a:	f7ff ffa3 	bl	8001d64 <oled_WriteCommand>
#endif

#if (OLED_HEIGHT == 32)
    oled_WriteCommand(0x1F); //
#elif (OLED_HEIGHT == 64)
    oled_WriteCommand(0x3F); //
 8001e1e:	203f      	movs	r0, #63	@ 0x3f
 8001e20:	f7ff ffa0 	bl	8001d64 <oled_WriteCommand>
    oled_WriteCommand(0x3F); // Seems to work for 128px high displays too.
#else
#error "Only 32, 64, or 128 lines of height are supported!"
#endif

    oled_WriteCommand(0xA4); //0xa4,Output follows RAM content;0xa5,Output ignores RAM content
 8001e24:	20a4      	movs	r0, #164	@ 0xa4
 8001e26:	f7ff ff9d 	bl	8001d64 <oled_WriteCommand>

    oled_WriteCommand(0xD3); //-set display offset - CHECK
 8001e2a:	20d3      	movs	r0, #211	@ 0xd3
 8001e2c:	f7ff ff9a 	bl	8001d64 <oled_WriteCommand>
    oled_WriteCommand(0x00); //-not offset
 8001e30:	2000      	movs	r0, #0
 8001e32:	f7ff ff97 	bl	8001d64 <oled_WriteCommand>

    oled_WriteCommand(0xD5); //--set display clock divide ratio/oscillator frequency
 8001e36:	20d5      	movs	r0, #213	@ 0xd5
 8001e38:	f7ff ff94 	bl	8001d64 <oled_WriteCommand>
    oled_WriteCommand(0xF0); //--set divide ratio
 8001e3c:	20f0      	movs	r0, #240	@ 0xf0
 8001e3e:	f7ff ff91 	bl	8001d64 <oled_WriteCommand>

    oled_WriteCommand(0xD9); //--set pre-charge period
 8001e42:	20d9      	movs	r0, #217	@ 0xd9
 8001e44:	f7ff ff8e 	bl	8001d64 <oled_WriteCommand>
    oled_WriteCommand(0x22); //
 8001e48:	2022      	movs	r0, #34	@ 0x22
 8001e4a:	f7ff ff8b 	bl	8001d64 <oled_WriteCommand>

    oled_WriteCommand(0xDA); //--set com pins hardware configuration - CHECK
 8001e4e:	20da      	movs	r0, #218	@ 0xda
 8001e50:	f7ff ff88 	bl	8001d64 <oled_WriteCommand>
#if (OLED_HEIGHT == 32)
    oled_WriteCommand(0x02);
#elif (OLED_HEIGHT == 64)
    oled_WriteCommand(0x12);
 8001e54:	2012      	movs	r0, #18
 8001e56:	f7ff ff85 	bl	8001d64 <oled_WriteCommand>
    oled_WriteCommand(0x12);
#else
#error "Only 32, 64, or 128 lines of height are supported!"
#endif

    oled_WriteCommand(0xDB); //--set vcomh
 8001e5a:	20db      	movs	r0, #219	@ 0xdb
 8001e5c:	f7ff ff82 	bl	8001d64 <oled_WriteCommand>
    oled_WriteCommand(0x20); //0x20,0.77xVcc
 8001e60:	2020      	movs	r0, #32
 8001e62:	f7ff ff7f 	bl	8001d64 <oled_WriteCommand>

    oled_WriteCommand(0x8D); //--set DC-DC enable
 8001e66:	208d      	movs	r0, #141	@ 0x8d
 8001e68:	f7ff ff7c 	bl	8001d64 <oled_WriteCommand>
    oled_WriteCommand(0x14); //
 8001e6c:	2014      	movs	r0, #20
 8001e6e:	f7ff ff79 	bl	8001d64 <oled_WriteCommand>
    oled_SetDisplayOn(1); //--turn on OLED panel
 8001e72:	2001      	movs	r0, #1
 8001e74:	f000 f98a 	bl	800218c <oled_SetDisplayOn>

    // Clear screen
    oled_Fill(Black);
 8001e78:	2000      	movs	r0, #0
 8001e7a:	f000 f80f 	bl	8001e9c <oled_Fill>
    
    // Flush buffer to screen
    oled_UpdateScreen();
 8001e7e:	f000 f825 	bl	8001ecc <oled_UpdateScreen>
    
    // Set default values for screen object
    OLED.CurrentX = 0;
 8001e82:	4b05      	ldr	r3, [pc, #20]	@ (8001e98 <oled_Init+0xd0>)
 8001e84:	2200      	movs	r2, #0
 8001e86:	801a      	strh	r2, [r3, #0]
    OLED.CurrentY = 0;
 8001e88:	4b03      	ldr	r3, [pc, #12]	@ (8001e98 <oled_Init+0xd0>)
 8001e8a:	2200      	movs	r2, #0
 8001e8c:	805a      	strh	r2, [r3, #2]
    
    OLED.Initialized = 1;
 8001e8e:	4b02      	ldr	r3, [pc, #8]	@ (8001e98 <oled_Init+0xd0>)
 8001e90:	2201      	movs	r2, #1
 8001e92:	711a      	strb	r2, [r3, #4]
}
 8001e94:	bf00      	nop
 8001e96:	bd80      	pop	{r7, pc}
 8001e98:	200004c8 	.word	0x200004c8

08001e9c <oled_Fill>:

void oled_Fill(OLED_COLOR color) {
 8001e9c:	b580      	push	{r7, lr}
 8001e9e:	b082      	sub	sp, #8
 8001ea0:	af00      	add	r7, sp, #0
 8001ea2:	4603      	mov	r3, r0
 8001ea4:	71fb      	strb	r3, [r7, #7]
    memset(OLED_Buffer, (color == Black) ? 0x00 : 0xFF, sizeof(OLED_Buffer));
 8001ea6:	79fb      	ldrb	r3, [r7, #7]
 8001ea8:	2b00      	cmp	r3, #0
 8001eaa:	d101      	bne.n	8001eb0 <oled_Fill+0x14>
 8001eac:	2300      	movs	r3, #0
 8001eae:	e000      	b.n	8001eb2 <oled_Fill+0x16>
 8001eb0:	23ff      	movs	r3, #255	@ 0xff
 8001eb2:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001eb6:	4619      	mov	r1, r3
 8001eb8:	4803      	ldr	r0, [pc, #12]	@ (8001ec8 <oled_Fill+0x2c>)
 8001eba:	f004 fd0f 	bl	80068dc <memset>
}
 8001ebe:	bf00      	nop
 8001ec0:	3708      	adds	r7, #8
 8001ec2:	46bd      	mov	sp, r7
 8001ec4:	bd80      	pop	{r7, pc}
 8001ec6:	bf00      	nop
 8001ec8:	200000c8 	.word	0x200000c8

08001ecc <oled_UpdateScreen>:

void oled_UpdateScreen(void) {
 8001ecc:	b580      	push	{r7, lr}
 8001ece:	b082      	sub	sp, #8
 8001ed0:	af00      	add	r7, sp, #0
    // depends on the screen height:
    //
    //  * 32px   ==  4 pages
    //  * 64px   ==  8 pages
    //  * 128px  ==  16 pages
    for(uint8_t i = 0; i < OLED_HEIGHT/8; i++) {
 8001ed2:	2300      	movs	r3, #0
 8001ed4:	71fb      	strb	r3, [r7, #7]
 8001ed6:	e016      	b.n	8001f06 <oled_UpdateScreen+0x3a>
        oled_WriteCommand(0xB0 + i); // Set the current RAM page address.
 8001ed8:	79fb      	ldrb	r3, [r7, #7]
 8001eda:	3b50      	subs	r3, #80	@ 0x50
 8001edc:	b2db      	uxtb	r3, r3
 8001ede:	4618      	mov	r0, r3
 8001ee0:	f7ff ff40 	bl	8001d64 <oled_WriteCommand>
        oled_WriteCommand(0x00 + OLED_X_OFFSET_LOWER);
 8001ee4:	2000      	movs	r0, #0
 8001ee6:	f7ff ff3d 	bl	8001d64 <oled_WriteCommand>
        oled_WriteCommand(0x10 + OLED_X_OFFSET_UPPER);
 8001eea:	2010      	movs	r0, #16
 8001eec:	f7ff ff3a 	bl	8001d64 <oled_WriteCommand>
        oled_WriteData(&OLED_Buffer[OLED_WIDTH*i],OLED_WIDTH);
 8001ef0:	79fb      	ldrb	r3, [r7, #7]
 8001ef2:	01db      	lsls	r3, r3, #7
 8001ef4:	4a08      	ldr	r2, [pc, #32]	@ (8001f18 <oled_UpdateScreen+0x4c>)
 8001ef6:	4413      	add	r3, r2
 8001ef8:	2180      	movs	r1, #128	@ 0x80
 8001efa:	4618      	mov	r0, r3
 8001efc:	f7ff ff4a 	bl	8001d94 <oled_WriteData>
    for(uint8_t i = 0; i < OLED_HEIGHT/8; i++) {
 8001f00:	79fb      	ldrb	r3, [r7, #7]
 8001f02:	3301      	adds	r3, #1
 8001f04:	71fb      	strb	r3, [r7, #7]
 8001f06:	79fb      	ldrb	r3, [r7, #7]
 8001f08:	2b07      	cmp	r3, #7
 8001f0a:	d9e5      	bls.n	8001ed8 <oled_UpdateScreen+0xc>
    }
}
 8001f0c:	bf00      	nop
 8001f0e:	bf00      	nop
 8001f10:	3708      	adds	r7, #8
 8001f12:	46bd      	mov	sp, r7
 8001f14:	bd80      	pop	{r7, pc}
 8001f16:	bf00      	nop
 8001f18:	200000c8 	.word	0x200000c8

08001f1c <oled_DrawPixel>:


void oled_DrawPixel(uint8_t x, uint8_t y, OLED_COLOR color) {
 8001f1c:	b480      	push	{r7}
 8001f1e:	b083      	sub	sp, #12
 8001f20:	af00      	add	r7, sp, #0
 8001f22:	4603      	mov	r3, r0
 8001f24:	71fb      	strb	r3, [r7, #7]
 8001f26:	460b      	mov	r3, r1
 8001f28:	71bb      	strb	r3, [r7, #6]
 8001f2a:	4613      	mov	r3, r2
 8001f2c:	717b      	strb	r3, [r7, #5]
    if(x >= OLED_WIDTH || y >= OLED_HEIGHT) {
 8001f2e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8001f32:	2b00      	cmp	r3, #0
 8001f34:	db3d      	blt.n	8001fb2 <oled_DrawPixel+0x96>
 8001f36:	79bb      	ldrb	r3, [r7, #6]
 8001f38:	2b3f      	cmp	r3, #63	@ 0x3f
 8001f3a:	d83a      	bhi.n	8001fb2 <oled_DrawPixel+0x96>
        // Don't write outside the buffer
        return;
    }
   
    // Draw in the right color
    if(color == White) {
 8001f3c:	797b      	ldrb	r3, [r7, #5]
 8001f3e:	2b01      	cmp	r3, #1
 8001f40:	d11a      	bne.n	8001f78 <oled_DrawPixel+0x5c>
        OLED_Buffer[x + (y / 8) * OLED_WIDTH] |= 1 << (y % 8);
 8001f42:	79fa      	ldrb	r2, [r7, #7]
 8001f44:	79bb      	ldrb	r3, [r7, #6]
 8001f46:	08db      	lsrs	r3, r3, #3
 8001f48:	b2d8      	uxtb	r0, r3
 8001f4a:	4603      	mov	r3, r0
 8001f4c:	01db      	lsls	r3, r3, #7
 8001f4e:	4413      	add	r3, r2
 8001f50:	4a1b      	ldr	r2, [pc, #108]	@ (8001fc0 <oled_DrawPixel+0xa4>)
 8001f52:	5cd3      	ldrb	r3, [r2, r3]
 8001f54:	b25a      	sxtb	r2, r3
 8001f56:	79bb      	ldrb	r3, [r7, #6]
 8001f58:	f003 0307 	and.w	r3, r3, #7
 8001f5c:	2101      	movs	r1, #1
 8001f5e:	fa01 f303 	lsl.w	r3, r1, r3
 8001f62:	b25b      	sxtb	r3, r3
 8001f64:	4313      	orrs	r3, r2
 8001f66:	b259      	sxtb	r1, r3
 8001f68:	79fa      	ldrb	r2, [r7, #7]
 8001f6a:	4603      	mov	r3, r0
 8001f6c:	01db      	lsls	r3, r3, #7
 8001f6e:	4413      	add	r3, r2
 8001f70:	b2c9      	uxtb	r1, r1
 8001f72:	4a13      	ldr	r2, [pc, #76]	@ (8001fc0 <oled_DrawPixel+0xa4>)
 8001f74:	54d1      	strb	r1, [r2, r3]
 8001f76:	e01d      	b.n	8001fb4 <oled_DrawPixel+0x98>
    } else { 
        OLED_Buffer[x + (y / 8) * OLED_WIDTH] &= ~(1 << (y % 8));
 8001f78:	79fa      	ldrb	r2, [r7, #7]
 8001f7a:	79bb      	ldrb	r3, [r7, #6]
 8001f7c:	08db      	lsrs	r3, r3, #3
 8001f7e:	b2d8      	uxtb	r0, r3
 8001f80:	4603      	mov	r3, r0
 8001f82:	01db      	lsls	r3, r3, #7
 8001f84:	4413      	add	r3, r2
 8001f86:	4a0e      	ldr	r2, [pc, #56]	@ (8001fc0 <oled_DrawPixel+0xa4>)
 8001f88:	5cd3      	ldrb	r3, [r2, r3]
 8001f8a:	b25a      	sxtb	r2, r3
 8001f8c:	79bb      	ldrb	r3, [r7, #6]
 8001f8e:	f003 0307 	and.w	r3, r3, #7
 8001f92:	2101      	movs	r1, #1
 8001f94:	fa01 f303 	lsl.w	r3, r1, r3
 8001f98:	b25b      	sxtb	r3, r3
 8001f9a:	43db      	mvns	r3, r3
 8001f9c:	b25b      	sxtb	r3, r3
 8001f9e:	4013      	ands	r3, r2
 8001fa0:	b259      	sxtb	r1, r3
 8001fa2:	79fa      	ldrb	r2, [r7, #7]
 8001fa4:	4603      	mov	r3, r0
 8001fa6:	01db      	lsls	r3, r3, #7
 8001fa8:	4413      	add	r3, r2
 8001faa:	b2c9      	uxtb	r1, r1
 8001fac:	4a04      	ldr	r2, [pc, #16]	@ (8001fc0 <oled_DrawPixel+0xa4>)
 8001fae:	54d1      	strb	r1, [r2, r3]
 8001fb0:	e000      	b.n	8001fb4 <oled_DrawPixel+0x98>
        return;
 8001fb2:	bf00      	nop
    }
}
 8001fb4:	370c      	adds	r7, #12
 8001fb6:	46bd      	mov	sp, r7
 8001fb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001fbc:	4770      	bx	lr
 8001fbe:	bf00      	nop
 8001fc0:	200000c8 	.word	0x200000c8

08001fc4 <oled_WriteChar>:


char oled_WriteChar(char ch, OLED_Font_t Font, OLED_COLOR color) {
 8001fc4:	b590      	push	{r4, r7, lr}
 8001fc6:	b089      	sub	sp, #36	@ 0x24
 8001fc8:	af00      	add	r7, sp, #0
 8001fca:	4604      	mov	r4, r0
 8001fcc:	4638      	mov	r0, r7
 8001fce:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 8001fd2:	4623      	mov	r3, r4
 8001fd4:	73fb      	strb	r3, [r7, #15]
    uint32_t i, b, j;
    
    // Check if character is valid
    if (ch < 32 || ch > 126)
 8001fd6:	7bfb      	ldrb	r3, [r7, #15]
 8001fd8:	2b1f      	cmp	r3, #31
 8001fda:	d902      	bls.n	8001fe2 <oled_WriteChar+0x1e>
 8001fdc:	7bfb      	ldrb	r3, [r7, #15]
 8001fde:	2b7e      	cmp	r3, #126	@ 0x7e
 8001fe0:	d901      	bls.n	8001fe6 <oled_WriteChar+0x22>
        return 0;
 8001fe2:	2300      	movs	r3, #0
 8001fe4:	e079      	b.n	80020da <oled_WriteChar+0x116>
    
    // Char width is not equal to font width for proportional font
    const uint8_t char_width = Font.char_width ? Font.char_width[ch-32] : Font.width;
 8001fe6:	68bb      	ldr	r3, [r7, #8]
 8001fe8:	2b00      	cmp	r3, #0
 8001fea:	d005      	beq.n	8001ff8 <oled_WriteChar+0x34>
 8001fec:	68ba      	ldr	r2, [r7, #8]
 8001fee:	7bfb      	ldrb	r3, [r7, #15]
 8001ff0:	3b20      	subs	r3, #32
 8001ff2:	4413      	add	r3, r2
 8001ff4:	781b      	ldrb	r3, [r3, #0]
 8001ff6:	e000      	b.n	8001ffa <oled_WriteChar+0x36>
 8001ff8:	783b      	ldrb	r3, [r7, #0]
 8001ffa:	75fb      	strb	r3, [r7, #23]
    // Check remaining space on current line
    if (OLED_WIDTH < (OLED.CurrentX + char_width) ||
 8001ffc:	4b39      	ldr	r3, [pc, #228]	@ (80020e4 <oled_WriteChar+0x120>)
 8001ffe:	881b      	ldrh	r3, [r3, #0]
 8002000:	461a      	mov	r2, r3
 8002002:	7dfb      	ldrb	r3, [r7, #23]
 8002004:	4413      	add	r3, r2
 8002006:	2b80      	cmp	r3, #128	@ 0x80
 8002008:	dc06      	bgt.n	8002018 <oled_WriteChar+0x54>
        OLED_HEIGHT < (OLED.CurrentY + Font.height))
 800200a:	4b36      	ldr	r3, [pc, #216]	@ (80020e4 <oled_WriteChar+0x120>)
 800200c:	885b      	ldrh	r3, [r3, #2]
 800200e:	461a      	mov	r2, r3
 8002010:	787b      	ldrb	r3, [r7, #1]
 8002012:	4413      	add	r3, r2
    if (OLED_WIDTH < (OLED.CurrentX + char_width) ||
 8002014:	2b40      	cmp	r3, #64	@ 0x40
 8002016:	dd01      	ble.n	800201c <oled_WriteChar+0x58>
    {
        // Not enough space on current line
        return 0;
 8002018:	2300      	movs	r3, #0
 800201a:	e05e      	b.n	80020da <oled_WriteChar+0x116>
    }
    
    // Use the font to write
    for(i = 0; i < Font.height; i++) {
 800201c:	2300      	movs	r3, #0
 800201e:	61fb      	str	r3, [r7, #28]
 8002020:	e04d      	b.n	80020be <oled_WriteChar+0xfa>
        b = Font.data[(ch - 32) * Font.height + i];
 8002022:	687a      	ldr	r2, [r7, #4]
 8002024:	7bfb      	ldrb	r3, [r7, #15]
 8002026:	3b20      	subs	r3, #32
 8002028:	7879      	ldrb	r1, [r7, #1]
 800202a:	fb01 f303 	mul.w	r3, r1, r3
 800202e:	4619      	mov	r1, r3
 8002030:	69fb      	ldr	r3, [r7, #28]
 8002032:	440b      	add	r3, r1
 8002034:	005b      	lsls	r3, r3, #1
 8002036:	4413      	add	r3, r2
 8002038:	881b      	ldrh	r3, [r3, #0]
 800203a:	613b      	str	r3, [r7, #16]
        for(j = 0; j < char_width; j++) {
 800203c:	2300      	movs	r3, #0
 800203e:	61bb      	str	r3, [r7, #24]
 8002040:	e036      	b.n	80020b0 <oled_WriteChar+0xec>
            if((b << j) & 0x8000)  {
 8002042:	693a      	ldr	r2, [r7, #16]
 8002044:	69bb      	ldr	r3, [r7, #24]
 8002046:	fa02 f303 	lsl.w	r3, r2, r3
 800204a:	f403 4300 	and.w	r3, r3, #32768	@ 0x8000
 800204e:	2b00      	cmp	r3, #0
 8002050:	d013      	beq.n	800207a <oled_WriteChar+0xb6>
                oled_DrawPixel(OLED.CurrentX + j, (OLED.CurrentY + i), (OLED_COLOR) color);
 8002052:	4b24      	ldr	r3, [pc, #144]	@ (80020e4 <oled_WriteChar+0x120>)
 8002054:	881b      	ldrh	r3, [r3, #0]
 8002056:	b2da      	uxtb	r2, r3
 8002058:	69bb      	ldr	r3, [r7, #24]
 800205a:	b2db      	uxtb	r3, r3
 800205c:	4413      	add	r3, r2
 800205e:	b2d8      	uxtb	r0, r3
 8002060:	4b20      	ldr	r3, [pc, #128]	@ (80020e4 <oled_WriteChar+0x120>)
 8002062:	885b      	ldrh	r3, [r3, #2]
 8002064:	b2da      	uxtb	r2, r3
 8002066:	69fb      	ldr	r3, [r7, #28]
 8002068:	b2db      	uxtb	r3, r3
 800206a:	4413      	add	r3, r2
 800206c:	b2db      	uxtb	r3, r3
 800206e:	f897 2030 	ldrb.w	r2, [r7, #48]	@ 0x30
 8002072:	4619      	mov	r1, r3
 8002074:	f7ff ff52 	bl	8001f1c <oled_DrawPixel>
 8002078:	e017      	b.n	80020aa <oled_WriteChar+0xe6>
            } else {
                oled_DrawPixel(OLED.CurrentX + j, (OLED.CurrentY + i), (OLED_COLOR)!color);
 800207a:	4b1a      	ldr	r3, [pc, #104]	@ (80020e4 <oled_WriteChar+0x120>)
 800207c:	881b      	ldrh	r3, [r3, #0]
 800207e:	b2da      	uxtb	r2, r3
 8002080:	69bb      	ldr	r3, [r7, #24]
 8002082:	b2db      	uxtb	r3, r3
 8002084:	4413      	add	r3, r2
 8002086:	b2d8      	uxtb	r0, r3
 8002088:	4b16      	ldr	r3, [pc, #88]	@ (80020e4 <oled_WriteChar+0x120>)
 800208a:	885b      	ldrh	r3, [r3, #2]
 800208c:	b2da      	uxtb	r2, r3
 800208e:	69fb      	ldr	r3, [r7, #28]
 8002090:	b2db      	uxtb	r3, r3
 8002092:	4413      	add	r3, r2
 8002094:	b2d9      	uxtb	r1, r3
 8002096:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800209a:	2b00      	cmp	r3, #0
 800209c:	bf0c      	ite	eq
 800209e:	2301      	moveq	r3, #1
 80020a0:	2300      	movne	r3, #0
 80020a2:	b2db      	uxtb	r3, r3
 80020a4:	461a      	mov	r2, r3
 80020a6:	f7ff ff39 	bl	8001f1c <oled_DrawPixel>
        for(j = 0; j < char_width; j++) {
 80020aa:	69bb      	ldr	r3, [r7, #24]
 80020ac:	3301      	adds	r3, #1
 80020ae:	61bb      	str	r3, [r7, #24]
 80020b0:	7dfb      	ldrb	r3, [r7, #23]
 80020b2:	69ba      	ldr	r2, [r7, #24]
 80020b4:	429a      	cmp	r2, r3
 80020b6:	d3c4      	bcc.n	8002042 <oled_WriteChar+0x7e>
    for(i = 0; i < Font.height; i++) {
 80020b8:	69fb      	ldr	r3, [r7, #28]
 80020ba:	3301      	adds	r3, #1
 80020bc:	61fb      	str	r3, [r7, #28]
 80020be:	787b      	ldrb	r3, [r7, #1]
 80020c0:	461a      	mov	r2, r3
 80020c2:	69fb      	ldr	r3, [r7, #28]
 80020c4:	4293      	cmp	r3, r2
 80020c6:	d3ac      	bcc.n	8002022 <oled_WriteChar+0x5e>
            }
        }
    }
    
    // The current space is now taken
    OLED.CurrentX += char_width;
 80020c8:	4b06      	ldr	r3, [pc, #24]	@ (80020e4 <oled_WriteChar+0x120>)
 80020ca:	881a      	ldrh	r2, [r3, #0]
 80020cc:	7dfb      	ldrb	r3, [r7, #23]
 80020ce:	b29b      	uxth	r3, r3
 80020d0:	4413      	add	r3, r2
 80020d2:	b29a      	uxth	r2, r3
 80020d4:	4b03      	ldr	r3, [pc, #12]	@ (80020e4 <oled_WriteChar+0x120>)
 80020d6:	801a      	strh	r2, [r3, #0]
    
    // Return written char for validation
    return ch;
 80020d8:	7bfb      	ldrb	r3, [r7, #15]
}
 80020da:	4618      	mov	r0, r3
 80020dc:	3724      	adds	r7, #36	@ 0x24
 80020de:	46bd      	mov	sp, r7
 80020e0:	bd90      	pop	{r4, r7, pc}
 80020e2:	bf00      	nop
 80020e4:	200004c8 	.word	0x200004c8

080020e8 <oled_WriteString>:

/* Write full string to screenbuffer */
char oled_WriteString(char* str, OLED_Font_t Font, OLED_COLOR color) {
 80020e8:	b580      	push	{r7, lr}
 80020ea:	b086      	sub	sp, #24
 80020ec:	af02      	add	r7, sp, #8
 80020ee:	60f8      	str	r0, [r7, #12]
 80020f0:	4638      	mov	r0, r7
 80020f2:	e880 000e 	stmia.w	r0, {r1, r2, r3}
    while (*str) {
 80020f6:	e013      	b.n	8002120 <oled_WriteString+0x38>
        if (oled_WriteChar(*str, Font, color) != *str) {
 80020f8:	68fb      	ldr	r3, [r7, #12]
 80020fa:	7818      	ldrb	r0, [r3, #0]
 80020fc:	7e3b      	ldrb	r3, [r7, #24]
 80020fe:	9300      	str	r3, [sp, #0]
 8002100:	463b      	mov	r3, r7
 8002102:	cb0e      	ldmia	r3, {r1, r2, r3}
 8002104:	f7ff ff5e 	bl	8001fc4 <oled_WriteChar>
 8002108:	4603      	mov	r3, r0
 800210a:	461a      	mov	r2, r3
 800210c:	68fb      	ldr	r3, [r7, #12]
 800210e:	781b      	ldrb	r3, [r3, #0]
 8002110:	429a      	cmp	r2, r3
 8002112:	d002      	beq.n	800211a <oled_WriteString+0x32>
            // Char could not be written
            return *str;
 8002114:	68fb      	ldr	r3, [r7, #12]
 8002116:	781b      	ldrb	r3, [r3, #0]
 8002118:	e008      	b.n	800212c <oled_WriteString+0x44>
        }
        str++;
 800211a:	68fb      	ldr	r3, [r7, #12]
 800211c:	3301      	adds	r3, #1
 800211e:	60fb      	str	r3, [r7, #12]
    while (*str) {
 8002120:	68fb      	ldr	r3, [r7, #12]
 8002122:	781b      	ldrb	r3, [r3, #0]
 8002124:	2b00      	cmp	r3, #0
 8002126:	d1e7      	bne.n	80020f8 <oled_WriteString+0x10>
    }
    
    // Everything ok
    return *str;
 8002128:	68fb      	ldr	r3, [r7, #12]
 800212a:	781b      	ldrb	r3, [r3, #0]
}
 800212c:	4618      	mov	r0, r3
 800212e:	3710      	adds	r7, #16
 8002130:	46bd      	mov	sp, r7
 8002132:	bd80      	pop	{r7, pc}

08002134 <oled_SetCursor>:

/* Position the cursor */
void oled_SetCursor(uint8_t x, uint8_t y) {
 8002134:	b480      	push	{r7}
 8002136:	b083      	sub	sp, #12
 8002138:	af00      	add	r7, sp, #0
 800213a:	4603      	mov	r3, r0
 800213c:	460a      	mov	r2, r1
 800213e:	71fb      	strb	r3, [r7, #7]
 8002140:	4613      	mov	r3, r2
 8002142:	71bb      	strb	r3, [r7, #6]
    OLED.CurrentX = x;
 8002144:	79fb      	ldrb	r3, [r7, #7]
 8002146:	b29a      	uxth	r2, r3
 8002148:	4b05      	ldr	r3, [pc, #20]	@ (8002160 <oled_SetCursor+0x2c>)
 800214a:	801a      	strh	r2, [r3, #0]
    OLED.CurrentY = y;
 800214c:	79bb      	ldrb	r3, [r7, #6]
 800214e:	b29a      	uxth	r2, r3
 8002150:	4b03      	ldr	r3, [pc, #12]	@ (8002160 <oled_SetCursor+0x2c>)
 8002152:	805a      	strh	r2, [r3, #2]
}
 8002154:	bf00      	nop
 8002156:	370c      	adds	r7, #12
 8002158:	46bd      	mov	sp, r7
 800215a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800215e:	4770      	bx	lr
 8002160:	200004c8 	.word	0x200004c8

08002164 <oled_SetContrast>:

void oled_SetContrast(const uint8_t value) {
 8002164:	b580      	push	{r7, lr}
 8002166:	b084      	sub	sp, #16
 8002168:	af00      	add	r7, sp, #0
 800216a:	4603      	mov	r3, r0
 800216c:	71fb      	strb	r3, [r7, #7]
    const uint8_t kSetContrastControlRegister = 0x81;
 800216e:	2381      	movs	r3, #129	@ 0x81
 8002170:	73fb      	strb	r3, [r7, #15]
    oled_WriteCommand(kSetContrastControlRegister);
 8002172:	7bfb      	ldrb	r3, [r7, #15]
 8002174:	4618      	mov	r0, r3
 8002176:	f7ff fdf5 	bl	8001d64 <oled_WriteCommand>
    oled_WriteCommand(value);
 800217a:	79fb      	ldrb	r3, [r7, #7]
 800217c:	4618      	mov	r0, r3
 800217e:	f7ff fdf1 	bl	8001d64 <oled_WriteCommand>
}
 8002182:	bf00      	nop
 8002184:	3710      	adds	r7, #16
 8002186:	46bd      	mov	sp, r7
 8002188:	bd80      	pop	{r7, pc}
	...

0800218c <oled_SetDisplayOn>:

void oled_SetDisplayOn(const uint8_t on) {
 800218c:	b580      	push	{r7, lr}
 800218e:	b084      	sub	sp, #16
 8002190:	af00      	add	r7, sp, #0
 8002192:	4603      	mov	r3, r0
 8002194:	71fb      	strb	r3, [r7, #7]
    uint8_t value;
    if (on) {
 8002196:	79fb      	ldrb	r3, [r7, #7]
 8002198:	2b00      	cmp	r3, #0
 800219a:	d005      	beq.n	80021a8 <oled_SetDisplayOn+0x1c>
        value = 0xAF;   // Display on
 800219c:	23af      	movs	r3, #175	@ 0xaf
 800219e:	73fb      	strb	r3, [r7, #15]
        OLED.DisplayOn = 1;
 80021a0:	4b08      	ldr	r3, [pc, #32]	@ (80021c4 <oled_SetDisplayOn+0x38>)
 80021a2:	2201      	movs	r2, #1
 80021a4:	715a      	strb	r2, [r3, #5]
 80021a6:	e004      	b.n	80021b2 <oled_SetDisplayOn+0x26>
    } else {
        value = 0xAE;   // Display off
 80021a8:	23ae      	movs	r3, #174	@ 0xae
 80021aa:	73fb      	strb	r3, [r7, #15]
        OLED.DisplayOn = 0;
 80021ac:	4b05      	ldr	r3, [pc, #20]	@ (80021c4 <oled_SetDisplayOn+0x38>)
 80021ae:	2200      	movs	r2, #0
 80021b0:	715a      	strb	r2, [r3, #5]
    }
    oled_WriteCommand(value);
 80021b2:	7bfb      	ldrb	r3, [r7, #15]
 80021b4:	4618      	mov	r0, r3
 80021b6:	f7ff fdd5 	bl	8001d64 <oled_WriteCommand>
}
 80021ba:	bf00      	nop
 80021bc:	3710      	adds	r7, #16
 80021be:	46bd      	mov	sp, r7
 80021c0:	bd80      	pop	{r7, pc}
 80021c2:	bf00      	nop
 80021c4:	200004c8 	.word	0x200004c8

080021c8 <MX_SPI1_Init>:

SPI_HandleTypeDef hspi1;

/* SPI1 init function */
void MX_SPI1_Init(void)
{
 80021c8:	b580      	push	{r7, lr}
 80021ca:	af00      	add	r7, sp, #0
  /* USER CODE END SPI1_Init 0 */

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  hspi1.Instance = SPI1;
 80021cc:	4b17      	ldr	r3, [pc, #92]	@ (800222c <MX_SPI1_Init+0x64>)
 80021ce:	4a18      	ldr	r2, [pc, #96]	@ (8002230 <MX_SPI1_Init+0x68>)
 80021d0:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 80021d2:	4b16      	ldr	r3, [pc, #88]	@ (800222c <MX_SPI1_Init+0x64>)
 80021d4:	f44f 7282 	mov.w	r2, #260	@ 0x104
 80021d8:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 80021da:	4b14      	ldr	r3, [pc, #80]	@ (800222c <MX_SPI1_Init+0x64>)
 80021dc:	2200      	movs	r2, #0
 80021de:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 80021e0:	4b12      	ldr	r3, [pc, #72]	@ (800222c <MX_SPI1_Init+0x64>)
 80021e2:	2200      	movs	r2, #0
 80021e4:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 80021e6:	4b11      	ldr	r3, [pc, #68]	@ (800222c <MX_SPI1_Init+0x64>)
 80021e8:	2200      	movs	r2, #0
 80021ea:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 80021ec:	4b0f      	ldr	r3, [pc, #60]	@ (800222c <MX_SPI1_Init+0x64>)
 80021ee:	2200      	movs	r2, #0
 80021f0:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 80021f2:	4b0e      	ldr	r3, [pc, #56]	@ (800222c <MX_SPI1_Init+0x64>)
 80021f4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80021f8:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_16;
 80021fa:	4b0c      	ldr	r3, [pc, #48]	@ (800222c <MX_SPI1_Init+0x64>)
 80021fc:	2218      	movs	r2, #24
 80021fe:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8002200:	4b0a      	ldr	r3, [pc, #40]	@ (800222c <MX_SPI1_Init+0x64>)
 8002202:	2200      	movs	r2, #0
 8002204:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8002206:	4b09      	ldr	r3, [pc, #36]	@ (800222c <MX_SPI1_Init+0x64>)
 8002208:	2200      	movs	r2, #0
 800220a:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 800220c:	4b07      	ldr	r3, [pc, #28]	@ (800222c <MX_SPI1_Init+0x64>)
 800220e:	2200      	movs	r2, #0
 8002210:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi1.Init.CRCPolynomial = 10;
 8002212:	4b06      	ldr	r3, [pc, #24]	@ (800222c <MX_SPI1_Init+0x64>)
 8002214:	220a      	movs	r2, #10
 8002216:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8002218:	4804      	ldr	r0, [pc, #16]	@ (800222c <MX_SPI1_Init+0x64>)
 800221a:	f002 f983 	bl	8004524 <HAL_SPI_Init>
 800221e:	4603      	mov	r3, r0
 8002220:	2b00      	cmp	r3, #0
 8002222:	d001      	beq.n	8002228 <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8002224:	f7ff fd90 	bl	8001d48 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8002228:	bf00      	nop
 800222a:	bd80      	pop	{r7, pc}
 800222c:	200004d0 	.word	0x200004d0
 8002230:	40013000 	.word	0x40013000

08002234 <HAL_SPI_MspInit>:

void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
{
 8002234:	b580      	push	{r7, lr}
 8002236:	b08a      	sub	sp, #40	@ 0x28
 8002238:	af00      	add	r7, sp, #0
 800223a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800223c:	f107 0314 	add.w	r3, r7, #20
 8002240:	2200      	movs	r2, #0
 8002242:	601a      	str	r2, [r3, #0]
 8002244:	605a      	str	r2, [r3, #4]
 8002246:	609a      	str	r2, [r3, #8]
 8002248:	60da      	str	r2, [r3, #12]
 800224a:	611a      	str	r2, [r3, #16]
  if(spiHandle->Instance==SPI1)
 800224c:	687b      	ldr	r3, [r7, #4]
 800224e:	681b      	ldr	r3, [r3, #0]
 8002250:	4a28      	ldr	r2, [pc, #160]	@ (80022f4 <HAL_SPI_MspInit+0xc0>)
 8002252:	4293      	cmp	r3, r2
 8002254:	d149      	bne.n	80022ea <HAL_SPI_MspInit+0xb6>
  {
  /* USER CODE BEGIN SPI1_MspInit 0 */

  /* USER CODE END SPI1_MspInit 0 */
    /* SPI1 clock enable */
    __HAL_RCC_SPI1_CLK_ENABLE();
 8002256:	2300      	movs	r3, #0
 8002258:	613b      	str	r3, [r7, #16]
 800225a:	4b27      	ldr	r3, [pc, #156]	@ (80022f8 <HAL_SPI_MspInit+0xc4>)
 800225c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800225e:	4a26      	ldr	r2, [pc, #152]	@ (80022f8 <HAL_SPI_MspInit+0xc4>)
 8002260:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 8002264:	6453      	str	r3, [r2, #68]	@ 0x44
 8002266:	4b24      	ldr	r3, [pc, #144]	@ (80022f8 <HAL_SPI_MspInit+0xc4>)
 8002268:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800226a:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 800226e:	613b      	str	r3, [r7, #16]
 8002270:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002272:	2300      	movs	r3, #0
 8002274:	60fb      	str	r3, [r7, #12]
 8002276:	4b20      	ldr	r3, [pc, #128]	@ (80022f8 <HAL_SPI_MspInit+0xc4>)
 8002278:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800227a:	4a1f      	ldr	r2, [pc, #124]	@ (80022f8 <HAL_SPI_MspInit+0xc4>)
 800227c:	f043 0301 	orr.w	r3, r3, #1
 8002280:	6313      	str	r3, [r2, #48]	@ 0x30
 8002282:	4b1d      	ldr	r3, [pc, #116]	@ (80022f8 <HAL_SPI_MspInit+0xc4>)
 8002284:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002286:	f003 0301 	and.w	r3, r3, #1
 800228a:	60fb      	str	r3, [r7, #12]
 800228c:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 800228e:	2300      	movs	r3, #0
 8002290:	60bb      	str	r3, [r7, #8]
 8002292:	4b19      	ldr	r3, [pc, #100]	@ (80022f8 <HAL_SPI_MspInit+0xc4>)
 8002294:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002296:	4a18      	ldr	r2, [pc, #96]	@ (80022f8 <HAL_SPI_MspInit+0xc4>)
 8002298:	f043 0302 	orr.w	r3, r3, #2
 800229c:	6313      	str	r3, [r2, #48]	@ 0x30
 800229e:	4b16      	ldr	r3, [pc, #88]	@ (80022f8 <HAL_SPI_MspInit+0xc4>)
 80022a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80022a2:	f003 0302 	and.w	r3, r3, #2
 80022a6:	60bb      	str	r3, [r7, #8]
 80022a8:	68bb      	ldr	r3, [r7, #8]
    /**SPI1 GPIO Configuration
    PA6     ------> SPI1_MISO
    PA7     ------> SPI1_MOSI
    PB3     ------> SPI1_SCK
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 80022aa:	23c0      	movs	r3, #192	@ 0xc0
 80022ac:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022ae:	2302      	movs	r3, #2
 80022b0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022b2:	2300      	movs	r3, #0
 80022b4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022b6:	2303      	movs	r3, #3
 80022b8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80022ba:	2305      	movs	r3, #5
 80022bc:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80022be:	f107 0314 	add.w	r3, r7, #20
 80022c2:	4619      	mov	r1, r3
 80022c4:	480d      	ldr	r0, [pc, #52]	@ (80022fc <HAL_SPI_MspInit+0xc8>)
 80022c6:	f000 fd6f 	bl	8002da8 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_3;
 80022ca:	2308      	movs	r3, #8
 80022cc:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80022ce:	2302      	movs	r3, #2
 80022d0:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80022d2:	2300      	movs	r3, #0
 80022d4:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80022d6:	2303      	movs	r3, #3
 80022d8:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI1;
 80022da:	2305      	movs	r3, #5
 80022dc:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80022de:	f107 0314 	add.w	r3, r7, #20
 80022e2:	4619      	mov	r1, r3
 80022e4:	4806      	ldr	r0, [pc, #24]	@ (8002300 <HAL_SPI_MspInit+0xcc>)
 80022e6:	f000 fd5f 	bl	8002da8 <HAL_GPIO_Init>

  /* USER CODE BEGIN SPI1_MspInit 1 */

  /* USER CODE END SPI1_MspInit 1 */
  }
}
 80022ea:	bf00      	nop
 80022ec:	3728      	adds	r7, #40	@ 0x28
 80022ee:	46bd      	mov	sp, r7
 80022f0:	bd80      	pop	{r7, pc}
 80022f2:	bf00      	nop
 80022f4:	40013000 	.word	0x40013000
 80022f8:	40023800 	.word	0x40023800
 80022fc:	40020000 	.word	0x40020000
 8002300:	40020400 	.word	0x40020400

08002304 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002304:	b480      	push	{r7}
 8002306:	b083      	sub	sp, #12
 8002308:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800230a:	2300      	movs	r3, #0
 800230c:	607b      	str	r3, [r7, #4]
 800230e:	4b10      	ldr	r3, [pc, #64]	@ (8002350 <HAL_MspInit+0x4c>)
 8002310:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002312:	4a0f      	ldr	r2, [pc, #60]	@ (8002350 <HAL_MspInit+0x4c>)
 8002314:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002318:	6453      	str	r3, [r2, #68]	@ 0x44
 800231a:	4b0d      	ldr	r3, [pc, #52]	@ (8002350 <HAL_MspInit+0x4c>)
 800231c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800231e:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002322:	607b      	str	r3, [r7, #4]
 8002324:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 8002326:	2300      	movs	r3, #0
 8002328:	603b      	str	r3, [r7, #0]
 800232a:	4b09      	ldr	r3, [pc, #36]	@ (8002350 <HAL_MspInit+0x4c>)
 800232c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800232e:	4a08      	ldr	r2, [pc, #32]	@ (8002350 <HAL_MspInit+0x4c>)
 8002330:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8002334:	6413      	str	r3, [r2, #64]	@ 0x40
 8002336:	4b06      	ldr	r3, [pc, #24]	@ (8002350 <HAL_MspInit+0x4c>)
 8002338:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800233a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800233e:	603b      	str	r3, [r7, #0]
 8002340:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002342:	bf00      	nop
 8002344:	370c      	adds	r7, #12
 8002346:	46bd      	mov	sp, r7
 8002348:	f85d 7b04 	ldr.w	r7, [sp], #4
 800234c:	4770      	bx	lr
 800234e:	bf00      	nop
 8002350:	40023800 	.word	0x40023800

08002354 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002354:	b480      	push	{r7}
 8002356:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002358:	bf00      	nop
 800235a:	e7fd      	b.n	8002358 <NMI_Handler+0x4>

0800235c <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 800235c:	b480      	push	{r7}
 800235e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002360:	bf00      	nop
 8002362:	e7fd      	b.n	8002360 <HardFault_Handler+0x4>

08002364 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8002364:	b480      	push	{r7}
 8002366:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8002368:	bf00      	nop
 800236a:	e7fd      	b.n	8002368 <MemManage_Handler+0x4>

0800236c <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 800236c:	b480      	push	{r7}
 800236e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8002370:	bf00      	nop
 8002372:	e7fd      	b.n	8002370 <BusFault_Handler+0x4>

08002374 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8002374:	b480      	push	{r7}
 8002376:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8002378:	bf00      	nop
 800237a:	e7fd      	b.n	8002378 <UsageFault_Handler+0x4>

0800237c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800237c:	b480      	push	{r7}
 800237e:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8002380:	bf00      	nop
 8002382:	46bd      	mov	sp, r7
 8002384:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002388:	4770      	bx	lr

0800238a <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 800238a:	b480      	push	{r7}
 800238c:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 800238e:	bf00      	nop
 8002390:	46bd      	mov	sp, r7
 8002392:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002396:	4770      	bx	lr

08002398 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002398:	b480      	push	{r7}
 800239a:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800239c:	bf00      	nop
 800239e:	46bd      	mov	sp, r7
 80023a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023a4:	4770      	bx	lr

080023a6 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 80023a6:	b580      	push	{r7, lr}
 80023a8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 80023aa:	f000 fba7 	bl	8002afc <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 80023ae:	bf00      	nop
 80023b0:	bd80      	pop	{r7, pc}
	...

080023b4 <TIM1_CC_IRQHandler>:

/**
  * @brief This function handles TIM1 capture compare interrupt.
  */
void TIM1_CC_IRQHandler(void)
{
 80023b4:	b580      	push	{r7, lr}
 80023b6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM1_CC_IRQn 0 */

  /* USER CODE END TIM1_CC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim1);
 80023b8:	4802      	ldr	r0, [pc, #8]	@ (80023c4 <TIM1_CC_IRQHandler+0x10>)
 80023ba:	f002 ff79 	bl	80052b0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM1_CC_IRQn 1 */

  /* USER CODE END TIM1_CC_IRQn 1 */
}
 80023be:	bf00      	nop
 80023c0:	bd80      	pop	{r7, pc}
 80023c2:	bf00      	nop
 80023c4:	20000528 	.word	0x20000528

080023c8 <TIM2_IRQHandler>:

/**
  * @brief This function handles TIM2 global interrupt.
  */
void TIM2_IRQHandler(void)
{
 80023c8:	b580      	push	{r7, lr}
 80023ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM2_IRQn 0 */

  /* USER CODE END TIM2_IRQn 0 */
  HAL_TIM_IRQHandler(&htim2);
 80023cc:	4802      	ldr	r0, [pc, #8]	@ (80023d8 <TIM2_IRQHandler+0x10>)
 80023ce:	f002 ff6f 	bl	80052b0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM2_IRQn 1 */

  /* USER CODE END TIM2_IRQn 1 */
}
 80023d2:	bf00      	nop
 80023d4:	bd80      	pop	{r7, pc}
 80023d6:	bf00      	nop
 80023d8:	20000570 	.word	0x20000570

080023dc <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 80023dc:	b580      	push	{r7, lr}
 80023de:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 80023e0:	4802      	ldr	r0, [pc, #8]	@ (80023ec <TIM3_IRQHandler+0x10>)
 80023e2:	f002 ff65 	bl	80052b0 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 80023e6:	bf00      	nop
 80023e8:	bd80      	pop	{r7, pc}
 80023ea:	bf00      	nop
 80023ec:	200005b8 	.word	0x200005b8

080023f0 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 80023f0:	b480      	push	{r7}
 80023f2:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 80023f4:	4b06      	ldr	r3, [pc, #24]	@ (8002410 <SystemInit+0x20>)
 80023f6:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 80023fa:	4a05      	ldr	r2, [pc, #20]	@ (8002410 <SystemInit+0x20>)
 80023fc:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8002400:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002404:	bf00      	nop
 8002406:	46bd      	mov	sp, r7
 8002408:	f85d 7b04 	ldr.w	r7, [sp], #4
 800240c:	4770      	bx	lr
 800240e:	bf00      	nop
 8002410:	e000ed00 	.word	0xe000ed00

08002414 <MX_TIM1_Init>:
TIM_HandleTypeDef htim3;
TIM_HandleTypeDef htim6;

/* TIM1 init function */
void MX_TIM1_Init(void)
{
 8002414:	b580      	push	{r7, lr}
 8002416:	b086      	sub	sp, #24
 8002418:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800241a:	f107 0310 	add.w	r3, r7, #16
 800241e:	2200      	movs	r2, #0
 8002420:	601a      	str	r2, [r3, #0]
 8002422:	605a      	str	r2, [r3, #4]
  TIM_IC_InitTypeDef sConfigIC = {0};
 8002424:	463b      	mov	r3, r7
 8002426:	2200      	movs	r2, #0
 8002428:	601a      	str	r2, [r3, #0]
 800242a:	605a      	str	r2, [r3, #4]
 800242c:	609a      	str	r2, [r3, #8]
 800242e:	60da      	str	r2, [r3, #12]

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8002430:	4b2c      	ldr	r3, [pc, #176]	@ (80024e4 <MX_TIM1_Init+0xd0>)
 8002432:	4a2d      	ldr	r2, [pc, #180]	@ (80024e8 <MX_TIM1_Init+0xd4>)
 8002434:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 15;
 8002436:	4b2b      	ldr	r3, [pc, #172]	@ (80024e4 <MX_TIM1_Init+0xd0>)
 8002438:	220f      	movs	r2, #15
 800243a:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 800243c:	4b29      	ldr	r3, [pc, #164]	@ (80024e4 <MX_TIM1_Init+0xd0>)
 800243e:	2200      	movs	r2, #0
 8002440:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8002442:	4b28      	ldr	r3, [pc, #160]	@ (80024e4 <MX_TIM1_Init+0xd0>)
 8002444:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8002448:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800244a:	4b26      	ldr	r3, [pc, #152]	@ (80024e4 <MX_TIM1_Init+0xd0>)
 800244c:	2200      	movs	r2, #0
 800244e:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8002450:	4b24      	ldr	r3, [pc, #144]	@ (80024e4 <MX_TIM1_Init+0xd0>)
 8002452:	2200      	movs	r2, #0
 8002454:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002456:	4b23      	ldr	r3, [pc, #140]	@ (80024e4 <MX_TIM1_Init+0xd0>)
 8002458:	2200      	movs	r2, #0
 800245a:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_IC_Init(&htim1) != HAL_OK)
 800245c:	4821      	ldr	r0, [pc, #132]	@ (80024e4 <MX_TIM1_Init+0xd0>)
 800245e:	f002 fdaf 	bl	8004fc0 <HAL_TIM_IC_Init>
 8002462:	4603      	mov	r3, r0
 8002464:	2b00      	cmp	r3, #0
 8002466:	d001      	beq.n	800246c <MX_TIM1_Init+0x58>
  {
    Error_Handler();
 8002468:	f7ff fc6e 	bl	8001d48 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 800246c:	2300      	movs	r3, #0
 800246e:	613b      	str	r3, [r7, #16]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002470:	2300      	movs	r3, #0
 8002472:	617b      	str	r3, [r7, #20]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8002474:	f107 0310 	add.w	r3, r7, #16
 8002478:	4619      	mov	r1, r3
 800247a:	481a      	ldr	r0, [pc, #104]	@ (80024e4 <MX_TIM1_Init+0xd0>)
 800247c:	f003 feda 	bl	8006234 <HAL_TIMEx_MasterConfigSynchronization>
 8002480:	4603      	mov	r3, r0
 8002482:	2b00      	cmp	r3, #0
 8002484:	d001      	beq.n	800248a <MX_TIM1_Init+0x76>
  {
    Error_Handler();
 8002486:	f7ff fc5f 	bl	8001d48 <Error_Handler>
  }
  sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 800248a:	2300      	movs	r3, #0
 800248c:	603b      	str	r3, [r7, #0]
  sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 800248e:	2301      	movs	r3, #1
 8002490:	607b      	str	r3, [r7, #4]
  sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 8002492:	2300      	movs	r3, #0
 8002494:	60bb      	str	r3, [r7, #8]
  sConfigIC.ICFilter = 0;
 8002496:	2300      	movs	r3, #0
 8002498:	60fb      	str	r3, [r7, #12]
  if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 800249a:	463b      	mov	r3, r7
 800249c:	2200      	movs	r2, #0
 800249e:	4619      	mov	r1, r3
 80024a0:	4810      	ldr	r0, [pc, #64]	@ (80024e4 <MX_TIM1_Init+0xd0>)
 80024a2:	f002 fff5 	bl	8005490 <HAL_TIM_IC_ConfigChannel>
 80024a6:	4603      	mov	r3, r0
 80024a8:	2b00      	cmp	r3, #0
 80024aa:	d001      	beq.n	80024b0 <MX_TIM1_Init+0x9c>
  {
    Error_Handler();
 80024ac:	f7ff fc4c 	bl	8001d48 <Error_Handler>
  }
  if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_3) != HAL_OK)
 80024b0:	463b      	mov	r3, r7
 80024b2:	2208      	movs	r2, #8
 80024b4:	4619      	mov	r1, r3
 80024b6:	480b      	ldr	r0, [pc, #44]	@ (80024e4 <MX_TIM1_Init+0xd0>)
 80024b8:	f002 ffea 	bl	8005490 <HAL_TIM_IC_ConfigChannel>
 80024bc:	4603      	mov	r3, r0
 80024be:	2b00      	cmp	r3, #0
 80024c0:	d001      	beq.n	80024c6 <MX_TIM1_Init+0xb2>
  {
    Error_Handler();
 80024c2:	f7ff fc41 	bl	8001d48 <Error_Handler>
  }
  if (HAL_TIM_IC_ConfigChannel(&htim1, &sConfigIC, TIM_CHANNEL_4) != HAL_OK)
 80024c6:	463b      	mov	r3, r7
 80024c8:	220c      	movs	r2, #12
 80024ca:	4619      	mov	r1, r3
 80024cc:	4805      	ldr	r0, [pc, #20]	@ (80024e4 <MX_TIM1_Init+0xd0>)
 80024ce:	f002 ffdf 	bl	8005490 <HAL_TIM_IC_ConfigChannel>
 80024d2:	4603      	mov	r3, r0
 80024d4:	2b00      	cmp	r3, #0
 80024d6:	d001      	beq.n	80024dc <MX_TIM1_Init+0xc8>
  {
    Error_Handler();
 80024d8:	f7ff fc36 	bl	8001d48 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */

}
 80024dc:	bf00      	nop
 80024de:	3718      	adds	r7, #24
 80024e0:	46bd      	mov	sp, r7
 80024e2:	bd80      	pop	{r7, pc}
 80024e4:	20000528 	.word	0x20000528
 80024e8:	40010000 	.word	0x40010000

080024ec <MX_TIM2_Init>:
/* TIM2 init function */
void MX_TIM2_Init(void)
{
 80024ec:	b580      	push	{r7, lr}
 80024ee:	b08e      	sub	sp, #56	@ 0x38
 80024f0:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 80024f2:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80024f6:	2200      	movs	r2, #0
 80024f8:	601a      	str	r2, [r3, #0]
 80024fa:	605a      	str	r2, [r3, #4]
 80024fc:	609a      	str	r2, [r3, #8]
 80024fe:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002500:	f107 0320 	add.w	r3, r7, #32
 8002504:	2200      	movs	r2, #0
 8002506:	601a      	str	r2, [r3, #0]
 8002508:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800250a:	1d3b      	adds	r3, r7, #4
 800250c:	2200      	movs	r2, #0
 800250e:	601a      	str	r2, [r3, #0]
 8002510:	605a      	str	r2, [r3, #4]
 8002512:	609a      	str	r2, [r3, #8]
 8002514:	60da      	str	r2, [r3, #12]
 8002516:	611a      	str	r2, [r3, #16]
 8002518:	615a      	str	r2, [r3, #20]
 800251a:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 800251c:	4b2d      	ldr	r3, [pc, #180]	@ (80025d4 <MX_TIM2_Init+0xe8>)
 800251e:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 8002522:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 160;
 8002524:	4b2b      	ldr	r3, [pc, #172]	@ (80025d4 <MX_TIM2_Init+0xe8>)
 8002526:	22a0      	movs	r2, #160	@ 0xa0
 8002528:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 800252a:	4b2a      	ldr	r3, [pc, #168]	@ (80025d4 <MX_TIM2_Init+0xe8>)
 800252c:	2200      	movs	r2, #0
 800252e:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 2000;
 8002530:	4b28      	ldr	r3, [pc, #160]	@ (80025d4 <MX_TIM2_Init+0xe8>)
 8002532:	f44f 62fa 	mov.w	r2, #2000	@ 0x7d0
 8002536:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002538:	4b26      	ldr	r3, [pc, #152]	@ (80025d4 <MX_TIM2_Init+0xe8>)
 800253a:	2200      	movs	r2, #0
 800253c:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800253e:	4b25      	ldr	r3, [pc, #148]	@ (80025d4 <MX_TIM2_Init+0xe8>)
 8002540:	2200      	movs	r2, #0
 8002542:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8002544:	4823      	ldr	r0, [pc, #140]	@ (80025d4 <MX_TIM2_Init+0xe8>)
 8002546:	f002 fafb 	bl	8004b40 <HAL_TIM_Base_Init>
 800254a:	4603      	mov	r3, r0
 800254c:	2b00      	cmp	r3, #0
 800254e:	d001      	beq.n	8002554 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 8002550:	f7ff fbfa 	bl	8001d48 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8002554:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8002558:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 800255a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800255e:	4619      	mov	r1, r3
 8002560:	481c      	ldr	r0, [pc, #112]	@ (80025d4 <MX_TIM2_Init+0xe8>)
 8002562:	f003 f8f3 	bl	800574c <HAL_TIM_ConfigClockSource>
 8002566:	4603      	mov	r3, r0
 8002568:	2b00      	cmp	r3, #0
 800256a:	d001      	beq.n	8002570 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 800256c:	f7ff fbec 	bl	8001d48 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8002570:	4818      	ldr	r0, [pc, #96]	@ (80025d4 <MX_TIM2_Init+0xe8>)
 8002572:	f002 fb9d 	bl	8004cb0 <HAL_TIM_PWM_Init>
 8002576:	4603      	mov	r3, r0
 8002578:	2b00      	cmp	r3, #0
 800257a:	d001      	beq.n	8002580 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 800257c:	f7ff fbe4 	bl	8001d48 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002580:	2300      	movs	r3, #0
 8002582:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002584:	2300      	movs	r3, #0
 8002586:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 8002588:	f107 0320 	add.w	r3, r7, #32
 800258c:	4619      	mov	r1, r3
 800258e:	4811      	ldr	r0, [pc, #68]	@ (80025d4 <MX_TIM2_Init+0xe8>)
 8002590:	f003 fe50 	bl	8006234 <HAL_TIMEx_MasterConfigSynchronization>
 8002594:	4603      	mov	r3, r0
 8002596:	2b00      	cmp	r3, #0
 8002598:	d001      	beq.n	800259e <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 800259a:	f7ff fbd5 	bl	8001d48 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800259e:	2360      	movs	r3, #96	@ 0x60
 80025a0:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80025a2:	2300      	movs	r3, #0
 80025a4:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80025a6:	2300      	movs	r3, #0
 80025a8:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80025aa:	2300      	movs	r3, #0
 80025ac:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 80025ae:	1d3b      	adds	r3, r7, #4
 80025b0:	2200      	movs	r2, #0
 80025b2:	4619      	mov	r1, r3
 80025b4:	4807      	ldr	r0, [pc, #28]	@ (80025d4 <MX_TIM2_Init+0xe8>)
 80025b6:	f003 f807 	bl	80055c8 <HAL_TIM_PWM_ConfigChannel>
 80025ba:	4603      	mov	r3, r0
 80025bc:	2b00      	cmp	r3, #0
 80025be:	d001      	beq.n	80025c4 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 80025c0:	f7ff fbc2 	bl	8001d48 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 80025c4:	4803      	ldr	r0, [pc, #12]	@ (80025d4 <MX_TIM2_Init+0xe8>)
 80025c6:	f000 f94b 	bl	8002860 <HAL_TIM_MspPostInit>

}
 80025ca:	bf00      	nop
 80025cc:	3738      	adds	r7, #56	@ 0x38
 80025ce:	46bd      	mov	sp, r7
 80025d0:	bd80      	pop	{r7, pc}
 80025d2:	bf00      	nop
 80025d4:	20000570 	.word	0x20000570

080025d8 <MX_TIM3_Init>:
/* TIM3 init function */
void MX_TIM3_Init(void)
{
 80025d8:	b580      	push	{r7, lr}
 80025da:	b08a      	sub	sp, #40	@ 0x28
 80025dc:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 80025de:	f107 0320 	add.w	r3, r7, #32
 80025e2:	2200      	movs	r2, #0
 80025e4:	601a      	str	r2, [r3, #0]
 80025e6:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 80025e8:	1d3b      	adds	r3, r7, #4
 80025ea:	2200      	movs	r2, #0
 80025ec:	601a      	str	r2, [r3, #0]
 80025ee:	605a      	str	r2, [r3, #4]
 80025f0:	609a      	str	r2, [r3, #8]
 80025f2:	60da      	str	r2, [r3, #12]
 80025f4:	611a      	str	r2, [r3, #16]
 80025f6:	615a      	str	r2, [r3, #20]
 80025f8:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 80025fa:	4b22      	ldr	r3, [pc, #136]	@ (8002684 <MX_TIM3_Init+0xac>)
 80025fc:	4a22      	ldr	r2, [pc, #136]	@ (8002688 <MX_TIM3_Init+0xb0>)
 80025fe:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 89;
 8002600:	4b20      	ldr	r3, [pc, #128]	@ (8002684 <MX_TIM3_Init+0xac>)
 8002602:	2259      	movs	r2, #89	@ 0x59
 8002604:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002606:	4b1f      	ldr	r3, [pc, #124]	@ (8002684 <MX_TIM3_Init+0xac>)
 8002608:	2200      	movs	r2, #0
 800260a:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 399;
 800260c:	4b1d      	ldr	r3, [pc, #116]	@ (8002684 <MX_TIM3_Init+0xac>)
 800260e:	f240 128f 	movw	r2, #399	@ 0x18f
 8002612:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8002614:	4b1b      	ldr	r3, [pc, #108]	@ (8002684 <MX_TIM3_Init+0xac>)
 8002616:	2200      	movs	r2, #0
 8002618:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800261a:	4b1a      	ldr	r3, [pc, #104]	@ (8002684 <MX_TIM3_Init+0xac>)
 800261c:	2200      	movs	r2, #0
 800261e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 8002620:	4818      	ldr	r0, [pc, #96]	@ (8002684 <MX_TIM3_Init+0xac>)
 8002622:	f002 fb45 	bl	8004cb0 <HAL_TIM_PWM_Init>
 8002626:	4603      	mov	r3, r0
 8002628:	2b00      	cmp	r3, #0
 800262a:	d001      	beq.n	8002630 <MX_TIM3_Init+0x58>
  {
    Error_Handler();
 800262c:	f7ff fb8c 	bl	8001d48 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002630:	2300      	movs	r3, #0
 8002632:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002634:	2300      	movs	r3, #0
 8002636:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 8002638:	f107 0320 	add.w	r3, r7, #32
 800263c:	4619      	mov	r1, r3
 800263e:	4811      	ldr	r0, [pc, #68]	@ (8002684 <MX_TIM3_Init+0xac>)
 8002640:	f003 fdf8 	bl	8006234 <HAL_TIMEx_MasterConfigSynchronization>
 8002644:	4603      	mov	r3, r0
 8002646:	2b00      	cmp	r3, #0
 8002648:	d001      	beq.n	800264e <MX_TIM3_Init+0x76>
  {
    Error_Handler();
 800264a:	f7ff fb7d 	bl	8001d48 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 800264e:	2360      	movs	r3, #96	@ 0x60
 8002650:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8002652:	2300      	movs	r3, #0
 8002654:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8002656:	2300      	movs	r3, #0
 8002658:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800265a:	2300      	movs	r3, #0
 800265c:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 800265e:	1d3b      	adds	r3, r7, #4
 8002660:	2200      	movs	r2, #0
 8002662:	4619      	mov	r1, r3
 8002664:	4807      	ldr	r0, [pc, #28]	@ (8002684 <MX_TIM3_Init+0xac>)
 8002666:	f002 ffaf 	bl	80055c8 <HAL_TIM_PWM_ConfigChannel>
 800266a:	4603      	mov	r3, r0
 800266c:	2b00      	cmp	r3, #0
 800266e:	d001      	beq.n	8002674 <MX_TIM3_Init+0x9c>
  {
    Error_Handler();
 8002670:	f7ff fb6a 	bl	8001d48 <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */
  HAL_TIM_MspPostInit(&htim3);
 8002674:	4803      	ldr	r0, [pc, #12]	@ (8002684 <MX_TIM3_Init+0xac>)
 8002676:	f000 f8f3 	bl	8002860 <HAL_TIM_MspPostInit>

}
 800267a:	bf00      	nop
 800267c:	3728      	adds	r7, #40	@ 0x28
 800267e:	46bd      	mov	sp, r7
 8002680:	bd80      	pop	{r7, pc}
 8002682:	bf00      	nop
 8002684:	200005b8 	.word	0x200005b8
 8002688:	40000400 	.word	0x40000400

0800268c <MX_TIM6_Init>:
/* TIM6 init function */
void MX_TIM6_Init(void)
{
 800268c:	b580      	push	{r7, lr}
 800268e:	b082      	sub	sp, #8
 8002690:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM6_Init 0 */

  /* USER CODE END TIM6_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002692:	463b      	mov	r3, r7
 8002694:	2200      	movs	r2, #0
 8002696:	601a      	str	r2, [r3, #0]
 8002698:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM6_Init 1 */

  /* USER CODE END TIM6_Init 1 */
  htim6.Instance = TIM6;
 800269a:	4b15      	ldr	r3, [pc, #84]	@ (80026f0 <MX_TIM6_Init+0x64>)
 800269c:	4a15      	ldr	r2, [pc, #84]	@ (80026f4 <MX_TIM6_Init+0x68>)
 800269e:	601a      	str	r2, [r3, #0]
  htim6.Init.Prescaler = 0;
 80026a0:	4b13      	ldr	r3, [pc, #76]	@ (80026f0 <MX_TIM6_Init+0x64>)
 80026a2:	2200      	movs	r2, #0
 80026a4:	605a      	str	r2, [r3, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 80026a6:	4b12      	ldr	r3, [pc, #72]	@ (80026f0 <MX_TIM6_Init+0x64>)
 80026a8:	2200      	movs	r2, #0
 80026aa:	609a      	str	r2, [r3, #8]
  htim6.Init.Period = 65535;
 80026ac:	4b10      	ldr	r3, [pc, #64]	@ (80026f0 <MX_TIM6_Init+0x64>)
 80026ae:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 80026b2:	60da      	str	r2, [r3, #12]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80026b4:	4b0e      	ldr	r3, [pc, #56]	@ (80026f0 <MX_TIM6_Init+0x64>)
 80026b6:	2200      	movs	r2, #0
 80026b8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 80026ba:	480d      	ldr	r0, [pc, #52]	@ (80026f0 <MX_TIM6_Init+0x64>)
 80026bc:	f002 fa40 	bl	8004b40 <HAL_TIM_Base_Init>
 80026c0:	4603      	mov	r3, r0
 80026c2:	2b00      	cmp	r3, #0
 80026c4:	d001      	beq.n	80026ca <MX_TIM6_Init+0x3e>
  {
    Error_Handler();
 80026c6:	f7ff fb3f 	bl	8001d48 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80026ca:	2300      	movs	r3, #0
 80026cc:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80026ce:	2300      	movs	r3, #0
 80026d0:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 80026d2:	463b      	mov	r3, r7
 80026d4:	4619      	mov	r1, r3
 80026d6:	4806      	ldr	r0, [pc, #24]	@ (80026f0 <MX_TIM6_Init+0x64>)
 80026d8:	f003 fdac 	bl	8006234 <HAL_TIMEx_MasterConfigSynchronization>
 80026dc:	4603      	mov	r3, r0
 80026de:	2b00      	cmp	r3, #0
 80026e0:	d001      	beq.n	80026e6 <MX_TIM6_Init+0x5a>
  {
    Error_Handler();
 80026e2:	f7ff fb31 	bl	8001d48 <Error_Handler>
  }
  /* USER CODE BEGIN TIM6_Init 2 */

  /* USER CODE END TIM6_Init 2 */

}
 80026e6:	bf00      	nop
 80026e8:	3708      	adds	r7, #8
 80026ea:	46bd      	mov	sp, r7
 80026ec:	bd80      	pop	{r7, pc}
 80026ee:	bf00      	nop
 80026f0:	20000600 	.word	0x20000600
 80026f4:	40001000 	.word	0x40001000

080026f8 <HAL_TIM_IC_MspInit>:

void HAL_TIM_IC_MspInit(TIM_HandleTypeDef* tim_icHandle)
{
 80026f8:	b580      	push	{r7, lr}
 80026fa:	b08a      	sub	sp, #40	@ 0x28
 80026fc:	af00      	add	r7, sp, #0
 80026fe:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002700:	f107 0314 	add.w	r3, r7, #20
 8002704:	2200      	movs	r2, #0
 8002706:	601a      	str	r2, [r3, #0]
 8002708:	605a      	str	r2, [r3, #4]
 800270a:	609a      	str	r2, [r3, #8]
 800270c:	60da      	str	r2, [r3, #12]
 800270e:	611a      	str	r2, [r3, #16]
  if(tim_icHandle->Instance==TIM1)
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	681b      	ldr	r3, [r3, #0]
 8002714:	4a1d      	ldr	r2, [pc, #116]	@ (800278c <HAL_TIM_IC_MspInit+0x94>)
 8002716:	4293      	cmp	r3, r2
 8002718:	d134      	bne.n	8002784 <HAL_TIM_IC_MspInit+0x8c>
  {
  /* USER CODE BEGIN TIM1_MspInit 0 */

  /* USER CODE END TIM1_MspInit 0 */
    /* TIM1 clock enable */
    __HAL_RCC_TIM1_CLK_ENABLE();
 800271a:	2300      	movs	r3, #0
 800271c:	613b      	str	r3, [r7, #16]
 800271e:	4b1c      	ldr	r3, [pc, #112]	@ (8002790 <HAL_TIM_IC_MspInit+0x98>)
 8002720:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002722:	4a1b      	ldr	r2, [pc, #108]	@ (8002790 <HAL_TIM_IC_MspInit+0x98>)
 8002724:	f043 0301 	orr.w	r3, r3, #1
 8002728:	6453      	str	r3, [r2, #68]	@ 0x44
 800272a:	4b19      	ldr	r3, [pc, #100]	@ (8002790 <HAL_TIM_IC_MspInit+0x98>)
 800272c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800272e:	f003 0301 	and.w	r3, r3, #1
 8002732:	613b      	str	r3, [r7, #16]
 8002734:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002736:	2300      	movs	r3, #0
 8002738:	60fb      	str	r3, [r7, #12]
 800273a:	4b15      	ldr	r3, [pc, #84]	@ (8002790 <HAL_TIM_IC_MspInit+0x98>)
 800273c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800273e:	4a14      	ldr	r2, [pc, #80]	@ (8002790 <HAL_TIM_IC_MspInit+0x98>)
 8002740:	f043 0301 	orr.w	r3, r3, #1
 8002744:	6313      	str	r3, [r2, #48]	@ 0x30
 8002746:	4b12      	ldr	r3, [pc, #72]	@ (8002790 <HAL_TIM_IC_MspInit+0x98>)
 8002748:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800274a:	f003 0301 	and.w	r3, r3, #1
 800274e:	60fb      	str	r3, [r7, #12]
 8002750:	68fb      	ldr	r3, [r7, #12]
    /**TIM1 GPIO Configuration
    PA8     ------> TIM1_CH1
    PA10     ------> TIM1_CH3
    PA11     ------> TIM1_CH4
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_10|GPIO_PIN_11;
 8002752:	f44f 6350 	mov.w	r3, #3328	@ 0xd00
 8002756:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8002758:	2302      	movs	r3, #2
 800275a:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800275c:	2300      	movs	r3, #0
 800275e:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002760:	2300      	movs	r3, #0
 8002762:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM1;
 8002764:	2301      	movs	r3, #1
 8002766:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002768:	f107 0314 	add.w	r3, r7, #20
 800276c:	4619      	mov	r1, r3
 800276e:	4809      	ldr	r0, [pc, #36]	@ (8002794 <HAL_TIM_IC_MspInit+0x9c>)
 8002770:	f000 fb1a 	bl	8002da8 <HAL_GPIO_Init>

    /* TIM1 interrupt Init */
    HAL_NVIC_SetPriority(TIM1_CC_IRQn, 3, 0);
 8002774:	2200      	movs	r2, #0
 8002776:	2103      	movs	r1, #3
 8002778:	201b      	movs	r0, #27
 800277a:	f000 fade 	bl	8002d3a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM1_CC_IRQn);
 800277e:	201b      	movs	r0, #27
 8002780:	f000 faf7 	bl	8002d72 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM1_MspInit 1 */

  /* USER CODE END TIM1_MspInit 1 */
  }
}
 8002784:	bf00      	nop
 8002786:	3728      	adds	r7, #40	@ 0x28
 8002788:	46bd      	mov	sp, r7
 800278a:	bd80      	pop	{r7, pc}
 800278c:	40010000 	.word	0x40010000
 8002790:	40023800 	.word	0x40023800
 8002794:	40020000 	.word	0x40020000

08002798 <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 8002798:	b580      	push	{r7, lr}
 800279a:	b084      	sub	sp, #16
 800279c:	af00      	add	r7, sp, #0
 800279e:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 80027a0:	687b      	ldr	r3, [r7, #4]
 80027a2:	681b      	ldr	r3, [r3, #0]
 80027a4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80027a8:	d116      	bne.n	80027d8 <HAL_TIM_Base_MspInit+0x40>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80027aa:	2300      	movs	r3, #0
 80027ac:	60fb      	str	r3, [r7, #12]
 80027ae:	4b16      	ldr	r3, [pc, #88]	@ (8002808 <HAL_TIM_Base_MspInit+0x70>)
 80027b0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80027b2:	4a15      	ldr	r2, [pc, #84]	@ (8002808 <HAL_TIM_Base_MspInit+0x70>)
 80027b4:	f043 0301 	orr.w	r3, r3, #1
 80027b8:	6413      	str	r3, [r2, #64]	@ 0x40
 80027ba:	4b13      	ldr	r3, [pc, #76]	@ (8002808 <HAL_TIM_Base_MspInit+0x70>)
 80027bc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80027be:	f003 0301 	and.w	r3, r3, #1
 80027c2:	60fb      	str	r3, [r7, #12]
 80027c4:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 interrupt Init */
    HAL_NVIC_SetPriority(TIM2_IRQn, 3, 0);
 80027c6:	2200      	movs	r2, #0
 80027c8:	2103      	movs	r1, #3
 80027ca:	201c      	movs	r0, #28
 80027cc:	f000 fab5 	bl	8002d3a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM2_IRQn);
 80027d0:	201c      	movs	r0, #28
 80027d2:	f000 face 	bl	8002d72 <HAL_NVIC_EnableIRQ>
    __HAL_RCC_TIM6_CLK_ENABLE();
  /* USER CODE BEGIN TIM6_MspInit 1 */

  /* USER CODE END TIM6_MspInit 1 */
  }
}
 80027d6:	e012      	b.n	80027fe <HAL_TIM_Base_MspInit+0x66>
  else if(tim_baseHandle->Instance==TIM6)
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	681b      	ldr	r3, [r3, #0]
 80027dc:	4a0b      	ldr	r2, [pc, #44]	@ (800280c <HAL_TIM_Base_MspInit+0x74>)
 80027de:	4293      	cmp	r3, r2
 80027e0:	d10d      	bne.n	80027fe <HAL_TIM_Base_MspInit+0x66>
    __HAL_RCC_TIM6_CLK_ENABLE();
 80027e2:	2300      	movs	r3, #0
 80027e4:	60bb      	str	r3, [r7, #8]
 80027e6:	4b08      	ldr	r3, [pc, #32]	@ (8002808 <HAL_TIM_Base_MspInit+0x70>)
 80027e8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80027ea:	4a07      	ldr	r2, [pc, #28]	@ (8002808 <HAL_TIM_Base_MspInit+0x70>)
 80027ec:	f043 0310 	orr.w	r3, r3, #16
 80027f0:	6413      	str	r3, [r2, #64]	@ 0x40
 80027f2:	4b05      	ldr	r3, [pc, #20]	@ (8002808 <HAL_TIM_Base_MspInit+0x70>)
 80027f4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80027f6:	f003 0310 	and.w	r3, r3, #16
 80027fa:	60bb      	str	r3, [r7, #8]
 80027fc:	68bb      	ldr	r3, [r7, #8]
}
 80027fe:	bf00      	nop
 8002800:	3710      	adds	r7, #16
 8002802:	46bd      	mov	sp, r7
 8002804:	bd80      	pop	{r7, pc}
 8002806:	bf00      	nop
 8002808:	40023800 	.word	0x40023800
 800280c:	40001000 	.word	0x40001000

08002810 <HAL_TIM_PWM_MspInit>:

void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef* tim_pwmHandle)
{
 8002810:	b580      	push	{r7, lr}
 8002812:	b084      	sub	sp, #16
 8002814:	af00      	add	r7, sp, #0
 8002816:	6078      	str	r0, [r7, #4]

  if(tim_pwmHandle->Instance==TIM3)
 8002818:	687b      	ldr	r3, [r7, #4]
 800281a:	681b      	ldr	r3, [r3, #0]
 800281c:	4a0e      	ldr	r2, [pc, #56]	@ (8002858 <HAL_TIM_PWM_MspInit+0x48>)
 800281e:	4293      	cmp	r3, r2
 8002820:	d115      	bne.n	800284e <HAL_TIM_PWM_MspInit+0x3e>
  {
  /* USER CODE BEGIN TIM3_MspInit 0 */

  /* USER CODE END TIM3_MspInit 0 */
    /* TIM3 clock enable */
    __HAL_RCC_TIM3_CLK_ENABLE();
 8002822:	2300      	movs	r3, #0
 8002824:	60fb      	str	r3, [r7, #12]
 8002826:	4b0d      	ldr	r3, [pc, #52]	@ (800285c <HAL_TIM_PWM_MspInit+0x4c>)
 8002828:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800282a:	4a0c      	ldr	r2, [pc, #48]	@ (800285c <HAL_TIM_PWM_MspInit+0x4c>)
 800282c:	f043 0302 	orr.w	r3, r3, #2
 8002830:	6413      	str	r3, [r2, #64]	@ 0x40
 8002832:	4b0a      	ldr	r3, [pc, #40]	@ (800285c <HAL_TIM_PWM_MspInit+0x4c>)
 8002834:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002836:	f003 0302 	and.w	r3, r3, #2
 800283a:	60fb      	str	r3, [r7, #12]
 800283c:	68fb      	ldr	r3, [r7, #12]

    /* TIM3 interrupt Init */
    HAL_NVIC_SetPriority(TIM3_IRQn, 3, 0);
 800283e:	2200      	movs	r2, #0
 8002840:	2103      	movs	r1, #3
 8002842:	201d      	movs	r0, #29
 8002844:	f000 fa79 	bl	8002d3a <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8002848:	201d      	movs	r0, #29
 800284a:	f000 fa92 	bl	8002d72 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM3_MspInit 1 */

  /* USER CODE END TIM3_MspInit 1 */
  }
}
 800284e:	bf00      	nop
 8002850:	3710      	adds	r7, #16
 8002852:	46bd      	mov	sp, r7
 8002854:	bd80      	pop	{r7, pc}
 8002856:	bf00      	nop
 8002858:	40000400 	.word	0x40000400
 800285c:	40023800 	.word	0x40023800

08002860 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 8002860:	b580      	push	{r7, lr}
 8002862:	b08a      	sub	sp, #40	@ 0x28
 8002864:	af00      	add	r7, sp, #0
 8002866:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002868:	f107 0314 	add.w	r3, r7, #20
 800286c:	2200      	movs	r2, #0
 800286e:	601a      	str	r2, [r3, #0]
 8002870:	605a      	str	r2, [r3, #4]
 8002872:	609a      	str	r2, [r3, #8]
 8002874:	60da      	str	r2, [r3, #12]
 8002876:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM2)
 8002878:	687b      	ldr	r3, [r7, #4]
 800287a:	681b      	ldr	r3, [r3, #0]
 800287c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8002880:	d11e      	bne.n	80028c0 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8002882:	2300      	movs	r3, #0
 8002884:	613b      	str	r3, [r7, #16]
 8002886:	4b22      	ldr	r3, [pc, #136]	@ (8002910 <HAL_TIM_MspPostInit+0xb0>)
 8002888:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800288a:	4a21      	ldr	r2, [pc, #132]	@ (8002910 <HAL_TIM_MspPostInit+0xb0>)
 800288c:	f043 0301 	orr.w	r3, r3, #1
 8002890:	6313      	str	r3, [r2, #48]	@ 0x30
 8002892:	4b1f      	ldr	r3, [pc, #124]	@ (8002910 <HAL_TIM_MspPostInit+0xb0>)
 8002894:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8002896:	f003 0301 	and.w	r3, r3, #1
 800289a:	613b      	str	r3, [r7, #16]
 800289c:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA0-WKUP     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 800289e:	2301      	movs	r3, #1
 80028a0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028a2:	2302      	movs	r3, #2
 80028a4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80028a6:	2300      	movs	r3, #0
 80028a8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80028aa:	2300      	movs	r3, #0
 80028ac:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 80028ae:	2301      	movs	r3, #1
 80028b0:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80028b2:	f107 0314 	add.w	r3, r7, #20
 80028b6:	4619      	mov	r1, r3
 80028b8:	4816      	ldr	r0, [pc, #88]	@ (8002914 <HAL_TIM_MspPostInit+0xb4>)
 80028ba:	f000 fa75 	bl	8002da8 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM3_MspPostInit 1 */

  /* USER CODE END TIM3_MspPostInit 1 */
  }

}
 80028be:	e022      	b.n	8002906 <HAL_TIM_MspPostInit+0xa6>
  else if(timHandle->Instance==TIM3)
 80028c0:	687b      	ldr	r3, [r7, #4]
 80028c2:	681b      	ldr	r3, [r3, #0]
 80028c4:	4a14      	ldr	r2, [pc, #80]	@ (8002918 <HAL_TIM_MspPostInit+0xb8>)
 80028c6:	4293      	cmp	r3, r2
 80028c8:	d11d      	bne.n	8002906 <HAL_TIM_MspPostInit+0xa6>
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80028ca:	2300      	movs	r3, #0
 80028cc:	60fb      	str	r3, [r7, #12]
 80028ce:	4b10      	ldr	r3, [pc, #64]	@ (8002910 <HAL_TIM_MspPostInit+0xb0>)
 80028d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028d2:	4a0f      	ldr	r2, [pc, #60]	@ (8002910 <HAL_TIM_MspPostInit+0xb0>)
 80028d4:	f043 0304 	orr.w	r3, r3, #4
 80028d8:	6313      	str	r3, [r2, #48]	@ 0x30
 80028da:	4b0d      	ldr	r3, [pc, #52]	@ (8002910 <HAL_TIM_MspPostInit+0xb0>)
 80028dc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80028de:	f003 0304 	and.w	r3, r3, #4
 80028e2:	60fb      	str	r3, [r7, #12]
 80028e4:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_6;
 80028e6:	2340      	movs	r3, #64	@ 0x40
 80028e8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80028ea:	2302      	movs	r3, #2
 80028ec:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80028ee:	2300      	movs	r3, #0
 80028f0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80028f2:	2300      	movs	r3, #0
 80028f4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 80028f6:	2302      	movs	r3, #2
 80028f8:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80028fa:	f107 0314 	add.w	r3, r7, #20
 80028fe:	4619      	mov	r1, r3
 8002900:	4806      	ldr	r0, [pc, #24]	@ (800291c <HAL_TIM_MspPostInit+0xbc>)
 8002902:	f000 fa51 	bl	8002da8 <HAL_GPIO_Init>
}
 8002906:	bf00      	nop
 8002908:	3728      	adds	r7, #40	@ 0x28
 800290a:	46bd      	mov	sp, r7
 800290c:	bd80      	pop	{r7, pc}
 800290e:	bf00      	nop
 8002910:	40023800 	.word	0x40023800
 8002914:	40020000 	.word	0x40020000
 8002918:	40000400 	.word	0x40000400
 800291c:	40020800 	.word	0x40020800

08002920 <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 8002920:	b580      	push	{r7, lr}
 8002922:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002924:	4b11      	ldr	r3, [pc, #68]	@ (800296c <MX_USART2_UART_Init+0x4c>)
 8002926:	4a12      	ldr	r2, [pc, #72]	@ (8002970 <MX_USART2_UART_Init+0x50>)
 8002928:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 9600;
 800292a:	4b10      	ldr	r3, [pc, #64]	@ (800296c <MX_USART2_UART_Init+0x4c>)
 800292c:	f44f 5216 	mov.w	r2, #9600	@ 0x2580
 8002930:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002932:	4b0e      	ldr	r3, [pc, #56]	@ (800296c <MX_USART2_UART_Init+0x4c>)
 8002934:	2200      	movs	r2, #0
 8002936:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002938:	4b0c      	ldr	r3, [pc, #48]	@ (800296c <MX_USART2_UART_Init+0x4c>)
 800293a:	2200      	movs	r2, #0
 800293c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 800293e:	4b0b      	ldr	r3, [pc, #44]	@ (800296c <MX_USART2_UART_Init+0x4c>)
 8002940:	2200      	movs	r2, #0
 8002942:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002944:	4b09      	ldr	r3, [pc, #36]	@ (800296c <MX_USART2_UART_Init+0x4c>)
 8002946:	220c      	movs	r2, #12
 8002948:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800294a:	4b08      	ldr	r3, [pc, #32]	@ (800296c <MX_USART2_UART_Init+0x4c>)
 800294c:	2200      	movs	r2, #0
 800294e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002950:	4b06      	ldr	r3, [pc, #24]	@ (800296c <MX_USART2_UART_Init+0x4c>)
 8002952:	2200      	movs	r2, #0
 8002954:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002956:	4805      	ldr	r0, [pc, #20]	@ (800296c <MX_USART2_UART_Init+0x4c>)
 8002958:	f003 fcfc 	bl	8006354 <HAL_UART_Init>
 800295c:	4603      	mov	r3, r0
 800295e:	2b00      	cmp	r3, #0
 8002960:	d001      	beq.n	8002966 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 8002962:	f7ff f9f1 	bl	8001d48 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8002966:	bf00      	nop
 8002968:	bd80      	pop	{r7, pc}
 800296a:	bf00      	nop
 800296c:	20000648 	.word	0x20000648
 8002970:	40004400 	.word	0x40004400

08002974 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 8002974:	b580      	push	{r7, lr}
 8002976:	b08a      	sub	sp, #40	@ 0x28
 8002978:	af00      	add	r7, sp, #0
 800297a:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800297c:	f107 0314 	add.w	r3, r7, #20
 8002980:	2200      	movs	r2, #0
 8002982:	601a      	str	r2, [r3, #0]
 8002984:	605a      	str	r2, [r3, #4]
 8002986:	609a      	str	r2, [r3, #8]
 8002988:	60da      	str	r2, [r3, #12]
 800298a:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART2)
 800298c:	687b      	ldr	r3, [r7, #4]
 800298e:	681b      	ldr	r3, [r3, #0]
 8002990:	4a19      	ldr	r2, [pc, #100]	@ (80029f8 <HAL_UART_MspInit+0x84>)
 8002992:	4293      	cmp	r3, r2
 8002994:	d12b      	bne.n	80029ee <HAL_UART_MspInit+0x7a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8002996:	2300      	movs	r3, #0
 8002998:	613b      	str	r3, [r7, #16]
 800299a:	4b18      	ldr	r3, [pc, #96]	@ (80029fc <HAL_UART_MspInit+0x88>)
 800299c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800299e:	4a17      	ldr	r2, [pc, #92]	@ (80029fc <HAL_UART_MspInit+0x88>)
 80029a0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 80029a4:	6413      	str	r3, [r2, #64]	@ 0x40
 80029a6:	4b15      	ldr	r3, [pc, #84]	@ (80029fc <HAL_UART_MspInit+0x88>)
 80029a8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80029aa:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80029ae:	613b      	str	r3, [r7, #16]
 80029b0:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 80029b2:	2300      	movs	r3, #0
 80029b4:	60fb      	str	r3, [r7, #12]
 80029b6:	4b11      	ldr	r3, [pc, #68]	@ (80029fc <HAL_UART_MspInit+0x88>)
 80029b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80029ba:	4a10      	ldr	r2, [pc, #64]	@ (80029fc <HAL_UART_MspInit+0x88>)
 80029bc:	f043 0301 	orr.w	r3, r3, #1
 80029c0:	6313      	str	r3, [r2, #48]	@ 0x30
 80029c2:	4b0e      	ldr	r3, [pc, #56]	@ (80029fc <HAL_UART_MspInit+0x88>)
 80029c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80029c6:	f003 0301 	and.w	r3, r3, #1
 80029ca:	60fb      	str	r3, [r7, #12]
 80029cc:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 80029ce:	230c      	movs	r3, #12
 80029d0:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80029d2:	2302      	movs	r3, #2
 80029d4:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80029d6:	2300      	movs	r3, #0
 80029d8:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80029da:	2303      	movs	r3, #3
 80029dc:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 80029de:	2307      	movs	r3, #7
 80029e0:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80029e2:	f107 0314 	add.w	r3, r7, #20
 80029e6:	4619      	mov	r1, r3
 80029e8:	4805      	ldr	r0, [pc, #20]	@ (8002a00 <HAL_UART_MspInit+0x8c>)
 80029ea:	f000 f9dd 	bl	8002da8 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 80029ee:	bf00      	nop
 80029f0:	3728      	adds	r7, #40	@ 0x28
 80029f2:	46bd      	mov	sp, r7
 80029f4:	bd80      	pop	{r7, pc}
 80029f6:	bf00      	nop
 80029f8:	40004400 	.word	0x40004400
 80029fc:	40023800 	.word	0x40023800
 8002a00:	40020000 	.word	0x40020000

08002a04 <Reset_Handler>:
 8002a04:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002a3c <LoopFillZerobss+0xe>
 8002a08:	f7ff fcf2 	bl	80023f0 <SystemInit>
 8002a0c:	480c      	ldr	r0, [pc, #48]	@ (8002a40 <LoopFillZerobss+0x12>)
 8002a0e:	490d      	ldr	r1, [pc, #52]	@ (8002a44 <LoopFillZerobss+0x16>)
 8002a10:	4a0d      	ldr	r2, [pc, #52]	@ (8002a48 <LoopFillZerobss+0x1a>)
 8002a12:	2300      	movs	r3, #0
 8002a14:	e002      	b.n	8002a1c <LoopCopyDataInit>

08002a16 <CopyDataInit>:
 8002a16:	58d4      	ldr	r4, [r2, r3]
 8002a18:	50c4      	str	r4, [r0, r3]
 8002a1a:	3304      	adds	r3, #4

08002a1c <LoopCopyDataInit>:
 8002a1c:	18c4      	adds	r4, r0, r3
 8002a1e:	428c      	cmp	r4, r1
 8002a20:	d3f9      	bcc.n	8002a16 <CopyDataInit>
 8002a22:	4a0a      	ldr	r2, [pc, #40]	@ (8002a4c <LoopFillZerobss+0x1e>)
 8002a24:	4c0a      	ldr	r4, [pc, #40]	@ (8002a50 <LoopFillZerobss+0x22>)
 8002a26:	2300      	movs	r3, #0
 8002a28:	e001      	b.n	8002a2e <LoopFillZerobss>

08002a2a <FillZerobss>:
 8002a2a:	6013      	str	r3, [r2, #0]
 8002a2c:	3204      	adds	r2, #4

08002a2e <LoopFillZerobss>:
 8002a2e:	42a2      	cmp	r2, r4
 8002a30:	d3fb      	bcc.n	8002a2a <FillZerobss>
 8002a32:	f003 ff5b 	bl	80068ec <__libc_init_array>
 8002a36:	f7ff f8e3 	bl	8001c00 <main>
 8002a3a:	4770      	bx	lr
 8002a3c:	20020000 	.word	0x20020000
 8002a40:	20000000 	.word	0x20000000
 8002a44:	2000000c 	.word	0x2000000c
 8002a48:	08006fc4 	.word	0x08006fc4
 8002a4c:	2000000c 	.word	0x2000000c
 8002a50:	20000694 	.word	0x20000694

08002a54 <ADC_IRQHandler>:
 8002a54:	e7fe      	b.n	8002a54 <ADC_IRQHandler>
	...

08002a58 <HAL_Init>:
 8002a58:	b580      	push	{r7, lr}
 8002a5a:	af00      	add	r7, sp, #0
 8002a5c:	4b0e      	ldr	r3, [pc, #56]	@ (8002a98 <HAL_Init+0x40>)
 8002a5e:	681b      	ldr	r3, [r3, #0]
 8002a60:	4a0d      	ldr	r2, [pc, #52]	@ (8002a98 <HAL_Init+0x40>)
 8002a62:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 8002a66:	6013      	str	r3, [r2, #0]
 8002a68:	4b0b      	ldr	r3, [pc, #44]	@ (8002a98 <HAL_Init+0x40>)
 8002a6a:	681b      	ldr	r3, [r3, #0]
 8002a6c:	4a0a      	ldr	r2, [pc, #40]	@ (8002a98 <HAL_Init+0x40>)
 8002a6e:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 8002a72:	6013      	str	r3, [r2, #0]
 8002a74:	4b08      	ldr	r3, [pc, #32]	@ (8002a98 <HAL_Init+0x40>)
 8002a76:	681b      	ldr	r3, [r3, #0]
 8002a78:	4a07      	ldr	r2, [pc, #28]	@ (8002a98 <HAL_Init+0x40>)
 8002a7a:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8002a7e:	6013      	str	r3, [r2, #0]
 8002a80:	2003      	movs	r0, #3
 8002a82:	f000 f94f 	bl	8002d24 <HAL_NVIC_SetPriorityGrouping>
 8002a86:	200f      	movs	r0, #15
 8002a88:	f000 f808 	bl	8002a9c <HAL_InitTick>
 8002a8c:	f7ff fc3a 	bl	8002304 <HAL_MspInit>
 8002a90:	2300      	movs	r3, #0
 8002a92:	4618      	mov	r0, r3
 8002a94:	bd80      	pop	{r7, pc}
 8002a96:	bf00      	nop
 8002a98:	40023c00 	.word	0x40023c00

08002a9c <HAL_InitTick>:
 8002a9c:	b580      	push	{r7, lr}
 8002a9e:	b082      	sub	sp, #8
 8002aa0:	af00      	add	r7, sp, #0
 8002aa2:	6078      	str	r0, [r7, #4]
 8002aa4:	4b12      	ldr	r3, [pc, #72]	@ (8002af0 <HAL_InitTick+0x54>)
 8002aa6:	681a      	ldr	r2, [r3, #0]
 8002aa8:	4b12      	ldr	r3, [pc, #72]	@ (8002af4 <HAL_InitTick+0x58>)
 8002aaa:	781b      	ldrb	r3, [r3, #0]
 8002aac:	4619      	mov	r1, r3
 8002aae:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 8002ab2:	fbb3 f3f1 	udiv	r3, r3, r1
 8002ab6:	fbb2 f3f3 	udiv	r3, r2, r3
 8002aba:	4618      	mov	r0, r3
 8002abc:	f000 f967 	bl	8002d8e <HAL_SYSTICK_Config>
 8002ac0:	4603      	mov	r3, r0
 8002ac2:	2b00      	cmp	r3, #0
 8002ac4:	d001      	beq.n	8002aca <HAL_InitTick+0x2e>
 8002ac6:	2301      	movs	r3, #1
 8002ac8:	e00e      	b.n	8002ae8 <HAL_InitTick+0x4c>
 8002aca:	687b      	ldr	r3, [r7, #4]
 8002acc:	2b0f      	cmp	r3, #15
 8002ace:	d80a      	bhi.n	8002ae6 <HAL_InitTick+0x4a>
 8002ad0:	2200      	movs	r2, #0
 8002ad2:	6879      	ldr	r1, [r7, #4]
 8002ad4:	f04f 30ff 	mov.w	r0, #4294967295
 8002ad8:	f000 f92f 	bl	8002d3a <HAL_NVIC_SetPriority>
 8002adc:	4a06      	ldr	r2, [pc, #24]	@ (8002af8 <HAL_InitTick+0x5c>)
 8002ade:	687b      	ldr	r3, [r7, #4]
 8002ae0:	6013      	str	r3, [r2, #0]
 8002ae2:	2300      	movs	r3, #0
 8002ae4:	e000      	b.n	8002ae8 <HAL_InitTick+0x4c>
 8002ae6:	2301      	movs	r3, #1
 8002ae8:	4618      	mov	r0, r3
 8002aea:	3708      	adds	r7, #8
 8002aec:	46bd      	mov	sp, r7
 8002aee:	bd80      	pop	{r7, pc}
 8002af0:	20000000 	.word	0x20000000
 8002af4:	20000008 	.word	0x20000008
 8002af8:	20000004 	.word	0x20000004

08002afc <HAL_IncTick>:
 8002afc:	b480      	push	{r7}
 8002afe:	af00      	add	r7, sp, #0
 8002b00:	4b06      	ldr	r3, [pc, #24]	@ (8002b1c <HAL_IncTick+0x20>)
 8002b02:	781b      	ldrb	r3, [r3, #0]
 8002b04:	461a      	mov	r2, r3
 8002b06:	4b06      	ldr	r3, [pc, #24]	@ (8002b20 <HAL_IncTick+0x24>)
 8002b08:	681b      	ldr	r3, [r3, #0]
 8002b0a:	4413      	add	r3, r2
 8002b0c:	4a04      	ldr	r2, [pc, #16]	@ (8002b20 <HAL_IncTick+0x24>)
 8002b0e:	6013      	str	r3, [r2, #0]
 8002b10:	bf00      	nop
 8002b12:	46bd      	mov	sp, r7
 8002b14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b18:	4770      	bx	lr
 8002b1a:	bf00      	nop
 8002b1c:	20000008 	.word	0x20000008
 8002b20:	20000690 	.word	0x20000690

08002b24 <HAL_GetTick>:
 8002b24:	b480      	push	{r7}
 8002b26:	af00      	add	r7, sp, #0
 8002b28:	4b03      	ldr	r3, [pc, #12]	@ (8002b38 <HAL_GetTick+0x14>)
 8002b2a:	681b      	ldr	r3, [r3, #0]
 8002b2c:	4618      	mov	r0, r3
 8002b2e:	46bd      	mov	sp, r7
 8002b30:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b34:	4770      	bx	lr
 8002b36:	bf00      	nop
 8002b38:	20000690 	.word	0x20000690

08002b3c <HAL_Delay>:
 8002b3c:	b580      	push	{r7, lr}
 8002b3e:	b084      	sub	sp, #16
 8002b40:	af00      	add	r7, sp, #0
 8002b42:	6078      	str	r0, [r7, #4]
 8002b44:	f7ff ffee 	bl	8002b24 <HAL_GetTick>
 8002b48:	60b8      	str	r0, [r7, #8]
 8002b4a:	687b      	ldr	r3, [r7, #4]
 8002b4c:	60fb      	str	r3, [r7, #12]
 8002b4e:	68fb      	ldr	r3, [r7, #12]
 8002b50:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b54:	d005      	beq.n	8002b62 <HAL_Delay+0x26>
 8002b56:	4b0a      	ldr	r3, [pc, #40]	@ (8002b80 <HAL_Delay+0x44>)
 8002b58:	781b      	ldrb	r3, [r3, #0]
 8002b5a:	461a      	mov	r2, r3
 8002b5c:	68fb      	ldr	r3, [r7, #12]
 8002b5e:	4413      	add	r3, r2
 8002b60:	60fb      	str	r3, [r7, #12]
 8002b62:	bf00      	nop
 8002b64:	f7ff ffde 	bl	8002b24 <HAL_GetTick>
 8002b68:	4602      	mov	r2, r0
 8002b6a:	68bb      	ldr	r3, [r7, #8]
 8002b6c:	1ad3      	subs	r3, r2, r3
 8002b6e:	68fa      	ldr	r2, [r7, #12]
 8002b70:	429a      	cmp	r2, r3
 8002b72:	d8f7      	bhi.n	8002b64 <HAL_Delay+0x28>
 8002b74:	bf00      	nop
 8002b76:	bf00      	nop
 8002b78:	3710      	adds	r7, #16
 8002b7a:	46bd      	mov	sp, r7
 8002b7c:	bd80      	pop	{r7, pc}
 8002b7e:	bf00      	nop
 8002b80:	20000008 	.word	0x20000008

08002b84 <__NVIC_SetPriorityGrouping>:
 8002b84:	b480      	push	{r7}
 8002b86:	b085      	sub	sp, #20
 8002b88:	af00      	add	r7, sp, #0
 8002b8a:	6078      	str	r0, [r7, #4]
 8002b8c:	687b      	ldr	r3, [r7, #4]
 8002b8e:	f003 0307 	and.w	r3, r3, #7
 8002b92:	60fb      	str	r3, [r7, #12]
 8002b94:	4b0c      	ldr	r3, [pc, #48]	@ (8002bc8 <__NVIC_SetPriorityGrouping+0x44>)
 8002b96:	68db      	ldr	r3, [r3, #12]
 8002b98:	60bb      	str	r3, [r7, #8]
 8002b9a:	68ba      	ldr	r2, [r7, #8]
 8002b9c:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8002ba0:	4013      	ands	r3, r2
 8002ba2:	60bb      	str	r3, [r7, #8]
 8002ba4:	68fb      	ldr	r3, [r7, #12]
 8002ba6:	021a      	lsls	r2, r3, #8
 8002ba8:	68bb      	ldr	r3, [r7, #8]
 8002baa:	4313      	orrs	r3, r2
 8002bac:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8002bb0:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 8002bb4:	60bb      	str	r3, [r7, #8]
 8002bb6:	4a04      	ldr	r2, [pc, #16]	@ (8002bc8 <__NVIC_SetPriorityGrouping+0x44>)
 8002bb8:	68bb      	ldr	r3, [r7, #8]
 8002bba:	60d3      	str	r3, [r2, #12]
 8002bbc:	bf00      	nop
 8002bbe:	3714      	adds	r7, #20
 8002bc0:	46bd      	mov	sp, r7
 8002bc2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002bc6:	4770      	bx	lr
 8002bc8:	e000ed00 	.word	0xe000ed00

08002bcc <__NVIC_GetPriorityGrouping>:
 8002bcc:	b480      	push	{r7}
 8002bce:	af00      	add	r7, sp, #0
 8002bd0:	4b04      	ldr	r3, [pc, #16]	@ (8002be4 <__NVIC_GetPriorityGrouping+0x18>)
 8002bd2:	68db      	ldr	r3, [r3, #12]
 8002bd4:	0a1b      	lsrs	r3, r3, #8
 8002bd6:	f003 0307 	and.w	r3, r3, #7
 8002bda:	4618      	mov	r0, r3
 8002bdc:	46bd      	mov	sp, r7
 8002bde:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002be2:	4770      	bx	lr
 8002be4:	e000ed00 	.word	0xe000ed00

08002be8 <__NVIC_EnableIRQ>:
 8002be8:	b480      	push	{r7}
 8002bea:	b083      	sub	sp, #12
 8002bec:	af00      	add	r7, sp, #0
 8002bee:	4603      	mov	r3, r0
 8002bf0:	71fb      	strb	r3, [r7, #7]
 8002bf2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002bf6:	2b00      	cmp	r3, #0
 8002bf8:	db0b      	blt.n	8002c12 <__NVIC_EnableIRQ+0x2a>
 8002bfa:	79fb      	ldrb	r3, [r7, #7]
 8002bfc:	f003 021f 	and.w	r2, r3, #31
 8002c00:	4907      	ldr	r1, [pc, #28]	@ (8002c20 <__NVIC_EnableIRQ+0x38>)
 8002c02:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c06:	095b      	lsrs	r3, r3, #5
 8002c08:	2001      	movs	r0, #1
 8002c0a:	fa00 f202 	lsl.w	r2, r0, r2
 8002c0e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002c12:	bf00      	nop
 8002c14:	370c      	adds	r7, #12
 8002c16:	46bd      	mov	sp, r7
 8002c18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c1c:	4770      	bx	lr
 8002c1e:	bf00      	nop
 8002c20:	e000e100 	.word	0xe000e100

08002c24 <__NVIC_SetPriority>:
 8002c24:	b480      	push	{r7}
 8002c26:	b083      	sub	sp, #12
 8002c28:	af00      	add	r7, sp, #0
 8002c2a:	4603      	mov	r3, r0
 8002c2c:	6039      	str	r1, [r7, #0]
 8002c2e:	71fb      	strb	r3, [r7, #7]
 8002c30:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c34:	2b00      	cmp	r3, #0
 8002c36:	db0a      	blt.n	8002c4e <__NVIC_SetPriority+0x2a>
 8002c38:	683b      	ldr	r3, [r7, #0]
 8002c3a:	b2da      	uxtb	r2, r3
 8002c3c:	490c      	ldr	r1, [pc, #48]	@ (8002c70 <__NVIC_SetPriority+0x4c>)
 8002c3e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002c42:	0112      	lsls	r2, r2, #4
 8002c44:	b2d2      	uxtb	r2, r2
 8002c46:	440b      	add	r3, r1
 8002c48:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 8002c4c:	e00a      	b.n	8002c64 <__NVIC_SetPriority+0x40>
 8002c4e:	683b      	ldr	r3, [r7, #0]
 8002c50:	b2da      	uxtb	r2, r3
 8002c52:	4908      	ldr	r1, [pc, #32]	@ (8002c74 <__NVIC_SetPriority+0x50>)
 8002c54:	79fb      	ldrb	r3, [r7, #7]
 8002c56:	f003 030f 	and.w	r3, r3, #15
 8002c5a:	3b04      	subs	r3, #4
 8002c5c:	0112      	lsls	r2, r2, #4
 8002c5e:	b2d2      	uxtb	r2, r2
 8002c60:	440b      	add	r3, r1
 8002c62:	761a      	strb	r2, [r3, #24]
 8002c64:	bf00      	nop
 8002c66:	370c      	adds	r7, #12
 8002c68:	46bd      	mov	sp, r7
 8002c6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002c6e:	4770      	bx	lr
 8002c70:	e000e100 	.word	0xe000e100
 8002c74:	e000ed00 	.word	0xe000ed00

08002c78 <NVIC_EncodePriority>:
 8002c78:	b480      	push	{r7}
 8002c7a:	b089      	sub	sp, #36	@ 0x24
 8002c7c:	af00      	add	r7, sp, #0
 8002c7e:	60f8      	str	r0, [r7, #12]
 8002c80:	60b9      	str	r1, [r7, #8]
 8002c82:	607a      	str	r2, [r7, #4]
 8002c84:	68fb      	ldr	r3, [r7, #12]
 8002c86:	f003 0307 	and.w	r3, r3, #7
 8002c8a:	61fb      	str	r3, [r7, #28]
 8002c8c:	69fb      	ldr	r3, [r7, #28]
 8002c8e:	f1c3 0307 	rsb	r3, r3, #7
 8002c92:	2b04      	cmp	r3, #4
 8002c94:	bf28      	it	cs
 8002c96:	2304      	movcs	r3, #4
 8002c98:	61bb      	str	r3, [r7, #24]
 8002c9a:	69fb      	ldr	r3, [r7, #28]
 8002c9c:	3304      	adds	r3, #4
 8002c9e:	2b06      	cmp	r3, #6
 8002ca0:	d902      	bls.n	8002ca8 <NVIC_EncodePriority+0x30>
 8002ca2:	69fb      	ldr	r3, [r7, #28]
 8002ca4:	3b03      	subs	r3, #3
 8002ca6:	e000      	b.n	8002caa <NVIC_EncodePriority+0x32>
 8002ca8:	2300      	movs	r3, #0
 8002caa:	617b      	str	r3, [r7, #20]
 8002cac:	f04f 32ff 	mov.w	r2, #4294967295
 8002cb0:	69bb      	ldr	r3, [r7, #24]
 8002cb2:	fa02 f303 	lsl.w	r3, r2, r3
 8002cb6:	43da      	mvns	r2, r3
 8002cb8:	68bb      	ldr	r3, [r7, #8]
 8002cba:	401a      	ands	r2, r3
 8002cbc:	697b      	ldr	r3, [r7, #20]
 8002cbe:	409a      	lsls	r2, r3
 8002cc0:	f04f 31ff 	mov.w	r1, #4294967295
 8002cc4:	697b      	ldr	r3, [r7, #20]
 8002cc6:	fa01 f303 	lsl.w	r3, r1, r3
 8002cca:	43d9      	mvns	r1, r3
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	400b      	ands	r3, r1
 8002cd0:	4313      	orrs	r3, r2
 8002cd2:	4618      	mov	r0, r3
 8002cd4:	3724      	adds	r7, #36	@ 0x24
 8002cd6:	46bd      	mov	sp, r7
 8002cd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002cdc:	4770      	bx	lr
	...

08002ce0 <SysTick_Config>:
 8002ce0:	b580      	push	{r7, lr}
 8002ce2:	b082      	sub	sp, #8
 8002ce4:	af00      	add	r7, sp, #0
 8002ce6:	6078      	str	r0, [r7, #4]
 8002ce8:	687b      	ldr	r3, [r7, #4]
 8002cea:	3b01      	subs	r3, #1
 8002cec:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 8002cf0:	d301      	bcc.n	8002cf6 <SysTick_Config+0x16>
 8002cf2:	2301      	movs	r3, #1
 8002cf4:	e00f      	b.n	8002d16 <SysTick_Config+0x36>
 8002cf6:	4a0a      	ldr	r2, [pc, #40]	@ (8002d20 <SysTick_Config+0x40>)
 8002cf8:	687b      	ldr	r3, [r7, #4]
 8002cfa:	3b01      	subs	r3, #1
 8002cfc:	6053      	str	r3, [r2, #4]
 8002cfe:	210f      	movs	r1, #15
 8002d00:	f04f 30ff 	mov.w	r0, #4294967295
 8002d04:	f7ff ff8e 	bl	8002c24 <__NVIC_SetPriority>
 8002d08:	4b05      	ldr	r3, [pc, #20]	@ (8002d20 <SysTick_Config+0x40>)
 8002d0a:	2200      	movs	r2, #0
 8002d0c:	609a      	str	r2, [r3, #8]
 8002d0e:	4b04      	ldr	r3, [pc, #16]	@ (8002d20 <SysTick_Config+0x40>)
 8002d10:	2207      	movs	r2, #7
 8002d12:	601a      	str	r2, [r3, #0]
 8002d14:	2300      	movs	r3, #0
 8002d16:	4618      	mov	r0, r3
 8002d18:	3708      	adds	r7, #8
 8002d1a:	46bd      	mov	sp, r7
 8002d1c:	bd80      	pop	{r7, pc}
 8002d1e:	bf00      	nop
 8002d20:	e000e010 	.word	0xe000e010

08002d24 <HAL_NVIC_SetPriorityGrouping>:
 8002d24:	b580      	push	{r7, lr}
 8002d26:	b082      	sub	sp, #8
 8002d28:	af00      	add	r7, sp, #0
 8002d2a:	6078      	str	r0, [r7, #4]
 8002d2c:	6878      	ldr	r0, [r7, #4]
 8002d2e:	f7ff ff29 	bl	8002b84 <__NVIC_SetPriorityGrouping>
 8002d32:	bf00      	nop
 8002d34:	3708      	adds	r7, #8
 8002d36:	46bd      	mov	sp, r7
 8002d38:	bd80      	pop	{r7, pc}

08002d3a <HAL_NVIC_SetPriority>:
 8002d3a:	b580      	push	{r7, lr}
 8002d3c:	b086      	sub	sp, #24
 8002d3e:	af00      	add	r7, sp, #0
 8002d40:	4603      	mov	r3, r0
 8002d42:	60b9      	str	r1, [r7, #8]
 8002d44:	607a      	str	r2, [r7, #4]
 8002d46:	73fb      	strb	r3, [r7, #15]
 8002d48:	2300      	movs	r3, #0
 8002d4a:	617b      	str	r3, [r7, #20]
 8002d4c:	f7ff ff3e 	bl	8002bcc <__NVIC_GetPriorityGrouping>
 8002d50:	6178      	str	r0, [r7, #20]
 8002d52:	687a      	ldr	r2, [r7, #4]
 8002d54:	68b9      	ldr	r1, [r7, #8]
 8002d56:	6978      	ldr	r0, [r7, #20]
 8002d58:	f7ff ff8e 	bl	8002c78 <NVIC_EncodePriority>
 8002d5c:	4602      	mov	r2, r0
 8002d5e:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8002d62:	4611      	mov	r1, r2
 8002d64:	4618      	mov	r0, r3
 8002d66:	f7ff ff5d 	bl	8002c24 <__NVIC_SetPriority>
 8002d6a:	bf00      	nop
 8002d6c:	3718      	adds	r7, #24
 8002d6e:	46bd      	mov	sp, r7
 8002d70:	bd80      	pop	{r7, pc}

08002d72 <HAL_NVIC_EnableIRQ>:
 8002d72:	b580      	push	{r7, lr}
 8002d74:	b082      	sub	sp, #8
 8002d76:	af00      	add	r7, sp, #0
 8002d78:	4603      	mov	r3, r0
 8002d7a:	71fb      	strb	r3, [r7, #7]
 8002d7c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8002d80:	4618      	mov	r0, r3
 8002d82:	f7ff ff31 	bl	8002be8 <__NVIC_EnableIRQ>
 8002d86:	bf00      	nop
 8002d88:	3708      	adds	r7, #8
 8002d8a:	46bd      	mov	sp, r7
 8002d8c:	bd80      	pop	{r7, pc}

08002d8e <HAL_SYSTICK_Config>:
 8002d8e:	b580      	push	{r7, lr}
 8002d90:	b082      	sub	sp, #8
 8002d92:	af00      	add	r7, sp, #0
 8002d94:	6078      	str	r0, [r7, #4]
 8002d96:	6878      	ldr	r0, [r7, #4]
 8002d98:	f7ff ffa2 	bl	8002ce0 <SysTick_Config>
 8002d9c:	4603      	mov	r3, r0
 8002d9e:	4618      	mov	r0, r3
 8002da0:	3708      	adds	r7, #8
 8002da2:	46bd      	mov	sp, r7
 8002da4:	bd80      	pop	{r7, pc}
	...

08002da8 <HAL_GPIO_Init>:
 8002da8:	b480      	push	{r7}
 8002daa:	b089      	sub	sp, #36	@ 0x24
 8002dac:	af00      	add	r7, sp, #0
 8002dae:	6078      	str	r0, [r7, #4]
 8002db0:	6039      	str	r1, [r7, #0]
 8002db2:	2300      	movs	r3, #0
 8002db4:	617b      	str	r3, [r7, #20]
 8002db6:	2300      	movs	r3, #0
 8002db8:	613b      	str	r3, [r7, #16]
 8002dba:	2300      	movs	r3, #0
 8002dbc:	61bb      	str	r3, [r7, #24]
 8002dbe:	2300      	movs	r3, #0
 8002dc0:	61fb      	str	r3, [r7, #28]
 8002dc2:	e165      	b.n	8003090 <HAL_GPIO_Init+0x2e8>
 8002dc4:	2201      	movs	r2, #1
 8002dc6:	69fb      	ldr	r3, [r7, #28]
 8002dc8:	fa02 f303 	lsl.w	r3, r2, r3
 8002dcc:	617b      	str	r3, [r7, #20]
 8002dce:	683b      	ldr	r3, [r7, #0]
 8002dd0:	681b      	ldr	r3, [r3, #0]
 8002dd2:	697a      	ldr	r2, [r7, #20]
 8002dd4:	4013      	ands	r3, r2
 8002dd6:	613b      	str	r3, [r7, #16]
 8002dd8:	693a      	ldr	r2, [r7, #16]
 8002dda:	697b      	ldr	r3, [r7, #20]
 8002ddc:	429a      	cmp	r2, r3
 8002dde:	f040 8154 	bne.w	800308a <HAL_GPIO_Init+0x2e2>
 8002de2:	683b      	ldr	r3, [r7, #0]
 8002de4:	685b      	ldr	r3, [r3, #4]
 8002de6:	f003 0303 	and.w	r3, r3, #3
 8002dea:	2b01      	cmp	r3, #1
 8002dec:	d005      	beq.n	8002dfa <HAL_GPIO_Init+0x52>
 8002dee:	683b      	ldr	r3, [r7, #0]
 8002df0:	685b      	ldr	r3, [r3, #4]
 8002df2:	f003 0303 	and.w	r3, r3, #3
 8002df6:	2b02      	cmp	r3, #2
 8002df8:	d130      	bne.n	8002e5c <HAL_GPIO_Init+0xb4>
 8002dfa:	687b      	ldr	r3, [r7, #4]
 8002dfc:	689b      	ldr	r3, [r3, #8]
 8002dfe:	61bb      	str	r3, [r7, #24]
 8002e00:	69fb      	ldr	r3, [r7, #28]
 8002e02:	005b      	lsls	r3, r3, #1
 8002e04:	2203      	movs	r2, #3
 8002e06:	fa02 f303 	lsl.w	r3, r2, r3
 8002e0a:	43db      	mvns	r3, r3
 8002e0c:	69ba      	ldr	r2, [r7, #24]
 8002e0e:	4013      	ands	r3, r2
 8002e10:	61bb      	str	r3, [r7, #24]
 8002e12:	683b      	ldr	r3, [r7, #0]
 8002e14:	68da      	ldr	r2, [r3, #12]
 8002e16:	69fb      	ldr	r3, [r7, #28]
 8002e18:	005b      	lsls	r3, r3, #1
 8002e1a:	fa02 f303 	lsl.w	r3, r2, r3
 8002e1e:	69ba      	ldr	r2, [r7, #24]
 8002e20:	4313      	orrs	r3, r2
 8002e22:	61bb      	str	r3, [r7, #24]
 8002e24:	687b      	ldr	r3, [r7, #4]
 8002e26:	69ba      	ldr	r2, [r7, #24]
 8002e28:	609a      	str	r2, [r3, #8]
 8002e2a:	687b      	ldr	r3, [r7, #4]
 8002e2c:	685b      	ldr	r3, [r3, #4]
 8002e2e:	61bb      	str	r3, [r7, #24]
 8002e30:	2201      	movs	r2, #1
 8002e32:	69fb      	ldr	r3, [r7, #28]
 8002e34:	fa02 f303 	lsl.w	r3, r2, r3
 8002e38:	43db      	mvns	r3, r3
 8002e3a:	69ba      	ldr	r2, [r7, #24]
 8002e3c:	4013      	ands	r3, r2
 8002e3e:	61bb      	str	r3, [r7, #24]
 8002e40:	683b      	ldr	r3, [r7, #0]
 8002e42:	685b      	ldr	r3, [r3, #4]
 8002e44:	091b      	lsrs	r3, r3, #4
 8002e46:	f003 0201 	and.w	r2, r3, #1
 8002e4a:	69fb      	ldr	r3, [r7, #28]
 8002e4c:	fa02 f303 	lsl.w	r3, r2, r3
 8002e50:	69ba      	ldr	r2, [r7, #24]
 8002e52:	4313      	orrs	r3, r2
 8002e54:	61bb      	str	r3, [r7, #24]
 8002e56:	687b      	ldr	r3, [r7, #4]
 8002e58:	69ba      	ldr	r2, [r7, #24]
 8002e5a:	605a      	str	r2, [r3, #4]
 8002e5c:	683b      	ldr	r3, [r7, #0]
 8002e5e:	685b      	ldr	r3, [r3, #4]
 8002e60:	f003 0303 	and.w	r3, r3, #3
 8002e64:	2b03      	cmp	r3, #3
 8002e66:	d017      	beq.n	8002e98 <HAL_GPIO_Init+0xf0>
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	68db      	ldr	r3, [r3, #12]
 8002e6c:	61bb      	str	r3, [r7, #24]
 8002e6e:	69fb      	ldr	r3, [r7, #28]
 8002e70:	005b      	lsls	r3, r3, #1
 8002e72:	2203      	movs	r2, #3
 8002e74:	fa02 f303 	lsl.w	r3, r2, r3
 8002e78:	43db      	mvns	r3, r3
 8002e7a:	69ba      	ldr	r2, [r7, #24]
 8002e7c:	4013      	ands	r3, r2
 8002e7e:	61bb      	str	r3, [r7, #24]
 8002e80:	683b      	ldr	r3, [r7, #0]
 8002e82:	689a      	ldr	r2, [r3, #8]
 8002e84:	69fb      	ldr	r3, [r7, #28]
 8002e86:	005b      	lsls	r3, r3, #1
 8002e88:	fa02 f303 	lsl.w	r3, r2, r3
 8002e8c:	69ba      	ldr	r2, [r7, #24]
 8002e8e:	4313      	orrs	r3, r2
 8002e90:	61bb      	str	r3, [r7, #24]
 8002e92:	687b      	ldr	r3, [r7, #4]
 8002e94:	69ba      	ldr	r2, [r7, #24]
 8002e96:	60da      	str	r2, [r3, #12]
 8002e98:	683b      	ldr	r3, [r7, #0]
 8002e9a:	685b      	ldr	r3, [r3, #4]
 8002e9c:	f003 0303 	and.w	r3, r3, #3
 8002ea0:	2b02      	cmp	r3, #2
 8002ea2:	d123      	bne.n	8002eec <HAL_GPIO_Init+0x144>
 8002ea4:	69fb      	ldr	r3, [r7, #28]
 8002ea6:	08da      	lsrs	r2, r3, #3
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	3208      	adds	r2, #8
 8002eac:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8002eb0:	61bb      	str	r3, [r7, #24]
 8002eb2:	69fb      	ldr	r3, [r7, #28]
 8002eb4:	f003 0307 	and.w	r3, r3, #7
 8002eb8:	009b      	lsls	r3, r3, #2
 8002eba:	220f      	movs	r2, #15
 8002ebc:	fa02 f303 	lsl.w	r3, r2, r3
 8002ec0:	43db      	mvns	r3, r3
 8002ec2:	69ba      	ldr	r2, [r7, #24]
 8002ec4:	4013      	ands	r3, r2
 8002ec6:	61bb      	str	r3, [r7, #24]
 8002ec8:	683b      	ldr	r3, [r7, #0]
 8002eca:	691a      	ldr	r2, [r3, #16]
 8002ecc:	69fb      	ldr	r3, [r7, #28]
 8002ece:	f003 0307 	and.w	r3, r3, #7
 8002ed2:	009b      	lsls	r3, r3, #2
 8002ed4:	fa02 f303 	lsl.w	r3, r2, r3
 8002ed8:	69ba      	ldr	r2, [r7, #24]
 8002eda:	4313      	orrs	r3, r2
 8002edc:	61bb      	str	r3, [r7, #24]
 8002ede:	69fb      	ldr	r3, [r7, #28]
 8002ee0:	08da      	lsrs	r2, r3, #3
 8002ee2:	687b      	ldr	r3, [r7, #4]
 8002ee4:	3208      	adds	r2, #8
 8002ee6:	69b9      	ldr	r1, [r7, #24]
 8002ee8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	681b      	ldr	r3, [r3, #0]
 8002ef0:	61bb      	str	r3, [r7, #24]
 8002ef2:	69fb      	ldr	r3, [r7, #28]
 8002ef4:	005b      	lsls	r3, r3, #1
 8002ef6:	2203      	movs	r2, #3
 8002ef8:	fa02 f303 	lsl.w	r3, r2, r3
 8002efc:	43db      	mvns	r3, r3
 8002efe:	69ba      	ldr	r2, [r7, #24]
 8002f00:	4013      	ands	r3, r2
 8002f02:	61bb      	str	r3, [r7, #24]
 8002f04:	683b      	ldr	r3, [r7, #0]
 8002f06:	685b      	ldr	r3, [r3, #4]
 8002f08:	f003 0203 	and.w	r2, r3, #3
 8002f0c:	69fb      	ldr	r3, [r7, #28]
 8002f0e:	005b      	lsls	r3, r3, #1
 8002f10:	fa02 f303 	lsl.w	r3, r2, r3
 8002f14:	69ba      	ldr	r2, [r7, #24]
 8002f16:	4313      	orrs	r3, r2
 8002f18:	61bb      	str	r3, [r7, #24]
 8002f1a:	687b      	ldr	r3, [r7, #4]
 8002f1c:	69ba      	ldr	r2, [r7, #24]
 8002f1e:	601a      	str	r2, [r3, #0]
 8002f20:	683b      	ldr	r3, [r7, #0]
 8002f22:	685b      	ldr	r3, [r3, #4]
 8002f24:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8002f28:	2b00      	cmp	r3, #0
 8002f2a:	f000 80ae 	beq.w	800308a <HAL_GPIO_Init+0x2e2>
 8002f2e:	2300      	movs	r3, #0
 8002f30:	60fb      	str	r3, [r7, #12]
 8002f32:	4b5d      	ldr	r3, [pc, #372]	@ (80030a8 <HAL_GPIO_Init+0x300>)
 8002f34:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f36:	4a5c      	ldr	r2, [pc, #368]	@ (80030a8 <HAL_GPIO_Init+0x300>)
 8002f38:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8002f3c:	6453      	str	r3, [r2, #68]	@ 0x44
 8002f3e:	4b5a      	ldr	r3, [pc, #360]	@ (80030a8 <HAL_GPIO_Init+0x300>)
 8002f40:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f42:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8002f46:	60fb      	str	r3, [r7, #12]
 8002f48:	68fb      	ldr	r3, [r7, #12]
 8002f4a:	4a58      	ldr	r2, [pc, #352]	@ (80030ac <HAL_GPIO_Init+0x304>)
 8002f4c:	69fb      	ldr	r3, [r7, #28]
 8002f4e:	089b      	lsrs	r3, r3, #2
 8002f50:	3302      	adds	r3, #2
 8002f52:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8002f56:	61bb      	str	r3, [r7, #24]
 8002f58:	69fb      	ldr	r3, [r7, #28]
 8002f5a:	f003 0303 	and.w	r3, r3, #3
 8002f5e:	009b      	lsls	r3, r3, #2
 8002f60:	220f      	movs	r2, #15
 8002f62:	fa02 f303 	lsl.w	r3, r2, r3
 8002f66:	43db      	mvns	r3, r3
 8002f68:	69ba      	ldr	r2, [r7, #24]
 8002f6a:	4013      	ands	r3, r2
 8002f6c:	61bb      	str	r3, [r7, #24]
 8002f6e:	687b      	ldr	r3, [r7, #4]
 8002f70:	4a4f      	ldr	r2, [pc, #316]	@ (80030b0 <HAL_GPIO_Init+0x308>)
 8002f72:	4293      	cmp	r3, r2
 8002f74:	d025      	beq.n	8002fc2 <HAL_GPIO_Init+0x21a>
 8002f76:	687b      	ldr	r3, [r7, #4]
 8002f78:	4a4e      	ldr	r2, [pc, #312]	@ (80030b4 <HAL_GPIO_Init+0x30c>)
 8002f7a:	4293      	cmp	r3, r2
 8002f7c:	d01f      	beq.n	8002fbe <HAL_GPIO_Init+0x216>
 8002f7e:	687b      	ldr	r3, [r7, #4]
 8002f80:	4a4d      	ldr	r2, [pc, #308]	@ (80030b8 <HAL_GPIO_Init+0x310>)
 8002f82:	4293      	cmp	r3, r2
 8002f84:	d019      	beq.n	8002fba <HAL_GPIO_Init+0x212>
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	4a4c      	ldr	r2, [pc, #304]	@ (80030bc <HAL_GPIO_Init+0x314>)
 8002f8a:	4293      	cmp	r3, r2
 8002f8c:	d013      	beq.n	8002fb6 <HAL_GPIO_Init+0x20e>
 8002f8e:	687b      	ldr	r3, [r7, #4]
 8002f90:	4a4b      	ldr	r2, [pc, #300]	@ (80030c0 <HAL_GPIO_Init+0x318>)
 8002f92:	4293      	cmp	r3, r2
 8002f94:	d00d      	beq.n	8002fb2 <HAL_GPIO_Init+0x20a>
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	4a4a      	ldr	r2, [pc, #296]	@ (80030c4 <HAL_GPIO_Init+0x31c>)
 8002f9a:	4293      	cmp	r3, r2
 8002f9c:	d007      	beq.n	8002fae <HAL_GPIO_Init+0x206>
 8002f9e:	687b      	ldr	r3, [r7, #4]
 8002fa0:	4a49      	ldr	r2, [pc, #292]	@ (80030c8 <HAL_GPIO_Init+0x320>)
 8002fa2:	4293      	cmp	r3, r2
 8002fa4:	d101      	bne.n	8002faa <HAL_GPIO_Init+0x202>
 8002fa6:	2306      	movs	r3, #6
 8002fa8:	e00c      	b.n	8002fc4 <HAL_GPIO_Init+0x21c>
 8002faa:	2307      	movs	r3, #7
 8002fac:	e00a      	b.n	8002fc4 <HAL_GPIO_Init+0x21c>
 8002fae:	2305      	movs	r3, #5
 8002fb0:	e008      	b.n	8002fc4 <HAL_GPIO_Init+0x21c>
 8002fb2:	2304      	movs	r3, #4
 8002fb4:	e006      	b.n	8002fc4 <HAL_GPIO_Init+0x21c>
 8002fb6:	2303      	movs	r3, #3
 8002fb8:	e004      	b.n	8002fc4 <HAL_GPIO_Init+0x21c>
 8002fba:	2302      	movs	r3, #2
 8002fbc:	e002      	b.n	8002fc4 <HAL_GPIO_Init+0x21c>
 8002fbe:	2301      	movs	r3, #1
 8002fc0:	e000      	b.n	8002fc4 <HAL_GPIO_Init+0x21c>
 8002fc2:	2300      	movs	r3, #0
 8002fc4:	69fa      	ldr	r2, [r7, #28]
 8002fc6:	f002 0203 	and.w	r2, r2, #3
 8002fca:	0092      	lsls	r2, r2, #2
 8002fcc:	4093      	lsls	r3, r2
 8002fce:	69ba      	ldr	r2, [r7, #24]
 8002fd0:	4313      	orrs	r3, r2
 8002fd2:	61bb      	str	r3, [r7, #24]
 8002fd4:	4935      	ldr	r1, [pc, #212]	@ (80030ac <HAL_GPIO_Init+0x304>)
 8002fd6:	69fb      	ldr	r3, [r7, #28]
 8002fd8:	089b      	lsrs	r3, r3, #2
 8002fda:	3302      	adds	r3, #2
 8002fdc:	69ba      	ldr	r2, [r7, #24]
 8002fde:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8002fe2:	4b3a      	ldr	r3, [pc, #232]	@ (80030cc <HAL_GPIO_Init+0x324>)
 8002fe4:	689b      	ldr	r3, [r3, #8]
 8002fe6:	61bb      	str	r3, [r7, #24]
 8002fe8:	693b      	ldr	r3, [r7, #16]
 8002fea:	43db      	mvns	r3, r3
 8002fec:	69ba      	ldr	r2, [r7, #24]
 8002fee:	4013      	ands	r3, r2
 8002ff0:	61bb      	str	r3, [r7, #24]
 8002ff2:	683b      	ldr	r3, [r7, #0]
 8002ff4:	685b      	ldr	r3, [r3, #4]
 8002ff6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 8002ffa:	2b00      	cmp	r3, #0
 8002ffc:	d003      	beq.n	8003006 <HAL_GPIO_Init+0x25e>
 8002ffe:	69ba      	ldr	r2, [r7, #24]
 8003000:	693b      	ldr	r3, [r7, #16]
 8003002:	4313      	orrs	r3, r2
 8003004:	61bb      	str	r3, [r7, #24]
 8003006:	4a31      	ldr	r2, [pc, #196]	@ (80030cc <HAL_GPIO_Init+0x324>)
 8003008:	69bb      	ldr	r3, [r7, #24]
 800300a:	6093      	str	r3, [r2, #8]
 800300c:	4b2f      	ldr	r3, [pc, #188]	@ (80030cc <HAL_GPIO_Init+0x324>)
 800300e:	68db      	ldr	r3, [r3, #12]
 8003010:	61bb      	str	r3, [r7, #24]
 8003012:	693b      	ldr	r3, [r7, #16]
 8003014:	43db      	mvns	r3, r3
 8003016:	69ba      	ldr	r2, [r7, #24]
 8003018:	4013      	ands	r3, r2
 800301a:	61bb      	str	r3, [r7, #24]
 800301c:	683b      	ldr	r3, [r7, #0]
 800301e:	685b      	ldr	r3, [r3, #4]
 8003020:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8003024:	2b00      	cmp	r3, #0
 8003026:	d003      	beq.n	8003030 <HAL_GPIO_Init+0x288>
 8003028:	69ba      	ldr	r2, [r7, #24]
 800302a:	693b      	ldr	r3, [r7, #16]
 800302c:	4313      	orrs	r3, r2
 800302e:	61bb      	str	r3, [r7, #24]
 8003030:	4a26      	ldr	r2, [pc, #152]	@ (80030cc <HAL_GPIO_Init+0x324>)
 8003032:	69bb      	ldr	r3, [r7, #24]
 8003034:	60d3      	str	r3, [r2, #12]
 8003036:	4b25      	ldr	r3, [pc, #148]	@ (80030cc <HAL_GPIO_Init+0x324>)
 8003038:	685b      	ldr	r3, [r3, #4]
 800303a:	61bb      	str	r3, [r7, #24]
 800303c:	693b      	ldr	r3, [r7, #16]
 800303e:	43db      	mvns	r3, r3
 8003040:	69ba      	ldr	r2, [r7, #24]
 8003042:	4013      	ands	r3, r2
 8003044:	61bb      	str	r3, [r7, #24]
 8003046:	683b      	ldr	r3, [r7, #0]
 8003048:	685b      	ldr	r3, [r3, #4]
 800304a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800304e:	2b00      	cmp	r3, #0
 8003050:	d003      	beq.n	800305a <HAL_GPIO_Init+0x2b2>
 8003052:	69ba      	ldr	r2, [r7, #24]
 8003054:	693b      	ldr	r3, [r7, #16]
 8003056:	4313      	orrs	r3, r2
 8003058:	61bb      	str	r3, [r7, #24]
 800305a:	4a1c      	ldr	r2, [pc, #112]	@ (80030cc <HAL_GPIO_Init+0x324>)
 800305c:	69bb      	ldr	r3, [r7, #24]
 800305e:	6053      	str	r3, [r2, #4]
 8003060:	4b1a      	ldr	r3, [pc, #104]	@ (80030cc <HAL_GPIO_Init+0x324>)
 8003062:	681b      	ldr	r3, [r3, #0]
 8003064:	61bb      	str	r3, [r7, #24]
 8003066:	693b      	ldr	r3, [r7, #16]
 8003068:	43db      	mvns	r3, r3
 800306a:	69ba      	ldr	r2, [r7, #24]
 800306c:	4013      	ands	r3, r2
 800306e:	61bb      	str	r3, [r7, #24]
 8003070:	683b      	ldr	r3, [r7, #0]
 8003072:	685b      	ldr	r3, [r3, #4]
 8003074:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8003078:	2b00      	cmp	r3, #0
 800307a:	d003      	beq.n	8003084 <HAL_GPIO_Init+0x2dc>
 800307c:	69ba      	ldr	r2, [r7, #24]
 800307e:	693b      	ldr	r3, [r7, #16]
 8003080:	4313      	orrs	r3, r2
 8003082:	61bb      	str	r3, [r7, #24]
 8003084:	4a11      	ldr	r2, [pc, #68]	@ (80030cc <HAL_GPIO_Init+0x324>)
 8003086:	69bb      	ldr	r3, [r7, #24]
 8003088:	6013      	str	r3, [r2, #0]
 800308a:	69fb      	ldr	r3, [r7, #28]
 800308c:	3301      	adds	r3, #1
 800308e:	61fb      	str	r3, [r7, #28]
 8003090:	69fb      	ldr	r3, [r7, #28]
 8003092:	2b0f      	cmp	r3, #15
 8003094:	f67f ae96 	bls.w	8002dc4 <HAL_GPIO_Init+0x1c>
 8003098:	bf00      	nop
 800309a:	bf00      	nop
 800309c:	3724      	adds	r7, #36	@ 0x24
 800309e:	46bd      	mov	sp, r7
 80030a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80030a4:	4770      	bx	lr
 80030a6:	bf00      	nop
 80030a8:	40023800 	.word	0x40023800
 80030ac:	40013800 	.word	0x40013800
 80030b0:	40020000 	.word	0x40020000
 80030b4:	40020400 	.word	0x40020400
 80030b8:	40020800 	.word	0x40020800
 80030bc:	40020c00 	.word	0x40020c00
 80030c0:	40021000 	.word	0x40021000
 80030c4:	40021400 	.word	0x40021400
 80030c8:	40021800 	.word	0x40021800
 80030cc:	40013c00 	.word	0x40013c00

080030d0 <HAL_GPIO_WritePin>:
 80030d0:	b480      	push	{r7}
 80030d2:	b083      	sub	sp, #12
 80030d4:	af00      	add	r7, sp, #0
 80030d6:	6078      	str	r0, [r7, #4]
 80030d8:	460b      	mov	r3, r1
 80030da:	807b      	strh	r3, [r7, #2]
 80030dc:	4613      	mov	r3, r2
 80030de:	707b      	strb	r3, [r7, #1]
 80030e0:	787b      	ldrb	r3, [r7, #1]
 80030e2:	2b00      	cmp	r3, #0
 80030e4:	d003      	beq.n	80030ee <HAL_GPIO_WritePin+0x1e>
 80030e6:	887a      	ldrh	r2, [r7, #2]
 80030e8:	687b      	ldr	r3, [r7, #4]
 80030ea:	619a      	str	r2, [r3, #24]
 80030ec:	e003      	b.n	80030f6 <HAL_GPIO_WritePin+0x26>
 80030ee:	887b      	ldrh	r3, [r7, #2]
 80030f0:	041a      	lsls	r2, r3, #16
 80030f2:	687b      	ldr	r3, [r7, #4]
 80030f4:	619a      	str	r2, [r3, #24]
 80030f6:	bf00      	nop
 80030f8:	370c      	adds	r7, #12
 80030fa:	46bd      	mov	sp, r7
 80030fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003100:	4770      	bx	lr
	...

08003104 <HAL_I2C_Init>:
 8003104:	b580      	push	{r7, lr}
 8003106:	b084      	sub	sp, #16
 8003108:	af00      	add	r7, sp, #0
 800310a:	6078      	str	r0, [r7, #4]
 800310c:	687b      	ldr	r3, [r7, #4]
 800310e:	2b00      	cmp	r3, #0
 8003110:	d101      	bne.n	8003116 <HAL_I2C_Init+0x12>
 8003112:	2301      	movs	r3, #1
 8003114:	e12b      	b.n	800336e <HAL_I2C_Init+0x26a>
 8003116:	687b      	ldr	r3, [r7, #4]
 8003118:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800311c:	b2db      	uxtb	r3, r3
 800311e:	2b00      	cmp	r3, #0
 8003120:	d106      	bne.n	8003130 <HAL_I2C_Init+0x2c>
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	2200      	movs	r2, #0
 8003126:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800312a:	6878      	ldr	r0, [r7, #4]
 800312c:	f7fd fed2 	bl	8000ed4 <HAL_I2C_MspInit>
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	2224      	movs	r2, #36	@ 0x24
 8003134:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003138:	687b      	ldr	r3, [r7, #4]
 800313a:	681b      	ldr	r3, [r3, #0]
 800313c:	681a      	ldr	r2, [r3, #0]
 800313e:	687b      	ldr	r3, [r7, #4]
 8003140:	681b      	ldr	r3, [r3, #0]
 8003142:	f022 0201 	bic.w	r2, r2, #1
 8003146:	601a      	str	r2, [r3, #0]
 8003148:	687b      	ldr	r3, [r7, #4]
 800314a:	681b      	ldr	r3, [r3, #0]
 800314c:	681a      	ldr	r2, [r3, #0]
 800314e:	687b      	ldr	r3, [r7, #4]
 8003150:	681b      	ldr	r3, [r3, #0]
 8003152:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8003156:	601a      	str	r2, [r3, #0]
 8003158:	687b      	ldr	r3, [r7, #4]
 800315a:	681b      	ldr	r3, [r3, #0]
 800315c:	681a      	ldr	r2, [r3, #0]
 800315e:	687b      	ldr	r3, [r7, #4]
 8003160:	681b      	ldr	r3, [r3, #0]
 8003162:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8003166:	601a      	str	r2, [r3, #0]
 8003168:	f000 fd6c 	bl	8003c44 <HAL_RCC_GetPCLK1Freq>
 800316c:	60f8      	str	r0, [r7, #12]
 800316e:	687b      	ldr	r3, [r7, #4]
 8003170:	685b      	ldr	r3, [r3, #4]
 8003172:	4a81      	ldr	r2, [pc, #516]	@ (8003378 <HAL_I2C_Init+0x274>)
 8003174:	4293      	cmp	r3, r2
 8003176:	d807      	bhi.n	8003188 <HAL_I2C_Init+0x84>
 8003178:	68fb      	ldr	r3, [r7, #12]
 800317a:	4a80      	ldr	r2, [pc, #512]	@ (800337c <HAL_I2C_Init+0x278>)
 800317c:	4293      	cmp	r3, r2
 800317e:	bf94      	ite	ls
 8003180:	2301      	movls	r3, #1
 8003182:	2300      	movhi	r3, #0
 8003184:	b2db      	uxtb	r3, r3
 8003186:	e006      	b.n	8003196 <HAL_I2C_Init+0x92>
 8003188:	68fb      	ldr	r3, [r7, #12]
 800318a:	4a7d      	ldr	r2, [pc, #500]	@ (8003380 <HAL_I2C_Init+0x27c>)
 800318c:	4293      	cmp	r3, r2
 800318e:	bf94      	ite	ls
 8003190:	2301      	movls	r3, #1
 8003192:	2300      	movhi	r3, #0
 8003194:	b2db      	uxtb	r3, r3
 8003196:	2b00      	cmp	r3, #0
 8003198:	d001      	beq.n	800319e <HAL_I2C_Init+0x9a>
 800319a:	2301      	movs	r3, #1
 800319c:	e0e7      	b.n	800336e <HAL_I2C_Init+0x26a>
 800319e:	68fb      	ldr	r3, [r7, #12]
 80031a0:	4a78      	ldr	r2, [pc, #480]	@ (8003384 <HAL_I2C_Init+0x280>)
 80031a2:	fba2 2303 	umull	r2, r3, r2, r3
 80031a6:	0c9b      	lsrs	r3, r3, #18
 80031a8:	60bb      	str	r3, [r7, #8]
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	681b      	ldr	r3, [r3, #0]
 80031ae:	685b      	ldr	r3, [r3, #4]
 80031b0:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 80031b4:	687b      	ldr	r3, [r7, #4]
 80031b6:	681b      	ldr	r3, [r3, #0]
 80031b8:	68ba      	ldr	r2, [r7, #8]
 80031ba:	430a      	orrs	r2, r1
 80031bc:	605a      	str	r2, [r3, #4]
 80031be:	687b      	ldr	r3, [r7, #4]
 80031c0:	681b      	ldr	r3, [r3, #0]
 80031c2:	6a1b      	ldr	r3, [r3, #32]
 80031c4:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 80031c8:	687b      	ldr	r3, [r7, #4]
 80031ca:	685b      	ldr	r3, [r3, #4]
 80031cc:	4a6a      	ldr	r2, [pc, #424]	@ (8003378 <HAL_I2C_Init+0x274>)
 80031ce:	4293      	cmp	r3, r2
 80031d0:	d802      	bhi.n	80031d8 <HAL_I2C_Init+0xd4>
 80031d2:	68bb      	ldr	r3, [r7, #8]
 80031d4:	3301      	adds	r3, #1
 80031d6:	e009      	b.n	80031ec <HAL_I2C_Init+0xe8>
 80031d8:	68bb      	ldr	r3, [r7, #8]
 80031da:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 80031de:	fb02 f303 	mul.w	r3, r2, r3
 80031e2:	4a69      	ldr	r2, [pc, #420]	@ (8003388 <HAL_I2C_Init+0x284>)
 80031e4:	fba2 2303 	umull	r2, r3, r2, r3
 80031e8:	099b      	lsrs	r3, r3, #6
 80031ea:	3301      	adds	r3, #1
 80031ec:	687a      	ldr	r2, [r7, #4]
 80031ee:	6812      	ldr	r2, [r2, #0]
 80031f0:	430b      	orrs	r3, r1
 80031f2:	6213      	str	r3, [r2, #32]
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	681b      	ldr	r3, [r3, #0]
 80031f8:	69db      	ldr	r3, [r3, #28]
 80031fa:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 80031fe:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8003202:	687b      	ldr	r3, [r7, #4]
 8003204:	685b      	ldr	r3, [r3, #4]
 8003206:	495c      	ldr	r1, [pc, #368]	@ (8003378 <HAL_I2C_Init+0x274>)
 8003208:	428b      	cmp	r3, r1
 800320a:	d819      	bhi.n	8003240 <HAL_I2C_Init+0x13c>
 800320c:	68fb      	ldr	r3, [r7, #12]
 800320e:	1e59      	subs	r1, r3, #1
 8003210:	687b      	ldr	r3, [r7, #4]
 8003212:	685b      	ldr	r3, [r3, #4]
 8003214:	005b      	lsls	r3, r3, #1
 8003216:	fbb1 f3f3 	udiv	r3, r1, r3
 800321a:	1c59      	adds	r1, r3, #1
 800321c:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8003220:	400b      	ands	r3, r1
 8003222:	2b00      	cmp	r3, #0
 8003224:	d00a      	beq.n	800323c <HAL_I2C_Init+0x138>
 8003226:	68fb      	ldr	r3, [r7, #12]
 8003228:	1e59      	subs	r1, r3, #1
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	685b      	ldr	r3, [r3, #4]
 800322e:	005b      	lsls	r3, r3, #1
 8003230:	fbb1 f3f3 	udiv	r3, r1, r3
 8003234:	3301      	adds	r3, #1
 8003236:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800323a:	e051      	b.n	80032e0 <HAL_I2C_Init+0x1dc>
 800323c:	2304      	movs	r3, #4
 800323e:	e04f      	b.n	80032e0 <HAL_I2C_Init+0x1dc>
 8003240:	687b      	ldr	r3, [r7, #4]
 8003242:	689b      	ldr	r3, [r3, #8]
 8003244:	2b00      	cmp	r3, #0
 8003246:	d111      	bne.n	800326c <HAL_I2C_Init+0x168>
 8003248:	68fb      	ldr	r3, [r7, #12]
 800324a:	1e58      	subs	r0, r3, #1
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	6859      	ldr	r1, [r3, #4]
 8003250:	460b      	mov	r3, r1
 8003252:	005b      	lsls	r3, r3, #1
 8003254:	440b      	add	r3, r1
 8003256:	fbb0 f3f3 	udiv	r3, r0, r3
 800325a:	3301      	adds	r3, #1
 800325c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003260:	2b00      	cmp	r3, #0
 8003262:	bf0c      	ite	eq
 8003264:	2301      	moveq	r3, #1
 8003266:	2300      	movne	r3, #0
 8003268:	b2db      	uxtb	r3, r3
 800326a:	e012      	b.n	8003292 <HAL_I2C_Init+0x18e>
 800326c:	68fb      	ldr	r3, [r7, #12]
 800326e:	1e58      	subs	r0, r3, #1
 8003270:	687b      	ldr	r3, [r7, #4]
 8003272:	6859      	ldr	r1, [r3, #4]
 8003274:	460b      	mov	r3, r1
 8003276:	009b      	lsls	r3, r3, #2
 8003278:	440b      	add	r3, r1
 800327a:	0099      	lsls	r1, r3, #2
 800327c:	440b      	add	r3, r1
 800327e:	fbb0 f3f3 	udiv	r3, r0, r3
 8003282:	3301      	adds	r3, #1
 8003284:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8003288:	2b00      	cmp	r3, #0
 800328a:	bf0c      	ite	eq
 800328c:	2301      	moveq	r3, #1
 800328e:	2300      	movne	r3, #0
 8003290:	b2db      	uxtb	r3, r3
 8003292:	2b00      	cmp	r3, #0
 8003294:	d001      	beq.n	800329a <HAL_I2C_Init+0x196>
 8003296:	2301      	movs	r3, #1
 8003298:	e022      	b.n	80032e0 <HAL_I2C_Init+0x1dc>
 800329a:	687b      	ldr	r3, [r7, #4]
 800329c:	689b      	ldr	r3, [r3, #8]
 800329e:	2b00      	cmp	r3, #0
 80032a0:	d10e      	bne.n	80032c0 <HAL_I2C_Init+0x1bc>
 80032a2:	68fb      	ldr	r3, [r7, #12]
 80032a4:	1e58      	subs	r0, r3, #1
 80032a6:	687b      	ldr	r3, [r7, #4]
 80032a8:	6859      	ldr	r1, [r3, #4]
 80032aa:	460b      	mov	r3, r1
 80032ac:	005b      	lsls	r3, r3, #1
 80032ae:	440b      	add	r3, r1
 80032b0:	fbb0 f3f3 	udiv	r3, r0, r3
 80032b4:	3301      	adds	r3, #1
 80032b6:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80032ba:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 80032be:	e00f      	b.n	80032e0 <HAL_I2C_Init+0x1dc>
 80032c0:	68fb      	ldr	r3, [r7, #12]
 80032c2:	1e58      	subs	r0, r3, #1
 80032c4:	687b      	ldr	r3, [r7, #4]
 80032c6:	6859      	ldr	r1, [r3, #4]
 80032c8:	460b      	mov	r3, r1
 80032ca:	009b      	lsls	r3, r3, #2
 80032cc:	440b      	add	r3, r1
 80032ce:	0099      	lsls	r1, r3, #2
 80032d0:	440b      	add	r3, r1
 80032d2:	fbb0 f3f3 	udiv	r3, r0, r3
 80032d6:	3301      	adds	r3, #1
 80032d8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80032dc:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80032e0:	6879      	ldr	r1, [r7, #4]
 80032e2:	6809      	ldr	r1, [r1, #0]
 80032e4:	4313      	orrs	r3, r2
 80032e6:	61cb      	str	r3, [r1, #28]
 80032e8:	687b      	ldr	r3, [r7, #4]
 80032ea:	681b      	ldr	r3, [r3, #0]
 80032ec:	681b      	ldr	r3, [r3, #0]
 80032ee:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	69da      	ldr	r2, [r3, #28]
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	6a1b      	ldr	r3, [r3, #32]
 80032fa:	431a      	orrs	r2, r3
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	430a      	orrs	r2, r1
 8003302:	601a      	str	r2, [r3, #0]
 8003304:	687b      	ldr	r3, [r7, #4]
 8003306:	681b      	ldr	r3, [r3, #0]
 8003308:	689b      	ldr	r3, [r3, #8]
 800330a:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 800330e:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8003312:	687a      	ldr	r2, [r7, #4]
 8003314:	6911      	ldr	r1, [r2, #16]
 8003316:	687a      	ldr	r2, [r7, #4]
 8003318:	68d2      	ldr	r2, [r2, #12]
 800331a:	4311      	orrs	r1, r2
 800331c:	687a      	ldr	r2, [r7, #4]
 800331e:	6812      	ldr	r2, [r2, #0]
 8003320:	430b      	orrs	r3, r1
 8003322:	6093      	str	r3, [r2, #8]
 8003324:	687b      	ldr	r3, [r7, #4]
 8003326:	681b      	ldr	r3, [r3, #0]
 8003328:	68db      	ldr	r3, [r3, #12]
 800332a:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 800332e:	687b      	ldr	r3, [r7, #4]
 8003330:	695a      	ldr	r2, [r3, #20]
 8003332:	687b      	ldr	r3, [r7, #4]
 8003334:	699b      	ldr	r3, [r3, #24]
 8003336:	431a      	orrs	r2, r3
 8003338:	687b      	ldr	r3, [r7, #4]
 800333a:	681b      	ldr	r3, [r3, #0]
 800333c:	430a      	orrs	r2, r1
 800333e:	60da      	str	r2, [r3, #12]
 8003340:	687b      	ldr	r3, [r7, #4]
 8003342:	681b      	ldr	r3, [r3, #0]
 8003344:	681a      	ldr	r2, [r3, #0]
 8003346:	687b      	ldr	r3, [r7, #4]
 8003348:	681b      	ldr	r3, [r3, #0]
 800334a:	f042 0201 	orr.w	r2, r2, #1
 800334e:	601a      	str	r2, [r3, #0]
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	2200      	movs	r2, #0
 8003354:	641a      	str	r2, [r3, #64]	@ 0x40
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	2220      	movs	r2, #32
 800335a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	2200      	movs	r2, #0
 8003362:	631a      	str	r2, [r3, #48]	@ 0x30
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	2200      	movs	r2, #0
 8003368:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800336c:	2300      	movs	r3, #0
 800336e:	4618      	mov	r0, r3
 8003370:	3710      	adds	r7, #16
 8003372:	46bd      	mov	sp, r7
 8003374:	bd80      	pop	{r7, pc}
 8003376:	bf00      	nop
 8003378:	000186a0 	.word	0x000186a0
 800337c:	001e847f 	.word	0x001e847f
 8003380:	003d08ff 	.word	0x003d08ff
 8003384:	431bde83 	.word	0x431bde83
 8003388:	10624dd3 	.word	0x10624dd3

0800338c <HAL_I2C_Mem_Write>:
 800338c:	b580      	push	{r7, lr}
 800338e:	b088      	sub	sp, #32
 8003390:	af02      	add	r7, sp, #8
 8003392:	60f8      	str	r0, [r7, #12]
 8003394:	4608      	mov	r0, r1
 8003396:	4611      	mov	r1, r2
 8003398:	461a      	mov	r2, r3
 800339a:	4603      	mov	r3, r0
 800339c:	817b      	strh	r3, [r7, #10]
 800339e:	460b      	mov	r3, r1
 80033a0:	813b      	strh	r3, [r7, #8]
 80033a2:	4613      	mov	r3, r2
 80033a4:	80fb      	strh	r3, [r7, #6]
 80033a6:	f7ff fbbd 	bl	8002b24 <HAL_GetTick>
 80033aa:	6178      	str	r0, [r7, #20]
 80033ac:	68fb      	ldr	r3, [r7, #12]
 80033ae:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 80033b2:	b2db      	uxtb	r3, r3
 80033b4:	2b20      	cmp	r3, #32
 80033b6:	f040 80d9 	bne.w	800356c <HAL_I2C_Mem_Write+0x1e0>
 80033ba:	697b      	ldr	r3, [r7, #20]
 80033bc:	9300      	str	r3, [sp, #0]
 80033be:	2319      	movs	r3, #25
 80033c0:	2201      	movs	r2, #1
 80033c2:	496d      	ldr	r1, [pc, #436]	@ (8003578 <HAL_I2C_Mem_Write+0x1ec>)
 80033c4:	68f8      	ldr	r0, [r7, #12]
 80033c6:	f000 f971 	bl	80036ac <I2C_WaitOnFlagUntilTimeout>
 80033ca:	4603      	mov	r3, r0
 80033cc:	2b00      	cmp	r3, #0
 80033ce:	d001      	beq.n	80033d4 <HAL_I2C_Mem_Write+0x48>
 80033d0:	2302      	movs	r3, #2
 80033d2:	e0cc      	b.n	800356e <HAL_I2C_Mem_Write+0x1e2>
 80033d4:	68fb      	ldr	r3, [r7, #12]
 80033d6:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80033da:	2b01      	cmp	r3, #1
 80033dc:	d101      	bne.n	80033e2 <HAL_I2C_Mem_Write+0x56>
 80033de:	2302      	movs	r3, #2
 80033e0:	e0c5      	b.n	800356e <HAL_I2C_Mem_Write+0x1e2>
 80033e2:	68fb      	ldr	r3, [r7, #12]
 80033e4:	2201      	movs	r2, #1
 80033e6:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80033ea:	68fb      	ldr	r3, [r7, #12]
 80033ec:	681b      	ldr	r3, [r3, #0]
 80033ee:	681b      	ldr	r3, [r3, #0]
 80033f0:	f003 0301 	and.w	r3, r3, #1
 80033f4:	2b01      	cmp	r3, #1
 80033f6:	d007      	beq.n	8003408 <HAL_I2C_Mem_Write+0x7c>
 80033f8:	68fb      	ldr	r3, [r7, #12]
 80033fa:	681b      	ldr	r3, [r3, #0]
 80033fc:	681a      	ldr	r2, [r3, #0]
 80033fe:	68fb      	ldr	r3, [r7, #12]
 8003400:	681b      	ldr	r3, [r3, #0]
 8003402:	f042 0201 	orr.w	r2, r2, #1
 8003406:	601a      	str	r2, [r3, #0]
 8003408:	68fb      	ldr	r3, [r7, #12]
 800340a:	681b      	ldr	r3, [r3, #0]
 800340c:	681a      	ldr	r2, [r3, #0]
 800340e:	68fb      	ldr	r3, [r7, #12]
 8003410:	681b      	ldr	r3, [r3, #0]
 8003412:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8003416:	601a      	str	r2, [r3, #0]
 8003418:	68fb      	ldr	r3, [r7, #12]
 800341a:	2221      	movs	r2, #33	@ 0x21
 800341c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003420:	68fb      	ldr	r3, [r7, #12]
 8003422:	2240      	movs	r2, #64	@ 0x40
 8003424:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003428:	68fb      	ldr	r3, [r7, #12]
 800342a:	2200      	movs	r2, #0
 800342c:	641a      	str	r2, [r3, #64]	@ 0x40
 800342e:	68fb      	ldr	r3, [r7, #12]
 8003430:	6a3a      	ldr	r2, [r7, #32]
 8003432:	625a      	str	r2, [r3, #36]	@ 0x24
 8003434:	68fb      	ldr	r3, [r7, #12]
 8003436:	8cba      	ldrh	r2, [r7, #36]	@ 0x24
 8003438:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800343a:	68fb      	ldr	r3, [r7, #12]
 800343c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800343e:	b29a      	uxth	r2, r3
 8003440:	68fb      	ldr	r3, [r7, #12]
 8003442:	851a      	strh	r2, [r3, #40]	@ 0x28
 8003444:	68fb      	ldr	r3, [r7, #12]
 8003446:	4a4d      	ldr	r2, [pc, #308]	@ (800357c <HAL_I2C_Mem_Write+0x1f0>)
 8003448:	62da      	str	r2, [r3, #44]	@ 0x2c
 800344a:	88f8      	ldrh	r0, [r7, #6]
 800344c:	893a      	ldrh	r2, [r7, #8]
 800344e:	8979      	ldrh	r1, [r7, #10]
 8003450:	697b      	ldr	r3, [r7, #20]
 8003452:	9301      	str	r3, [sp, #4]
 8003454:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003456:	9300      	str	r3, [sp, #0]
 8003458:	4603      	mov	r3, r0
 800345a:	68f8      	ldr	r0, [r7, #12]
 800345c:	f000 f890 	bl	8003580 <I2C_RequestMemoryWrite>
 8003460:	4603      	mov	r3, r0
 8003462:	2b00      	cmp	r3, #0
 8003464:	d052      	beq.n	800350c <HAL_I2C_Mem_Write+0x180>
 8003466:	2301      	movs	r3, #1
 8003468:	e081      	b.n	800356e <HAL_I2C_Mem_Write+0x1e2>
 800346a:	697a      	ldr	r2, [r7, #20]
 800346c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 800346e:	68f8      	ldr	r0, [r7, #12]
 8003470:	f000 fa36 	bl	80038e0 <I2C_WaitOnTXEFlagUntilTimeout>
 8003474:	4603      	mov	r3, r0
 8003476:	2b00      	cmp	r3, #0
 8003478:	d00d      	beq.n	8003496 <HAL_I2C_Mem_Write+0x10a>
 800347a:	68fb      	ldr	r3, [r7, #12]
 800347c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800347e:	2b04      	cmp	r3, #4
 8003480:	d107      	bne.n	8003492 <HAL_I2C_Mem_Write+0x106>
 8003482:	68fb      	ldr	r3, [r7, #12]
 8003484:	681b      	ldr	r3, [r3, #0]
 8003486:	681a      	ldr	r2, [r3, #0]
 8003488:	68fb      	ldr	r3, [r7, #12]
 800348a:	681b      	ldr	r3, [r3, #0]
 800348c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003490:	601a      	str	r2, [r3, #0]
 8003492:	2301      	movs	r3, #1
 8003494:	e06b      	b.n	800356e <HAL_I2C_Mem_Write+0x1e2>
 8003496:	68fb      	ldr	r3, [r7, #12]
 8003498:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800349a:	781a      	ldrb	r2, [r3, #0]
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	681b      	ldr	r3, [r3, #0]
 80034a0:	611a      	str	r2, [r3, #16]
 80034a2:	68fb      	ldr	r3, [r7, #12]
 80034a4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034a6:	1c5a      	adds	r2, r3, #1
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	625a      	str	r2, [r3, #36]	@ 0x24
 80034ac:	68fb      	ldr	r3, [r7, #12]
 80034ae:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034b0:	3b01      	subs	r3, #1
 80034b2:	b29a      	uxth	r2, r3
 80034b4:	68fb      	ldr	r3, [r7, #12]
 80034b6:	851a      	strh	r2, [r3, #40]	@ 0x28
 80034b8:	68fb      	ldr	r3, [r7, #12]
 80034ba:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80034bc:	b29b      	uxth	r3, r3
 80034be:	3b01      	subs	r3, #1
 80034c0:	b29a      	uxth	r2, r3
 80034c2:	68fb      	ldr	r3, [r7, #12]
 80034c4:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80034c6:	68fb      	ldr	r3, [r7, #12]
 80034c8:	681b      	ldr	r3, [r3, #0]
 80034ca:	695b      	ldr	r3, [r3, #20]
 80034cc:	f003 0304 	and.w	r3, r3, #4
 80034d0:	2b04      	cmp	r3, #4
 80034d2:	d11b      	bne.n	800350c <HAL_I2C_Mem_Write+0x180>
 80034d4:	68fb      	ldr	r3, [r7, #12]
 80034d6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034d8:	2b00      	cmp	r3, #0
 80034da:	d017      	beq.n	800350c <HAL_I2C_Mem_Write+0x180>
 80034dc:	68fb      	ldr	r3, [r7, #12]
 80034de:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034e0:	781a      	ldrb	r2, [r3, #0]
 80034e2:	68fb      	ldr	r3, [r7, #12]
 80034e4:	681b      	ldr	r3, [r3, #0]
 80034e6:	611a      	str	r2, [r3, #16]
 80034e8:	68fb      	ldr	r3, [r7, #12]
 80034ea:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80034ec:	1c5a      	adds	r2, r3, #1
 80034ee:	68fb      	ldr	r3, [r7, #12]
 80034f0:	625a      	str	r2, [r3, #36]	@ 0x24
 80034f2:	68fb      	ldr	r3, [r7, #12]
 80034f4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80034f6:	3b01      	subs	r3, #1
 80034f8:	b29a      	uxth	r2, r3
 80034fa:	68fb      	ldr	r3, [r7, #12]
 80034fc:	851a      	strh	r2, [r3, #40]	@ 0x28
 80034fe:	68fb      	ldr	r3, [r7, #12]
 8003500:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003502:	b29b      	uxth	r3, r3
 8003504:	3b01      	subs	r3, #1
 8003506:	b29a      	uxth	r2, r3
 8003508:	68fb      	ldr	r3, [r7, #12]
 800350a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 800350c:	68fb      	ldr	r3, [r7, #12]
 800350e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003510:	2b00      	cmp	r3, #0
 8003512:	d1aa      	bne.n	800346a <HAL_I2C_Mem_Write+0xde>
 8003514:	697a      	ldr	r2, [r7, #20]
 8003516:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003518:	68f8      	ldr	r0, [r7, #12]
 800351a:	f000 fa29 	bl	8003970 <I2C_WaitOnBTFFlagUntilTimeout>
 800351e:	4603      	mov	r3, r0
 8003520:	2b00      	cmp	r3, #0
 8003522:	d00d      	beq.n	8003540 <HAL_I2C_Mem_Write+0x1b4>
 8003524:	68fb      	ldr	r3, [r7, #12]
 8003526:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003528:	2b04      	cmp	r3, #4
 800352a:	d107      	bne.n	800353c <HAL_I2C_Mem_Write+0x1b0>
 800352c:	68fb      	ldr	r3, [r7, #12]
 800352e:	681b      	ldr	r3, [r3, #0]
 8003530:	681a      	ldr	r2, [r3, #0]
 8003532:	68fb      	ldr	r3, [r7, #12]
 8003534:	681b      	ldr	r3, [r3, #0]
 8003536:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800353a:	601a      	str	r2, [r3, #0]
 800353c:	2301      	movs	r3, #1
 800353e:	e016      	b.n	800356e <HAL_I2C_Mem_Write+0x1e2>
 8003540:	68fb      	ldr	r3, [r7, #12]
 8003542:	681b      	ldr	r3, [r3, #0]
 8003544:	681a      	ldr	r2, [r3, #0]
 8003546:	68fb      	ldr	r3, [r7, #12]
 8003548:	681b      	ldr	r3, [r3, #0]
 800354a:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800354e:	601a      	str	r2, [r3, #0]
 8003550:	68fb      	ldr	r3, [r7, #12]
 8003552:	2220      	movs	r2, #32
 8003554:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003558:	68fb      	ldr	r3, [r7, #12]
 800355a:	2200      	movs	r2, #0
 800355c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003560:	68fb      	ldr	r3, [r7, #12]
 8003562:	2200      	movs	r2, #0
 8003564:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003568:	2300      	movs	r3, #0
 800356a:	e000      	b.n	800356e <HAL_I2C_Mem_Write+0x1e2>
 800356c:	2302      	movs	r3, #2
 800356e:	4618      	mov	r0, r3
 8003570:	3718      	adds	r7, #24
 8003572:	46bd      	mov	sp, r7
 8003574:	bd80      	pop	{r7, pc}
 8003576:	bf00      	nop
 8003578:	00100002 	.word	0x00100002
 800357c:	ffff0000 	.word	0xffff0000

08003580 <I2C_RequestMemoryWrite>:
 8003580:	b580      	push	{r7, lr}
 8003582:	b088      	sub	sp, #32
 8003584:	af02      	add	r7, sp, #8
 8003586:	60f8      	str	r0, [r7, #12]
 8003588:	4608      	mov	r0, r1
 800358a:	4611      	mov	r1, r2
 800358c:	461a      	mov	r2, r3
 800358e:	4603      	mov	r3, r0
 8003590:	817b      	strh	r3, [r7, #10]
 8003592:	460b      	mov	r3, r1
 8003594:	813b      	strh	r3, [r7, #8]
 8003596:	4613      	mov	r3, r2
 8003598:	80fb      	strh	r3, [r7, #6]
 800359a:	68fb      	ldr	r3, [r7, #12]
 800359c:	681b      	ldr	r3, [r3, #0]
 800359e:	681a      	ldr	r2, [r3, #0]
 80035a0:	68fb      	ldr	r3, [r7, #12]
 80035a2:	681b      	ldr	r3, [r3, #0]
 80035a4:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 80035a8:	601a      	str	r2, [r3, #0]
 80035aa:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80035ac:	9300      	str	r3, [sp, #0]
 80035ae:	6a3b      	ldr	r3, [r7, #32]
 80035b0:	2200      	movs	r2, #0
 80035b2:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 80035b6:	68f8      	ldr	r0, [r7, #12]
 80035b8:	f000 f878 	bl	80036ac <I2C_WaitOnFlagUntilTimeout>
 80035bc:	4603      	mov	r3, r0
 80035be:	2b00      	cmp	r3, #0
 80035c0:	d00d      	beq.n	80035de <I2C_RequestMemoryWrite+0x5e>
 80035c2:	68fb      	ldr	r3, [r7, #12]
 80035c4:	681b      	ldr	r3, [r3, #0]
 80035c6:	681b      	ldr	r3, [r3, #0]
 80035c8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80035cc:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80035d0:	d103      	bne.n	80035da <I2C_RequestMemoryWrite+0x5a>
 80035d2:	68fb      	ldr	r3, [r7, #12]
 80035d4:	f44f 7200 	mov.w	r2, #512	@ 0x200
 80035d8:	641a      	str	r2, [r3, #64]	@ 0x40
 80035da:	2303      	movs	r3, #3
 80035dc:	e05f      	b.n	800369e <I2C_RequestMemoryWrite+0x11e>
 80035de:	897b      	ldrh	r3, [r7, #10]
 80035e0:	b2db      	uxtb	r3, r3
 80035e2:	461a      	mov	r2, r3
 80035e4:	68fb      	ldr	r3, [r7, #12]
 80035e6:	681b      	ldr	r3, [r3, #0]
 80035e8:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 80035ec:	611a      	str	r2, [r3, #16]
 80035ee:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80035f0:	6a3a      	ldr	r2, [r7, #32]
 80035f2:	492d      	ldr	r1, [pc, #180]	@ (80036a8 <I2C_RequestMemoryWrite+0x128>)
 80035f4:	68f8      	ldr	r0, [r7, #12]
 80035f6:	f000 f8d3 	bl	80037a0 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80035fa:	4603      	mov	r3, r0
 80035fc:	2b00      	cmp	r3, #0
 80035fe:	d001      	beq.n	8003604 <I2C_RequestMemoryWrite+0x84>
 8003600:	2301      	movs	r3, #1
 8003602:	e04c      	b.n	800369e <I2C_RequestMemoryWrite+0x11e>
 8003604:	2300      	movs	r3, #0
 8003606:	617b      	str	r3, [r7, #20]
 8003608:	68fb      	ldr	r3, [r7, #12]
 800360a:	681b      	ldr	r3, [r3, #0]
 800360c:	695b      	ldr	r3, [r3, #20]
 800360e:	617b      	str	r3, [r7, #20]
 8003610:	68fb      	ldr	r3, [r7, #12]
 8003612:	681b      	ldr	r3, [r3, #0]
 8003614:	699b      	ldr	r3, [r3, #24]
 8003616:	617b      	str	r3, [r7, #20]
 8003618:	697b      	ldr	r3, [r7, #20]
 800361a:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800361c:	6a39      	ldr	r1, [r7, #32]
 800361e:	68f8      	ldr	r0, [r7, #12]
 8003620:	f000 f95e 	bl	80038e0 <I2C_WaitOnTXEFlagUntilTimeout>
 8003624:	4603      	mov	r3, r0
 8003626:	2b00      	cmp	r3, #0
 8003628:	d00d      	beq.n	8003646 <I2C_RequestMemoryWrite+0xc6>
 800362a:	68fb      	ldr	r3, [r7, #12]
 800362c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800362e:	2b04      	cmp	r3, #4
 8003630:	d107      	bne.n	8003642 <I2C_RequestMemoryWrite+0xc2>
 8003632:	68fb      	ldr	r3, [r7, #12]
 8003634:	681b      	ldr	r3, [r3, #0]
 8003636:	681a      	ldr	r2, [r3, #0]
 8003638:	68fb      	ldr	r3, [r7, #12]
 800363a:	681b      	ldr	r3, [r3, #0]
 800363c:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8003640:	601a      	str	r2, [r3, #0]
 8003642:	2301      	movs	r3, #1
 8003644:	e02b      	b.n	800369e <I2C_RequestMemoryWrite+0x11e>
 8003646:	88fb      	ldrh	r3, [r7, #6]
 8003648:	2b01      	cmp	r3, #1
 800364a:	d105      	bne.n	8003658 <I2C_RequestMemoryWrite+0xd8>
 800364c:	893b      	ldrh	r3, [r7, #8]
 800364e:	b2da      	uxtb	r2, r3
 8003650:	68fb      	ldr	r3, [r7, #12]
 8003652:	681b      	ldr	r3, [r3, #0]
 8003654:	611a      	str	r2, [r3, #16]
 8003656:	e021      	b.n	800369c <I2C_RequestMemoryWrite+0x11c>
 8003658:	893b      	ldrh	r3, [r7, #8]
 800365a:	0a1b      	lsrs	r3, r3, #8
 800365c:	b29b      	uxth	r3, r3
 800365e:	b2da      	uxtb	r2, r3
 8003660:	68fb      	ldr	r3, [r7, #12]
 8003662:	681b      	ldr	r3, [r3, #0]
 8003664:	611a      	str	r2, [r3, #16]
 8003666:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003668:	6a39      	ldr	r1, [r7, #32]
 800366a:	68f8      	ldr	r0, [r7, #12]
 800366c:	f000 f938 	bl	80038e0 <I2C_WaitOnTXEFlagUntilTimeout>
 8003670:	4603      	mov	r3, r0
 8003672:	2b00      	cmp	r3, #0
 8003674:	d00d      	beq.n	8003692 <I2C_RequestMemoryWrite+0x112>
 8003676:	68fb      	ldr	r3, [r7, #12]
 8003678:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800367a:	2b04      	cmp	r3, #4
 800367c:	d107      	bne.n	800368e <I2C_RequestMemoryWrite+0x10e>
 800367e:	68fb      	ldr	r3, [r7, #12]
 8003680:	681b      	ldr	r3, [r3, #0]
 8003682:	681a      	ldr	r2, [r3, #0]
 8003684:	68fb      	ldr	r3, [r7, #12]
 8003686:	681b      	ldr	r3, [r3, #0]
 8003688:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800368c:	601a      	str	r2, [r3, #0]
 800368e:	2301      	movs	r3, #1
 8003690:	e005      	b.n	800369e <I2C_RequestMemoryWrite+0x11e>
 8003692:	893b      	ldrh	r3, [r7, #8]
 8003694:	b2da      	uxtb	r2, r3
 8003696:	68fb      	ldr	r3, [r7, #12]
 8003698:	681b      	ldr	r3, [r3, #0]
 800369a:	611a      	str	r2, [r3, #16]
 800369c:	2300      	movs	r3, #0
 800369e:	4618      	mov	r0, r3
 80036a0:	3718      	adds	r7, #24
 80036a2:	46bd      	mov	sp, r7
 80036a4:	bd80      	pop	{r7, pc}
 80036a6:	bf00      	nop
 80036a8:	00010002 	.word	0x00010002

080036ac <I2C_WaitOnFlagUntilTimeout>:
 80036ac:	b580      	push	{r7, lr}
 80036ae:	b084      	sub	sp, #16
 80036b0:	af00      	add	r7, sp, #0
 80036b2:	60f8      	str	r0, [r7, #12]
 80036b4:	60b9      	str	r1, [r7, #8]
 80036b6:	603b      	str	r3, [r7, #0]
 80036b8:	4613      	mov	r3, r2
 80036ba:	71fb      	strb	r3, [r7, #7]
 80036bc:	e048      	b.n	8003750 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80036be:	683b      	ldr	r3, [r7, #0]
 80036c0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80036c4:	d044      	beq.n	8003750 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80036c6:	f7ff fa2d 	bl	8002b24 <HAL_GetTick>
 80036ca:	4602      	mov	r2, r0
 80036cc:	69bb      	ldr	r3, [r7, #24]
 80036ce:	1ad3      	subs	r3, r2, r3
 80036d0:	683a      	ldr	r2, [r7, #0]
 80036d2:	429a      	cmp	r2, r3
 80036d4:	d302      	bcc.n	80036dc <I2C_WaitOnFlagUntilTimeout+0x30>
 80036d6:	683b      	ldr	r3, [r7, #0]
 80036d8:	2b00      	cmp	r3, #0
 80036da:	d139      	bne.n	8003750 <I2C_WaitOnFlagUntilTimeout+0xa4>
 80036dc:	68bb      	ldr	r3, [r7, #8]
 80036de:	0c1b      	lsrs	r3, r3, #16
 80036e0:	b2db      	uxtb	r3, r3
 80036e2:	2b01      	cmp	r3, #1
 80036e4:	d10d      	bne.n	8003702 <I2C_WaitOnFlagUntilTimeout+0x56>
 80036e6:	68fb      	ldr	r3, [r7, #12]
 80036e8:	681b      	ldr	r3, [r3, #0]
 80036ea:	695b      	ldr	r3, [r3, #20]
 80036ec:	43da      	mvns	r2, r3
 80036ee:	68bb      	ldr	r3, [r7, #8]
 80036f0:	4013      	ands	r3, r2
 80036f2:	b29b      	uxth	r3, r3
 80036f4:	2b00      	cmp	r3, #0
 80036f6:	bf0c      	ite	eq
 80036f8:	2301      	moveq	r3, #1
 80036fa:	2300      	movne	r3, #0
 80036fc:	b2db      	uxtb	r3, r3
 80036fe:	461a      	mov	r2, r3
 8003700:	e00c      	b.n	800371c <I2C_WaitOnFlagUntilTimeout+0x70>
 8003702:	68fb      	ldr	r3, [r7, #12]
 8003704:	681b      	ldr	r3, [r3, #0]
 8003706:	699b      	ldr	r3, [r3, #24]
 8003708:	43da      	mvns	r2, r3
 800370a:	68bb      	ldr	r3, [r7, #8]
 800370c:	4013      	ands	r3, r2
 800370e:	b29b      	uxth	r3, r3
 8003710:	2b00      	cmp	r3, #0
 8003712:	bf0c      	ite	eq
 8003714:	2301      	moveq	r3, #1
 8003716:	2300      	movne	r3, #0
 8003718:	b2db      	uxtb	r3, r3
 800371a:	461a      	mov	r2, r3
 800371c:	79fb      	ldrb	r3, [r7, #7]
 800371e:	429a      	cmp	r2, r3
 8003720:	d116      	bne.n	8003750 <I2C_WaitOnFlagUntilTimeout+0xa4>
 8003722:	68fb      	ldr	r3, [r7, #12]
 8003724:	2200      	movs	r2, #0
 8003726:	631a      	str	r2, [r3, #48]	@ 0x30
 8003728:	68fb      	ldr	r3, [r7, #12]
 800372a:	2220      	movs	r2, #32
 800372c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003730:	68fb      	ldr	r3, [r7, #12]
 8003732:	2200      	movs	r2, #0
 8003734:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003738:	68fb      	ldr	r3, [r7, #12]
 800373a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800373c:	f043 0220 	orr.w	r2, r3, #32
 8003740:	68fb      	ldr	r3, [r7, #12]
 8003742:	641a      	str	r2, [r3, #64]	@ 0x40
 8003744:	68fb      	ldr	r3, [r7, #12]
 8003746:	2200      	movs	r2, #0
 8003748:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 800374c:	2301      	movs	r3, #1
 800374e:	e023      	b.n	8003798 <I2C_WaitOnFlagUntilTimeout+0xec>
 8003750:	68bb      	ldr	r3, [r7, #8]
 8003752:	0c1b      	lsrs	r3, r3, #16
 8003754:	b2db      	uxtb	r3, r3
 8003756:	2b01      	cmp	r3, #1
 8003758:	d10d      	bne.n	8003776 <I2C_WaitOnFlagUntilTimeout+0xca>
 800375a:	68fb      	ldr	r3, [r7, #12]
 800375c:	681b      	ldr	r3, [r3, #0]
 800375e:	695b      	ldr	r3, [r3, #20]
 8003760:	43da      	mvns	r2, r3
 8003762:	68bb      	ldr	r3, [r7, #8]
 8003764:	4013      	ands	r3, r2
 8003766:	b29b      	uxth	r3, r3
 8003768:	2b00      	cmp	r3, #0
 800376a:	bf0c      	ite	eq
 800376c:	2301      	moveq	r3, #1
 800376e:	2300      	movne	r3, #0
 8003770:	b2db      	uxtb	r3, r3
 8003772:	461a      	mov	r2, r3
 8003774:	e00c      	b.n	8003790 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8003776:	68fb      	ldr	r3, [r7, #12]
 8003778:	681b      	ldr	r3, [r3, #0]
 800377a:	699b      	ldr	r3, [r3, #24]
 800377c:	43da      	mvns	r2, r3
 800377e:	68bb      	ldr	r3, [r7, #8]
 8003780:	4013      	ands	r3, r2
 8003782:	b29b      	uxth	r3, r3
 8003784:	2b00      	cmp	r3, #0
 8003786:	bf0c      	ite	eq
 8003788:	2301      	moveq	r3, #1
 800378a:	2300      	movne	r3, #0
 800378c:	b2db      	uxtb	r3, r3
 800378e:	461a      	mov	r2, r3
 8003790:	79fb      	ldrb	r3, [r7, #7]
 8003792:	429a      	cmp	r2, r3
 8003794:	d093      	beq.n	80036be <I2C_WaitOnFlagUntilTimeout+0x12>
 8003796:	2300      	movs	r3, #0
 8003798:	4618      	mov	r0, r3
 800379a:	3710      	adds	r7, #16
 800379c:	46bd      	mov	sp, r7
 800379e:	bd80      	pop	{r7, pc}

080037a0 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
 80037a0:	b580      	push	{r7, lr}
 80037a2:	b084      	sub	sp, #16
 80037a4:	af00      	add	r7, sp, #0
 80037a6:	60f8      	str	r0, [r7, #12]
 80037a8:	60b9      	str	r1, [r7, #8]
 80037aa:	607a      	str	r2, [r7, #4]
 80037ac:	603b      	str	r3, [r7, #0]
 80037ae:	e071      	b.n	8003894 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 80037b0:	68fb      	ldr	r3, [r7, #12]
 80037b2:	681b      	ldr	r3, [r3, #0]
 80037b4:	695b      	ldr	r3, [r3, #20]
 80037b6:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 80037ba:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 80037be:	d123      	bne.n	8003808 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
 80037c0:	68fb      	ldr	r3, [r7, #12]
 80037c2:	681b      	ldr	r3, [r3, #0]
 80037c4:	681a      	ldr	r2, [r3, #0]
 80037c6:	68fb      	ldr	r3, [r7, #12]
 80037c8:	681b      	ldr	r3, [r3, #0]
 80037ca:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80037ce:	601a      	str	r2, [r3, #0]
 80037d0:	68fb      	ldr	r3, [r7, #12]
 80037d2:	681b      	ldr	r3, [r3, #0]
 80037d4:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 80037d8:	615a      	str	r2, [r3, #20]
 80037da:	68fb      	ldr	r3, [r7, #12]
 80037dc:	2200      	movs	r2, #0
 80037de:	631a      	str	r2, [r3, #48]	@ 0x30
 80037e0:	68fb      	ldr	r3, [r7, #12]
 80037e2:	2220      	movs	r2, #32
 80037e4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80037e8:	68fb      	ldr	r3, [r7, #12]
 80037ea:	2200      	movs	r2, #0
 80037ec:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80037f0:	68fb      	ldr	r3, [r7, #12]
 80037f2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80037f4:	f043 0204 	orr.w	r2, r3, #4
 80037f8:	68fb      	ldr	r3, [r7, #12]
 80037fa:	641a      	str	r2, [r3, #64]	@ 0x40
 80037fc:	68fb      	ldr	r3, [r7, #12]
 80037fe:	2200      	movs	r2, #0
 8003800:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003804:	2301      	movs	r3, #1
 8003806:	e067      	b.n	80038d8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800380e:	d041      	beq.n	8003894 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003810:	f7ff f988 	bl	8002b24 <HAL_GetTick>
 8003814:	4602      	mov	r2, r0
 8003816:	683b      	ldr	r3, [r7, #0]
 8003818:	1ad3      	subs	r3, r2, r3
 800381a:	687a      	ldr	r2, [r7, #4]
 800381c:	429a      	cmp	r2, r3
 800381e:	d302      	bcc.n	8003826 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8003820:	687b      	ldr	r3, [r7, #4]
 8003822:	2b00      	cmp	r3, #0
 8003824:	d136      	bne.n	8003894 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003826:	68bb      	ldr	r3, [r7, #8]
 8003828:	0c1b      	lsrs	r3, r3, #16
 800382a:	b2db      	uxtb	r3, r3
 800382c:	2b01      	cmp	r3, #1
 800382e:	d10c      	bne.n	800384a <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8003830:	68fb      	ldr	r3, [r7, #12]
 8003832:	681b      	ldr	r3, [r3, #0]
 8003834:	695b      	ldr	r3, [r3, #20]
 8003836:	43da      	mvns	r2, r3
 8003838:	68bb      	ldr	r3, [r7, #8]
 800383a:	4013      	ands	r3, r2
 800383c:	b29b      	uxth	r3, r3
 800383e:	2b00      	cmp	r3, #0
 8003840:	bf14      	ite	ne
 8003842:	2301      	movne	r3, #1
 8003844:	2300      	moveq	r3, #0
 8003846:	b2db      	uxtb	r3, r3
 8003848:	e00b      	b.n	8003862 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 800384a:	68fb      	ldr	r3, [r7, #12]
 800384c:	681b      	ldr	r3, [r3, #0]
 800384e:	699b      	ldr	r3, [r3, #24]
 8003850:	43da      	mvns	r2, r3
 8003852:	68bb      	ldr	r3, [r7, #8]
 8003854:	4013      	ands	r3, r2
 8003856:	b29b      	uxth	r3, r3
 8003858:	2b00      	cmp	r3, #0
 800385a:	bf14      	ite	ne
 800385c:	2301      	movne	r3, #1
 800385e:	2300      	moveq	r3, #0
 8003860:	b2db      	uxtb	r3, r3
 8003862:	2b00      	cmp	r3, #0
 8003864:	d016      	beq.n	8003894 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
 8003866:	68fb      	ldr	r3, [r7, #12]
 8003868:	2200      	movs	r2, #0
 800386a:	631a      	str	r2, [r3, #48]	@ 0x30
 800386c:	68fb      	ldr	r3, [r7, #12]
 800386e:	2220      	movs	r2, #32
 8003870:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003874:	68fb      	ldr	r3, [r7, #12]
 8003876:	2200      	movs	r2, #0
 8003878:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 800387c:	68fb      	ldr	r3, [r7, #12]
 800387e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003880:	f043 0220 	orr.w	r2, r3, #32
 8003884:	68fb      	ldr	r3, [r7, #12]
 8003886:	641a      	str	r2, [r3, #64]	@ 0x40
 8003888:	68fb      	ldr	r3, [r7, #12]
 800388a:	2200      	movs	r2, #0
 800388c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003890:	2301      	movs	r3, #1
 8003892:	e021      	b.n	80038d8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
 8003894:	68bb      	ldr	r3, [r7, #8]
 8003896:	0c1b      	lsrs	r3, r3, #16
 8003898:	b2db      	uxtb	r3, r3
 800389a:	2b01      	cmp	r3, #1
 800389c:	d10c      	bne.n	80038b8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 800389e:	68fb      	ldr	r3, [r7, #12]
 80038a0:	681b      	ldr	r3, [r3, #0]
 80038a2:	695b      	ldr	r3, [r3, #20]
 80038a4:	43da      	mvns	r2, r3
 80038a6:	68bb      	ldr	r3, [r7, #8]
 80038a8:	4013      	ands	r3, r2
 80038aa:	b29b      	uxth	r3, r3
 80038ac:	2b00      	cmp	r3, #0
 80038ae:	bf14      	ite	ne
 80038b0:	2301      	movne	r3, #1
 80038b2:	2300      	moveq	r3, #0
 80038b4:	b2db      	uxtb	r3, r3
 80038b6:	e00b      	b.n	80038d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 80038b8:	68fb      	ldr	r3, [r7, #12]
 80038ba:	681b      	ldr	r3, [r3, #0]
 80038bc:	699b      	ldr	r3, [r3, #24]
 80038be:	43da      	mvns	r2, r3
 80038c0:	68bb      	ldr	r3, [r7, #8]
 80038c2:	4013      	ands	r3, r2
 80038c4:	b29b      	uxth	r3, r3
 80038c6:	2b00      	cmp	r3, #0
 80038c8:	bf14      	ite	ne
 80038ca:	2301      	movne	r3, #1
 80038cc:	2300      	moveq	r3, #0
 80038ce:	b2db      	uxtb	r3, r3
 80038d0:	2b00      	cmp	r3, #0
 80038d2:	f47f af6d 	bne.w	80037b0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
 80038d6:	2300      	movs	r3, #0
 80038d8:	4618      	mov	r0, r3
 80038da:	3710      	adds	r7, #16
 80038dc:	46bd      	mov	sp, r7
 80038de:	bd80      	pop	{r7, pc}

080038e0 <I2C_WaitOnTXEFlagUntilTimeout>:
 80038e0:	b580      	push	{r7, lr}
 80038e2:	b084      	sub	sp, #16
 80038e4:	af00      	add	r7, sp, #0
 80038e6:	60f8      	str	r0, [r7, #12]
 80038e8:	60b9      	str	r1, [r7, #8]
 80038ea:	607a      	str	r2, [r7, #4]
 80038ec:	e034      	b.n	8003958 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 80038ee:	68f8      	ldr	r0, [r7, #12]
 80038f0:	f000 f886 	bl	8003a00 <I2C_IsAcknowledgeFailed>
 80038f4:	4603      	mov	r3, r0
 80038f6:	2b00      	cmp	r3, #0
 80038f8:	d001      	beq.n	80038fe <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
 80038fa:	2301      	movs	r3, #1
 80038fc:	e034      	b.n	8003968 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 80038fe:	68bb      	ldr	r3, [r7, #8]
 8003900:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003904:	d028      	beq.n	8003958 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 8003906:	f7ff f90d 	bl	8002b24 <HAL_GetTick>
 800390a:	4602      	mov	r2, r0
 800390c:	687b      	ldr	r3, [r7, #4]
 800390e:	1ad3      	subs	r3, r2, r3
 8003910:	68ba      	ldr	r2, [r7, #8]
 8003912:	429a      	cmp	r2, r3
 8003914:	d302      	bcc.n	800391c <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 8003916:	68bb      	ldr	r3, [r7, #8]
 8003918:	2b00      	cmp	r3, #0
 800391a:	d11d      	bne.n	8003958 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800391c:	68fb      	ldr	r3, [r7, #12]
 800391e:	681b      	ldr	r3, [r3, #0]
 8003920:	695b      	ldr	r3, [r3, #20]
 8003922:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003926:	2b80      	cmp	r3, #128	@ 0x80
 8003928:	d016      	beq.n	8003958 <I2C_WaitOnTXEFlagUntilTimeout+0x78>
 800392a:	68fb      	ldr	r3, [r7, #12]
 800392c:	2200      	movs	r2, #0
 800392e:	631a      	str	r2, [r3, #48]	@ 0x30
 8003930:	68fb      	ldr	r3, [r7, #12]
 8003932:	2220      	movs	r2, #32
 8003934:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003938:	68fb      	ldr	r3, [r7, #12]
 800393a:	2200      	movs	r2, #0
 800393c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003940:	68fb      	ldr	r3, [r7, #12]
 8003942:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003944:	f043 0220 	orr.w	r2, r3, #32
 8003948:	68fb      	ldr	r3, [r7, #12]
 800394a:	641a      	str	r2, [r3, #64]	@ 0x40
 800394c:	68fb      	ldr	r3, [r7, #12]
 800394e:	2200      	movs	r2, #0
 8003950:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003954:	2301      	movs	r3, #1
 8003956:	e007      	b.n	8003968 <I2C_WaitOnTXEFlagUntilTimeout+0x88>
 8003958:	68fb      	ldr	r3, [r7, #12]
 800395a:	681b      	ldr	r3, [r3, #0]
 800395c:	695b      	ldr	r3, [r3, #20]
 800395e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003962:	2b80      	cmp	r3, #128	@ 0x80
 8003964:	d1c3      	bne.n	80038ee <I2C_WaitOnTXEFlagUntilTimeout+0xe>
 8003966:	2300      	movs	r3, #0
 8003968:	4618      	mov	r0, r3
 800396a:	3710      	adds	r7, #16
 800396c:	46bd      	mov	sp, r7
 800396e:	bd80      	pop	{r7, pc}

08003970 <I2C_WaitOnBTFFlagUntilTimeout>:
 8003970:	b580      	push	{r7, lr}
 8003972:	b084      	sub	sp, #16
 8003974:	af00      	add	r7, sp, #0
 8003976:	60f8      	str	r0, [r7, #12]
 8003978:	60b9      	str	r1, [r7, #8]
 800397a:	607a      	str	r2, [r7, #4]
 800397c:	e034      	b.n	80039e8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 800397e:	68f8      	ldr	r0, [r7, #12]
 8003980:	f000 f83e 	bl	8003a00 <I2C_IsAcknowledgeFailed>
 8003984:	4603      	mov	r3, r0
 8003986:	2b00      	cmp	r3, #0
 8003988:	d001      	beq.n	800398e <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
 800398a:	2301      	movs	r3, #1
 800398c:	e034      	b.n	80039f8 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 800398e:	68bb      	ldr	r3, [r7, #8]
 8003990:	f1b3 3fff 	cmp.w	r3, #4294967295
 8003994:	d028      	beq.n	80039e8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 8003996:	f7ff f8c5 	bl	8002b24 <HAL_GetTick>
 800399a:	4602      	mov	r2, r0
 800399c:	687b      	ldr	r3, [r7, #4]
 800399e:	1ad3      	subs	r3, r2, r3
 80039a0:	68ba      	ldr	r2, [r7, #8]
 80039a2:	429a      	cmp	r2, r3
 80039a4:	d302      	bcc.n	80039ac <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80039a6:	68bb      	ldr	r3, [r7, #8]
 80039a8:	2b00      	cmp	r3, #0
 80039aa:	d11d      	bne.n	80039e8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80039ac:	68fb      	ldr	r3, [r7, #12]
 80039ae:	681b      	ldr	r3, [r3, #0]
 80039b0:	695b      	ldr	r3, [r3, #20]
 80039b2:	f003 0304 	and.w	r3, r3, #4
 80039b6:	2b04      	cmp	r3, #4
 80039b8:	d016      	beq.n	80039e8 <I2C_WaitOnBTFFlagUntilTimeout+0x78>
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	2200      	movs	r2, #0
 80039be:	631a      	str	r2, [r3, #48]	@ 0x30
 80039c0:	68fb      	ldr	r3, [r7, #12]
 80039c2:	2220      	movs	r2, #32
 80039c4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80039c8:	68fb      	ldr	r3, [r7, #12]
 80039ca:	2200      	movs	r2, #0
 80039cc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80039d0:	68fb      	ldr	r3, [r7, #12]
 80039d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80039d4:	f043 0220 	orr.w	r2, r3, #32
 80039d8:	68fb      	ldr	r3, [r7, #12]
 80039da:	641a      	str	r2, [r3, #64]	@ 0x40
 80039dc:	68fb      	ldr	r3, [r7, #12]
 80039de:	2200      	movs	r2, #0
 80039e0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80039e4:	2301      	movs	r3, #1
 80039e6:	e007      	b.n	80039f8 <I2C_WaitOnBTFFlagUntilTimeout+0x88>
 80039e8:	68fb      	ldr	r3, [r7, #12]
 80039ea:	681b      	ldr	r3, [r3, #0]
 80039ec:	695b      	ldr	r3, [r3, #20]
 80039ee:	f003 0304 	and.w	r3, r3, #4
 80039f2:	2b04      	cmp	r3, #4
 80039f4:	d1c3      	bne.n	800397e <I2C_WaitOnBTFFlagUntilTimeout+0xe>
 80039f6:	2300      	movs	r3, #0
 80039f8:	4618      	mov	r0, r3
 80039fa:	3710      	adds	r7, #16
 80039fc:	46bd      	mov	sp, r7
 80039fe:	bd80      	pop	{r7, pc}

08003a00 <I2C_IsAcknowledgeFailed>:
 8003a00:	b480      	push	{r7}
 8003a02:	b083      	sub	sp, #12
 8003a04:	af00      	add	r7, sp, #0
 8003a06:	6078      	str	r0, [r7, #4]
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	681b      	ldr	r3, [r3, #0]
 8003a0c:	695b      	ldr	r3, [r3, #20]
 8003a0e:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8003a12:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8003a16:	d11b      	bne.n	8003a50 <I2C_IsAcknowledgeFailed+0x50>
 8003a18:	687b      	ldr	r3, [r7, #4]
 8003a1a:	681b      	ldr	r3, [r3, #0]
 8003a1c:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 8003a20:	615a      	str	r2, [r3, #20]
 8003a22:	687b      	ldr	r3, [r7, #4]
 8003a24:	2200      	movs	r2, #0
 8003a26:	631a      	str	r2, [r3, #48]	@ 0x30
 8003a28:	687b      	ldr	r3, [r7, #4]
 8003a2a:	2220      	movs	r2, #32
 8003a2c:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8003a30:	687b      	ldr	r3, [r7, #4]
 8003a32:	2200      	movs	r2, #0
 8003a34:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8003a38:	687b      	ldr	r3, [r7, #4]
 8003a3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a3c:	f043 0204 	orr.w	r2, r3, #4
 8003a40:	687b      	ldr	r3, [r7, #4]
 8003a42:	641a      	str	r2, [r3, #64]	@ 0x40
 8003a44:	687b      	ldr	r3, [r7, #4]
 8003a46:	2200      	movs	r2, #0
 8003a48:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8003a4c:	2301      	movs	r3, #1
 8003a4e:	e000      	b.n	8003a52 <I2C_IsAcknowledgeFailed+0x52>
 8003a50:	2300      	movs	r3, #0
 8003a52:	4618      	mov	r0, r3
 8003a54:	370c      	adds	r7, #12
 8003a56:	46bd      	mov	sp, r7
 8003a58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003a5c:	4770      	bx	lr
	...

08003a60 <HAL_RCC_ClockConfig>:
 8003a60:	b580      	push	{r7, lr}
 8003a62:	b084      	sub	sp, #16
 8003a64:	af00      	add	r7, sp, #0
 8003a66:	6078      	str	r0, [r7, #4]
 8003a68:	6039      	str	r1, [r7, #0]
 8003a6a:	687b      	ldr	r3, [r7, #4]
 8003a6c:	2b00      	cmp	r3, #0
 8003a6e:	d101      	bne.n	8003a74 <HAL_RCC_ClockConfig+0x14>
 8003a70:	2301      	movs	r3, #1
 8003a72:	e0cc      	b.n	8003c0e <HAL_RCC_ClockConfig+0x1ae>
 8003a74:	4b68      	ldr	r3, [pc, #416]	@ (8003c18 <HAL_RCC_ClockConfig+0x1b8>)
 8003a76:	681b      	ldr	r3, [r3, #0]
 8003a78:	f003 030f 	and.w	r3, r3, #15
 8003a7c:	683a      	ldr	r2, [r7, #0]
 8003a7e:	429a      	cmp	r2, r3
 8003a80:	d90c      	bls.n	8003a9c <HAL_RCC_ClockConfig+0x3c>
 8003a82:	4b65      	ldr	r3, [pc, #404]	@ (8003c18 <HAL_RCC_ClockConfig+0x1b8>)
 8003a84:	683a      	ldr	r2, [r7, #0]
 8003a86:	b2d2      	uxtb	r2, r2
 8003a88:	701a      	strb	r2, [r3, #0]
 8003a8a:	4b63      	ldr	r3, [pc, #396]	@ (8003c18 <HAL_RCC_ClockConfig+0x1b8>)
 8003a8c:	681b      	ldr	r3, [r3, #0]
 8003a8e:	f003 030f 	and.w	r3, r3, #15
 8003a92:	683a      	ldr	r2, [r7, #0]
 8003a94:	429a      	cmp	r2, r3
 8003a96:	d001      	beq.n	8003a9c <HAL_RCC_ClockConfig+0x3c>
 8003a98:	2301      	movs	r3, #1
 8003a9a:	e0b8      	b.n	8003c0e <HAL_RCC_ClockConfig+0x1ae>
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	f003 0302 	and.w	r3, r3, #2
 8003aa4:	2b00      	cmp	r3, #0
 8003aa6:	d020      	beq.n	8003aea <HAL_RCC_ClockConfig+0x8a>
 8003aa8:	687b      	ldr	r3, [r7, #4]
 8003aaa:	681b      	ldr	r3, [r3, #0]
 8003aac:	f003 0304 	and.w	r3, r3, #4
 8003ab0:	2b00      	cmp	r3, #0
 8003ab2:	d005      	beq.n	8003ac0 <HAL_RCC_ClockConfig+0x60>
 8003ab4:	4b59      	ldr	r3, [pc, #356]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003ab6:	689b      	ldr	r3, [r3, #8]
 8003ab8:	4a58      	ldr	r2, [pc, #352]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003aba:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 8003abe:	6093      	str	r3, [r2, #8]
 8003ac0:	687b      	ldr	r3, [r7, #4]
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	f003 0308 	and.w	r3, r3, #8
 8003ac8:	2b00      	cmp	r3, #0
 8003aca:	d005      	beq.n	8003ad8 <HAL_RCC_ClockConfig+0x78>
 8003acc:	4b53      	ldr	r3, [pc, #332]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003ace:	689b      	ldr	r3, [r3, #8]
 8003ad0:	4a52      	ldr	r2, [pc, #328]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003ad2:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8003ad6:	6093      	str	r3, [r2, #8]
 8003ad8:	4b50      	ldr	r3, [pc, #320]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003ada:	689b      	ldr	r3, [r3, #8]
 8003adc:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 8003ae0:	687b      	ldr	r3, [r7, #4]
 8003ae2:	689b      	ldr	r3, [r3, #8]
 8003ae4:	494d      	ldr	r1, [pc, #308]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003ae6:	4313      	orrs	r3, r2
 8003ae8:	608b      	str	r3, [r1, #8]
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	f003 0301 	and.w	r3, r3, #1
 8003af2:	2b00      	cmp	r3, #0
 8003af4:	d044      	beq.n	8003b80 <HAL_RCC_ClockConfig+0x120>
 8003af6:	687b      	ldr	r3, [r7, #4]
 8003af8:	685b      	ldr	r3, [r3, #4]
 8003afa:	2b01      	cmp	r3, #1
 8003afc:	d107      	bne.n	8003b0e <HAL_RCC_ClockConfig+0xae>
 8003afe:	4b47      	ldr	r3, [pc, #284]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003b00:	681b      	ldr	r3, [r3, #0]
 8003b02:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8003b06:	2b00      	cmp	r3, #0
 8003b08:	d119      	bne.n	8003b3e <HAL_RCC_ClockConfig+0xde>
 8003b0a:	2301      	movs	r3, #1
 8003b0c:	e07f      	b.n	8003c0e <HAL_RCC_ClockConfig+0x1ae>
 8003b0e:	687b      	ldr	r3, [r7, #4]
 8003b10:	685b      	ldr	r3, [r3, #4]
 8003b12:	2b02      	cmp	r3, #2
 8003b14:	d003      	beq.n	8003b1e <HAL_RCC_ClockConfig+0xbe>
 8003b16:	687b      	ldr	r3, [r7, #4]
 8003b18:	685b      	ldr	r3, [r3, #4]
 8003b1a:	2b03      	cmp	r3, #3
 8003b1c:	d107      	bne.n	8003b2e <HAL_RCC_ClockConfig+0xce>
 8003b1e:	4b3f      	ldr	r3, [pc, #252]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003b20:	681b      	ldr	r3, [r3, #0]
 8003b22:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8003b26:	2b00      	cmp	r3, #0
 8003b28:	d109      	bne.n	8003b3e <HAL_RCC_ClockConfig+0xde>
 8003b2a:	2301      	movs	r3, #1
 8003b2c:	e06f      	b.n	8003c0e <HAL_RCC_ClockConfig+0x1ae>
 8003b2e:	4b3b      	ldr	r3, [pc, #236]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003b30:	681b      	ldr	r3, [r3, #0]
 8003b32:	f003 0302 	and.w	r3, r3, #2
 8003b36:	2b00      	cmp	r3, #0
 8003b38:	d101      	bne.n	8003b3e <HAL_RCC_ClockConfig+0xde>
 8003b3a:	2301      	movs	r3, #1
 8003b3c:	e067      	b.n	8003c0e <HAL_RCC_ClockConfig+0x1ae>
 8003b3e:	4b37      	ldr	r3, [pc, #220]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003b40:	689b      	ldr	r3, [r3, #8]
 8003b42:	f023 0203 	bic.w	r2, r3, #3
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	685b      	ldr	r3, [r3, #4]
 8003b4a:	4934      	ldr	r1, [pc, #208]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003b4c:	4313      	orrs	r3, r2
 8003b4e:	608b      	str	r3, [r1, #8]
 8003b50:	f7fe ffe8 	bl	8002b24 <HAL_GetTick>
 8003b54:	60f8      	str	r0, [r7, #12]
 8003b56:	e00a      	b.n	8003b6e <HAL_RCC_ClockConfig+0x10e>
 8003b58:	f7fe ffe4 	bl	8002b24 <HAL_GetTick>
 8003b5c:	4602      	mov	r2, r0
 8003b5e:	68fb      	ldr	r3, [r7, #12]
 8003b60:	1ad3      	subs	r3, r2, r3
 8003b62:	f241 3288 	movw	r2, #5000	@ 0x1388
 8003b66:	4293      	cmp	r3, r2
 8003b68:	d901      	bls.n	8003b6e <HAL_RCC_ClockConfig+0x10e>
 8003b6a:	2303      	movs	r3, #3
 8003b6c:	e04f      	b.n	8003c0e <HAL_RCC_ClockConfig+0x1ae>
 8003b6e:	4b2b      	ldr	r3, [pc, #172]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003b70:	689b      	ldr	r3, [r3, #8]
 8003b72:	f003 020c 	and.w	r2, r3, #12
 8003b76:	687b      	ldr	r3, [r7, #4]
 8003b78:	685b      	ldr	r3, [r3, #4]
 8003b7a:	009b      	lsls	r3, r3, #2
 8003b7c:	429a      	cmp	r2, r3
 8003b7e:	d1eb      	bne.n	8003b58 <HAL_RCC_ClockConfig+0xf8>
 8003b80:	4b25      	ldr	r3, [pc, #148]	@ (8003c18 <HAL_RCC_ClockConfig+0x1b8>)
 8003b82:	681b      	ldr	r3, [r3, #0]
 8003b84:	f003 030f 	and.w	r3, r3, #15
 8003b88:	683a      	ldr	r2, [r7, #0]
 8003b8a:	429a      	cmp	r2, r3
 8003b8c:	d20c      	bcs.n	8003ba8 <HAL_RCC_ClockConfig+0x148>
 8003b8e:	4b22      	ldr	r3, [pc, #136]	@ (8003c18 <HAL_RCC_ClockConfig+0x1b8>)
 8003b90:	683a      	ldr	r2, [r7, #0]
 8003b92:	b2d2      	uxtb	r2, r2
 8003b94:	701a      	strb	r2, [r3, #0]
 8003b96:	4b20      	ldr	r3, [pc, #128]	@ (8003c18 <HAL_RCC_ClockConfig+0x1b8>)
 8003b98:	681b      	ldr	r3, [r3, #0]
 8003b9a:	f003 030f 	and.w	r3, r3, #15
 8003b9e:	683a      	ldr	r2, [r7, #0]
 8003ba0:	429a      	cmp	r2, r3
 8003ba2:	d001      	beq.n	8003ba8 <HAL_RCC_ClockConfig+0x148>
 8003ba4:	2301      	movs	r3, #1
 8003ba6:	e032      	b.n	8003c0e <HAL_RCC_ClockConfig+0x1ae>
 8003ba8:	687b      	ldr	r3, [r7, #4]
 8003baa:	681b      	ldr	r3, [r3, #0]
 8003bac:	f003 0304 	and.w	r3, r3, #4
 8003bb0:	2b00      	cmp	r3, #0
 8003bb2:	d008      	beq.n	8003bc6 <HAL_RCC_ClockConfig+0x166>
 8003bb4:	4b19      	ldr	r3, [pc, #100]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003bb6:	689b      	ldr	r3, [r3, #8]
 8003bb8:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8003bbc:	687b      	ldr	r3, [r7, #4]
 8003bbe:	68db      	ldr	r3, [r3, #12]
 8003bc0:	4916      	ldr	r1, [pc, #88]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003bc2:	4313      	orrs	r3, r2
 8003bc4:	608b      	str	r3, [r1, #8]
 8003bc6:	687b      	ldr	r3, [r7, #4]
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	f003 0308 	and.w	r3, r3, #8
 8003bce:	2b00      	cmp	r3, #0
 8003bd0:	d009      	beq.n	8003be6 <HAL_RCC_ClockConfig+0x186>
 8003bd2:	4b12      	ldr	r3, [pc, #72]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003bd4:	689b      	ldr	r3, [r3, #8]
 8003bd6:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	691b      	ldr	r3, [r3, #16]
 8003bde:	00db      	lsls	r3, r3, #3
 8003be0:	490e      	ldr	r1, [pc, #56]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003be2:	4313      	orrs	r3, r2
 8003be4:	608b      	str	r3, [r1, #8]
 8003be6:	f000 f855 	bl	8003c94 <HAL_RCC_GetSysClockFreq>
 8003bea:	4602      	mov	r2, r0
 8003bec:	4b0b      	ldr	r3, [pc, #44]	@ (8003c1c <HAL_RCC_ClockConfig+0x1bc>)
 8003bee:	689b      	ldr	r3, [r3, #8]
 8003bf0:	091b      	lsrs	r3, r3, #4
 8003bf2:	f003 030f 	and.w	r3, r3, #15
 8003bf6:	490a      	ldr	r1, [pc, #40]	@ (8003c20 <HAL_RCC_ClockConfig+0x1c0>)
 8003bf8:	5ccb      	ldrb	r3, [r1, r3]
 8003bfa:	fa22 f303 	lsr.w	r3, r2, r3
 8003bfe:	4a09      	ldr	r2, [pc, #36]	@ (8003c24 <HAL_RCC_ClockConfig+0x1c4>)
 8003c00:	6013      	str	r3, [r2, #0]
 8003c02:	4b09      	ldr	r3, [pc, #36]	@ (8003c28 <HAL_RCC_ClockConfig+0x1c8>)
 8003c04:	681b      	ldr	r3, [r3, #0]
 8003c06:	4618      	mov	r0, r3
 8003c08:	f7fe ff48 	bl	8002a9c <HAL_InitTick>
 8003c0c:	2300      	movs	r3, #0
 8003c0e:	4618      	mov	r0, r3
 8003c10:	3710      	adds	r7, #16
 8003c12:	46bd      	mov	sp, r7
 8003c14:	bd80      	pop	{r7, pc}
 8003c16:	bf00      	nop
 8003c18:	40023c00 	.word	0x40023c00
 8003c1c:	40023800 	.word	0x40023800
 8003c20:	08006f9c 	.word	0x08006f9c
 8003c24:	20000000 	.word	0x20000000
 8003c28:	20000004 	.word	0x20000004

08003c2c <HAL_RCC_GetHCLKFreq>:
 8003c2c:	b480      	push	{r7}
 8003c2e:	af00      	add	r7, sp, #0
 8003c30:	4b03      	ldr	r3, [pc, #12]	@ (8003c40 <HAL_RCC_GetHCLKFreq+0x14>)
 8003c32:	681b      	ldr	r3, [r3, #0]
 8003c34:	4618      	mov	r0, r3
 8003c36:	46bd      	mov	sp, r7
 8003c38:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003c3c:	4770      	bx	lr
 8003c3e:	bf00      	nop
 8003c40:	20000000 	.word	0x20000000

08003c44 <HAL_RCC_GetPCLK1Freq>:
 8003c44:	b580      	push	{r7, lr}
 8003c46:	af00      	add	r7, sp, #0
 8003c48:	f7ff fff0 	bl	8003c2c <HAL_RCC_GetHCLKFreq>
 8003c4c:	4602      	mov	r2, r0
 8003c4e:	4b05      	ldr	r3, [pc, #20]	@ (8003c64 <HAL_RCC_GetPCLK1Freq+0x20>)
 8003c50:	689b      	ldr	r3, [r3, #8]
 8003c52:	0a9b      	lsrs	r3, r3, #10
 8003c54:	f003 0307 	and.w	r3, r3, #7
 8003c58:	4903      	ldr	r1, [pc, #12]	@ (8003c68 <HAL_RCC_GetPCLK1Freq+0x24>)
 8003c5a:	5ccb      	ldrb	r3, [r1, r3]
 8003c5c:	fa22 f303 	lsr.w	r3, r2, r3
 8003c60:	4618      	mov	r0, r3
 8003c62:	bd80      	pop	{r7, pc}
 8003c64:	40023800 	.word	0x40023800
 8003c68:	08006fac 	.word	0x08006fac

08003c6c <HAL_RCC_GetPCLK2Freq>:
 8003c6c:	b580      	push	{r7, lr}
 8003c6e:	af00      	add	r7, sp, #0
 8003c70:	f7ff ffdc 	bl	8003c2c <HAL_RCC_GetHCLKFreq>
 8003c74:	4602      	mov	r2, r0
 8003c76:	4b05      	ldr	r3, [pc, #20]	@ (8003c8c <HAL_RCC_GetPCLK2Freq+0x20>)
 8003c78:	689b      	ldr	r3, [r3, #8]
 8003c7a:	0b5b      	lsrs	r3, r3, #13
 8003c7c:	f003 0307 	and.w	r3, r3, #7
 8003c80:	4903      	ldr	r1, [pc, #12]	@ (8003c90 <HAL_RCC_GetPCLK2Freq+0x24>)
 8003c82:	5ccb      	ldrb	r3, [r1, r3]
 8003c84:	fa22 f303 	lsr.w	r3, r2, r3
 8003c88:	4618      	mov	r0, r3
 8003c8a:	bd80      	pop	{r7, pc}
 8003c8c:	40023800 	.word	0x40023800
 8003c90:	08006fac 	.word	0x08006fac

08003c94 <HAL_RCC_GetSysClockFreq>:
 8003c94:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8003c98:	b0a6      	sub	sp, #152	@ 0x98
 8003c9a:	af00      	add	r7, sp, #0
 8003c9c:	2300      	movs	r3, #0
 8003c9e:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003ca2:	2300      	movs	r3, #0
 8003ca4:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003ca8:	2300      	movs	r3, #0
 8003caa:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003cae:	2300      	movs	r3, #0
 8003cb0:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003cb4:	2300      	movs	r3, #0
 8003cb6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003cba:	4bc8      	ldr	r3, [pc, #800]	@ (8003fdc <HAL_RCC_GetSysClockFreq+0x348>)
 8003cbc:	689b      	ldr	r3, [r3, #8]
 8003cbe:	f003 030c 	and.w	r3, r3, #12
 8003cc2:	2b0c      	cmp	r3, #12
 8003cc4:	f200 817e 	bhi.w	8003fc4 <HAL_RCC_GetSysClockFreq+0x330>
 8003cc8:	a201      	add	r2, pc, #4	@ (adr r2, 8003cd0 <HAL_RCC_GetSysClockFreq+0x3c>)
 8003cca:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003cce:	bf00      	nop
 8003cd0:	08003d05 	.word	0x08003d05
 8003cd4:	08003fc5 	.word	0x08003fc5
 8003cd8:	08003fc5 	.word	0x08003fc5
 8003cdc:	08003fc5 	.word	0x08003fc5
 8003ce0:	08003d0d 	.word	0x08003d0d
 8003ce4:	08003fc5 	.word	0x08003fc5
 8003ce8:	08003fc5 	.word	0x08003fc5
 8003cec:	08003fc5 	.word	0x08003fc5
 8003cf0:	08003d15 	.word	0x08003d15
 8003cf4:	08003fc5 	.word	0x08003fc5
 8003cf8:	08003fc5 	.word	0x08003fc5
 8003cfc:	08003fc5 	.word	0x08003fc5
 8003d00:	08003e7f 	.word	0x08003e7f
 8003d04:	4bb6      	ldr	r3, [pc, #728]	@ (8003fe0 <HAL_RCC_GetSysClockFreq+0x34c>)
 8003d06:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003d0a:	e15f      	b.n	8003fcc <HAL_RCC_GetSysClockFreq+0x338>
 8003d0c:	4bb5      	ldr	r3, [pc, #724]	@ (8003fe4 <HAL_RCC_GetSysClockFreq+0x350>)
 8003d0e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003d12:	e15b      	b.n	8003fcc <HAL_RCC_GetSysClockFreq+0x338>
 8003d14:	4bb1      	ldr	r3, [pc, #708]	@ (8003fdc <HAL_RCC_GetSysClockFreq+0x348>)
 8003d16:	685b      	ldr	r3, [r3, #4]
 8003d18:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003d1c:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003d20:	4bae      	ldr	r3, [pc, #696]	@ (8003fdc <HAL_RCC_GetSysClockFreq+0x348>)
 8003d22:	685b      	ldr	r3, [r3, #4]
 8003d24:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003d28:	2b00      	cmp	r3, #0
 8003d2a:	d031      	beq.n	8003d90 <HAL_RCC_GetSysClockFreq+0xfc>
 8003d2c:	4bab      	ldr	r3, [pc, #684]	@ (8003fdc <HAL_RCC_GetSysClockFreq+0x348>)
 8003d2e:	685b      	ldr	r3, [r3, #4]
 8003d30:	099b      	lsrs	r3, r3, #6
 8003d32:	2200      	movs	r2, #0
 8003d34:	66bb      	str	r3, [r7, #104]	@ 0x68
 8003d36:	66fa      	str	r2, [r7, #108]	@ 0x6c
 8003d38:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 8003d3a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003d3e:	663b      	str	r3, [r7, #96]	@ 0x60
 8003d40:	2300      	movs	r3, #0
 8003d42:	667b      	str	r3, [r7, #100]	@ 0x64
 8003d44:	4ba7      	ldr	r3, [pc, #668]	@ (8003fe4 <HAL_RCC_GetSysClockFreq+0x350>)
 8003d46:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 8003d4a:	462a      	mov	r2, r5
 8003d4c:	fb03 f202 	mul.w	r2, r3, r2
 8003d50:	2300      	movs	r3, #0
 8003d52:	4621      	mov	r1, r4
 8003d54:	fb01 f303 	mul.w	r3, r1, r3
 8003d58:	4413      	add	r3, r2
 8003d5a:	4aa2      	ldr	r2, [pc, #648]	@ (8003fe4 <HAL_RCC_GetSysClockFreq+0x350>)
 8003d5c:	4621      	mov	r1, r4
 8003d5e:	fba1 1202 	umull	r1, r2, r1, r2
 8003d62:	67fa      	str	r2, [r7, #124]	@ 0x7c
 8003d64:	460a      	mov	r2, r1
 8003d66:	67ba      	str	r2, [r7, #120]	@ 0x78
 8003d68:	6ffa      	ldr	r2, [r7, #124]	@ 0x7c
 8003d6a:	4413      	add	r3, r2
 8003d6c:	67fb      	str	r3, [r7, #124]	@ 0x7c
 8003d6e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003d72:	2200      	movs	r2, #0
 8003d74:	65bb      	str	r3, [r7, #88]	@ 0x58
 8003d76:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8003d78:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 8003d7c:	e9d7 011e 	ldrd	r0, r1, [r7, #120]	@ 0x78
 8003d80:	f7fc fe58 	bl	8000a34 <__aeabi_uldivmod>
 8003d84:	4602      	mov	r2, r0
 8003d86:	460b      	mov	r3, r1
 8003d88:	4613      	mov	r3, r2
 8003d8a:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003d8e:	e064      	b.n	8003e5a <HAL_RCC_GetSysClockFreq+0x1c6>
 8003d90:	4b92      	ldr	r3, [pc, #584]	@ (8003fdc <HAL_RCC_GetSysClockFreq+0x348>)
 8003d92:	685b      	ldr	r3, [r3, #4]
 8003d94:	099b      	lsrs	r3, r3, #6
 8003d96:	2200      	movs	r2, #0
 8003d98:	653b      	str	r3, [r7, #80]	@ 0x50
 8003d9a:	657a      	str	r2, [r7, #84]	@ 0x54
 8003d9c:	6d3b      	ldr	r3, [r7, #80]	@ 0x50
 8003d9e:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003da2:	64bb      	str	r3, [r7, #72]	@ 0x48
 8003da4:	2300      	movs	r3, #0
 8003da6:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8003da8:	e9d7 4512 	ldrd	r4, r5, [r7, #72]	@ 0x48
 8003dac:	4622      	mov	r2, r4
 8003dae:	462b      	mov	r3, r5
 8003db0:	f04f 0000 	mov.w	r0, #0
 8003db4:	f04f 0100 	mov.w	r1, #0
 8003db8:	0159      	lsls	r1, r3, #5
 8003dba:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003dbe:	0150      	lsls	r0, r2, #5
 8003dc0:	4602      	mov	r2, r0
 8003dc2:	460b      	mov	r3, r1
 8003dc4:	4621      	mov	r1, r4
 8003dc6:	1a51      	subs	r1, r2, r1
 8003dc8:	6139      	str	r1, [r7, #16]
 8003dca:	4629      	mov	r1, r5
 8003dcc:	eb63 0301 	sbc.w	r3, r3, r1
 8003dd0:	617b      	str	r3, [r7, #20]
 8003dd2:	f04f 0200 	mov.w	r2, #0
 8003dd6:	f04f 0300 	mov.w	r3, #0
 8003dda:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8003dde:	4659      	mov	r1, fp
 8003de0:	018b      	lsls	r3, r1, #6
 8003de2:	4651      	mov	r1, sl
 8003de4:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8003de8:	4651      	mov	r1, sl
 8003dea:	018a      	lsls	r2, r1, #6
 8003dec:	4651      	mov	r1, sl
 8003dee:	ebb2 0801 	subs.w	r8, r2, r1
 8003df2:	4659      	mov	r1, fp
 8003df4:	eb63 0901 	sbc.w	r9, r3, r1
 8003df8:	f04f 0200 	mov.w	r2, #0
 8003dfc:	f04f 0300 	mov.w	r3, #0
 8003e00:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8003e04:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8003e08:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003e0c:	4690      	mov	r8, r2
 8003e0e:	4699      	mov	r9, r3
 8003e10:	4623      	mov	r3, r4
 8003e12:	eb18 0303 	adds.w	r3, r8, r3
 8003e16:	60bb      	str	r3, [r7, #8]
 8003e18:	462b      	mov	r3, r5
 8003e1a:	eb49 0303 	adc.w	r3, r9, r3
 8003e1e:	60fb      	str	r3, [r7, #12]
 8003e20:	f04f 0200 	mov.w	r2, #0
 8003e24:	f04f 0300 	mov.w	r3, #0
 8003e28:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 8003e2c:	4629      	mov	r1, r5
 8003e2e:	028b      	lsls	r3, r1, #10
 8003e30:	4621      	mov	r1, r4
 8003e32:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003e36:	4621      	mov	r1, r4
 8003e38:	028a      	lsls	r2, r1, #10
 8003e3a:	4610      	mov	r0, r2
 8003e3c:	4619      	mov	r1, r3
 8003e3e:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003e42:	2200      	movs	r2, #0
 8003e44:	643b      	str	r3, [r7, #64]	@ 0x40
 8003e46:	647a      	str	r2, [r7, #68]	@ 0x44
 8003e48:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 8003e4c:	f7fc fdf2 	bl	8000a34 <__aeabi_uldivmod>
 8003e50:	4602      	mov	r2, r0
 8003e52:	460b      	mov	r3, r1
 8003e54:	4613      	mov	r3, r2
 8003e56:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003e5a:	4b60      	ldr	r3, [pc, #384]	@ (8003fdc <HAL_RCC_GetSysClockFreq+0x348>)
 8003e5c:	685b      	ldr	r3, [r3, #4]
 8003e5e:	0c1b      	lsrs	r3, r3, #16
 8003e60:	f003 0303 	and.w	r3, r3, #3
 8003e64:	3301      	adds	r3, #1
 8003e66:	005b      	lsls	r3, r3, #1
 8003e68:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8003e6c:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8003e70:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 8003e74:	fbb2 f3f3 	udiv	r3, r2, r3
 8003e78:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003e7c:	e0a6      	b.n	8003fcc <HAL_RCC_GetSysClockFreq+0x338>
 8003e7e:	4b57      	ldr	r3, [pc, #348]	@ (8003fdc <HAL_RCC_GetSysClockFreq+0x348>)
 8003e80:	685b      	ldr	r3, [r3, #4]
 8003e82:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8003e86:	f8c7 308c 	str.w	r3, [r7, #140]	@ 0x8c
 8003e8a:	4b54      	ldr	r3, [pc, #336]	@ (8003fdc <HAL_RCC_GetSysClockFreq+0x348>)
 8003e8c:	685b      	ldr	r3, [r3, #4]
 8003e8e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8003e92:	2b00      	cmp	r3, #0
 8003e94:	d02a      	beq.n	8003eec <HAL_RCC_GetSysClockFreq+0x258>
 8003e96:	4b51      	ldr	r3, [pc, #324]	@ (8003fdc <HAL_RCC_GetSysClockFreq+0x348>)
 8003e98:	685b      	ldr	r3, [r3, #4]
 8003e9a:	099b      	lsrs	r3, r3, #6
 8003e9c:	2200      	movs	r2, #0
 8003e9e:	63bb      	str	r3, [r7, #56]	@ 0x38
 8003ea0:	63fa      	str	r2, [r7, #60]	@ 0x3c
 8003ea2:	6bbb      	ldr	r3, [r7, #56]	@ 0x38
 8003ea4:	f3c3 0008 	ubfx	r0, r3, #0, #9
 8003ea8:	2100      	movs	r1, #0
 8003eaa:	4b4e      	ldr	r3, [pc, #312]	@ (8003fe4 <HAL_RCC_GetSysClockFreq+0x350>)
 8003eac:	fb03 f201 	mul.w	r2, r3, r1
 8003eb0:	2300      	movs	r3, #0
 8003eb2:	fb00 f303 	mul.w	r3, r0, r3
 8003eb6:	4413      	add	r3, r2
 8003eb8:	4a4a      	ldr	r2, [pc, #296]	@ (8003fe4 <HAL_RCC_GetSysClockFreq+0x350>)
 8003eba:	fba0 1202 	umull	r1, r2, r0, r2
 8003ebe:	677a      	str	r2, [r7, #116]	@ 0x74
 8003ec0:	460a      	mov	r2, r1
 8003ec2:	673a      	str	r2, [r7, #112]	@ 0x70
 8003ec4:	6f7a      	ldr	r2, [r7, #116]	@ 0x74
 8003ec6:	4413      	add	r3, r2
 8003ec8:	677b      	str	r3, [r7, #116]	@ 0x74
 8003eca:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003ece:	2200      	movs	r2, #0
 8003ed0:	633b      	str	r3, [r7, #48]	@ 0x30
 8003ed2:	637a      	str	r2, [r7, #52]	@ 0x34
 8003ed4:	e9d7 230c 	ldrd	r2, r3, [r7, #48]	@ 0x30
 8003ed8:	e9d7 011c 	ldrd	r0, r1, [r7, #112]	@ 0x70
 8003edc:	f7fc fdaa 	bl	8000a34 <__aeabi_uldivmod>
 8003ee0:	4602      	mov	r2, r0
 8003ee2:	460b      	mov	r3, r1
 8003ee4:	4613      	mov	r3, r2
 8003ee6:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003eea:	e05b      	b.n	8003fa4 <HAL_RCC_GetSysClockFreq+0x310>
 8003eec:	4b3b      	ldr	r3, [pc, #236]	@ (8003fdc <HAL_RCC_GetSysClockFreq+0x348>)
 8003eee:	685b      	ldr	r3, [r3, #4]
 8003ef0:	099b      	lsrs	r3, r3, #6
 8003ef2:	2200      	movs	r2, #0
 8003ef4:	62bb      	str	r3, [r7, #40]	@ 0x28
 8003ef6:	62fa      	str	r2, [r7, #44]	@ 0x2c
 8003ef8:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003efa:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8003efe:	623b      	str	r3, [r7, #32]
 8003f00:	2300      	movs	r3, #0
 8003f02:	627b      	str	r3, [r7, #36]	@ 0x24
 8003f04:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8003f08:	4642      	mov	r2, r8
 8003f0a:	464b      	mov	r3, r9
 8003f0c:	f04f 0000 	mov.w	r0, #0
 8003f10:	f04f 0100 	mov.w	r1, #0
 8003f14:	0159      	lsls	r1, r3, #5
 8003f16:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8003f1a:	0150      	lsls	r0, r2, #5
 8003f1c:	4602      	mov	r2, r0
 8003f1e:	460b      	mov	r3, r1
 8003f20:	4641      	mov	r1, r8
 8003f22:	ebb2 0a01 	subs.w	sl, r2, r1
 8003f26:	4649      	mov	r1, r9
 8003f28:	eb63 0b01 	sbc.w	fp, r3, r1
 8003f2c:	f04f 0200 	mov.w	r2, #0
 8003f30:	f04f 0300 	mov.w	r3, #0
 8003f34:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8003f38:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8003f3c:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8003f40:	ebb2 040a 	subs.w	r4, r2, sl
 8003f44:	eb63 050b 	sbc.w	r5, r3, fp
 8003f48:	f04f 0200 	mov.w	r2, #0
 8003f4c:	f04f 0300 	mov.w	r3, #0
 8003f50:	00eb      	lsls	r3, r5, #3
 8003f52:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003f56:	00e2      	lsls	r2, r4, #3
 8003f58:	4614      	mov	r4, r2
 8003f5a:	461d      	mov	r5, r3
 8003f5c:	4643      	mov	r3, r8
 8003f5e:	18e3      	adds	r3, r4, r3
 8003f60:	603b      	str	r3, [r7, #0]
 8003f62:	464b      	mov	r3, r9
 8003f64:	eb45 0303 	adc.w	r3, r5, r3
 8003f68:	607b      	str	r3, [r7, #4]
 8003f6a:	f04f 0200 	mov.w	r2, #0
 8003f6e:	f04f 0300 	mov.w	r3, #0
 8003f72:	e9d7 4500 	ldrd	r4, r5, [r7]
 8003f76:	4629      	mov	r1, r5
 8003f78:	028b      	lsls	r3, r1, #10
 8003f7a:	4621      	mov	r1, r4
 8003f7c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8003f80:	4621      	mov	r1, r4
 8003f82:	028a      	lsls	r2, r1, #10
 8003f84:	4610      	mov	r0, r2
 8003f86:	4619      	mov	r1, r3
 8003f88:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 8003f8c:	2200      	movs	r2, #0
 8003f8e:	61bb      	str	r3, [r7, #24]
 8003f90:	61fa      	str	r2, [r7, #28]
 8003f92:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8003f96:	f7fc fd4d 	bl	8000a34 <__aeabi_uldivmod>
 8003f9a:	4602      	mov	r2, r0
 8003f9c:	460b      	mov	r3, r1
 8003f9e:	4613      	mov	r3, r2
 8003fa0:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 8003fa4:	4b0d      	ldr	r3, [pc, #52]	@ (8003fdc <HAL_RCC_GetSysClockFreq+0x348>)
 8003fa6:	685b      	ldr	r3, [r3, #4]
 8003fa8:	0f1b      	lsrs	r3, r3, #28
 8003faa:	f003 0307 	and.w	r3, r3, #7
 8003fae:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 8003fb2:	f8d7 2094 	ldr.w	r2, [r7, #148]	@ 0x94
 8003fb6:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 8003fba:	fbb2 f3f3 	udiv	r3, r2, r3
 8003fbe:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003fc2:	e003      	b.n	8003fcc <HAL_RCC_GetSysClockFreq+0x338>
 8003fc4:	4b06      	ldr	r3, [pc, #24]	@ (8003fe0 <HAL_RCC_GetSysClockFreq+0x34c>)
 8003fc6:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 8003fca:	bf00      	nop
 8003fcc:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 8003fd0:	4618      	mov	r0, r3
 8003fd2:	3798      	adds	r7, #152	@ 0x98
 8003fd4:	46bd      	mov	sp, r7
 8003fd6:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8003fda:	bf00      	nop
 8003fdc:	40023800 	.word	0x40023800
 8003fe0:	00f42400 	.word	0x00f42400
 8003fe4:	017d7840 	.word	0x017d7840

08003fe8 <HAL_RCC_OscConfig>:
 8003fe8:	b580      	push	{r7, lr}
 8003fea:	b086      	sub	sp, #24
 8003fec:	af00      	add	r7, sp, #0
 8003fee:	6078      	str	r0, [r7, #4]
 8003ff0:	687b      	ldr	r3, [r7, #4]
 8003ff2:	2b00      	cmp	r3, #0
 8003ff4:	d101      	bne.n	8003ffa <HAL_RCC_OscConfig+0x12>
 8003ff6:	2301      	movs	r3, #1
 8003ff8:	e28d      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	f003 0301 	and.w	r3, r3, #1
 8004002:	2b00      	cmp	r3, #0
 8004004:	f000 8083 	beq.w	800410e <HAL_RCC_OscConfig+0x126>
 8004008:	4b94      	ldr	r3, [pc, #592]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 800400a:	689b      	ldr	r3, [r3, #8]
 800400c:	f003 030c 	and.w	r3, r3, #12
 8004010:	2b04      	cmp	r3, #4
 8004012:	d019      	beq.n	8004048 <HAL_RCC_OscConfig+0x60>
 8004014:	4b91      	ldr	r3, [pc, #580]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004016:	689b      	ldr	r3, [r3, #8]
 8004018:	f003 030c 	and.w	r3, r3, #12
 800401c:	2b08      	cmp	r3, #8
 800401e:	d106      	bne.n	800402e <HAL_RCC_OscConfig+0x46>
 8004020:	4b8e      	ldr	r3, [pc, #568]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004022:	685b      	ldr	r3, [r3, #4]
 8004024:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004028:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 800402c:	d00c      	beq.n	8004048 <HAL_RCC_OscConfig+0x60>
 800402e:	4b8b      	ldr	r3, [pc, #556]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004030:	689b      	ldr	r3, [r3, #8]
 8004032:	f003 030c 	and.w	r3, r3, #12
 8004036:	2b0c      	cmp	r3, #12
 8004038:	d112      	bne.n	8004060 <HAL_RCC_OscConfig+0x78>
 800403a:	4b88      	ldr	r3, [pc, #544]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 800403c:	685b      	ldr	r3, [r3, #4]
 800403e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004042:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8004046:	d10b      	bne.n	8004060 <HAL_RCC_OscConfig+0x78>
 8004048:	4b84      	ldr	r3, [pc, #528]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 800404a:	681b      	ldr	r3, [r3, #0]
 800404c:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004050:	2b00      	cmp	r3, #0
 8004052:	d05b      	beq.n	800410c <HAL_RCC_OscConfig+0x124>
 8004054:	687b      	ldr	r3, [r7, #4]
 8004056:	685b      	ldr	r3, [r3, #4]
 8004058:	2b00      	cmp	r3, #0
 800405a:	d157      	bne.n	800410c <HAL_RCC_OscConfig+0x124>
 800405c:	2301      	movs	r3, #1
 800405e:	e25a      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 8004060:	687b      	ldr	r3, [r7, #4]
 8004062:	685b      	ldr	r3, [r3, #4]
 8004064:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8004068:	d106      	bne.n	8004078 <HAL_RCC_OscConfig+0x90>
 800406a:	4b7c      	ldr	r3, [pc, #496]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 800406c:	681b      	ldr	r3, [r3, #0]
 800406e:	4a7b      	ldr	r2, [pc, #492]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004070:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004074:	6013      	str	r3, [r2, #0]
 8004076:	e01d      	b.n	80040b4 <HAL_RCC_OscConfig+0xcc>
 8004078:	687b      	ldr	r3, [r7, #4]
 800407a:	685b      	ldr	r3, [r3, #4]
 800407c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8004080:	d10c      	bne.n	800409c <HAL_RCC_OscConfig+0xb4>
 8004082:	4b76      	ldr	r3, [pc, #472]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004084:	681b      	ldr	r3, [r3, #0]
 8004086:	4a75      	ldr	r2, [pc, #468]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004088:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 800408c:	6013      	str	r3, [r2, #0]
 800408e:	4b73      	ldr	r3, [pc, #460]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004090:	681b      	ldr	r3, [r3, #0]
 8004092:	4a72      	ldr	r2, [pc, #456]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004094:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8004098:	6013      	str	r3, [r2, #0]
 800409a:	e00b      	b.n	80040b4 <HAL_RCC_OscConfig+0xcc>
 800409c:	4b6f      	ldr	r3, [pc, #444]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 800409e:	681b      	ldr	r3, [r3, #0]
 80040a0:	4a6e      	ldr	r2, [pc, #440]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 80040a2:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 80040a6:	6013      	str	r3, [r2, #0]
 80040a8:	4b6c      	ldr	r3, [pc, #432]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	4a6b      	ldr	r2, [pc, #428]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 80040ae:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 80040b2:	6013      	str	r3, [r2, #0]
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	685b      	ldr	r3, [r3, #4]
 80040b8:	2b00      	cmp	r3, #0
 80040ba:	d013      	beq.n	80040e4 <HAL_RCC_OscConfig+0xfc>
 80040bc:	f7fe fd32 	bl	8002b24 <HAL_GetTick>
 80040c0:	6138      	str	r0, [r7, #16]
 80040c2:	e008      	b.n	80040d6 <HAL_RCC_OscConfig+0xee>
 80040c4:	f7fe fd2e 	bl	8002b24 <HAL_GetTick>
 80040c8:	4602      	mov	r2, r0
 80040ca:	693b      	ldr	r3, [r7, #16]
 80040cc:	1ad3      	subs	r3, r2, r3
 80040ce:	2b64      	cmp	r3, #100	@ 0x64
 80040d0:	d901      	bls.n	80040d6 <HAL_RCC_OscConfig+0xee>
 80040d2:	2303      	movs	r3, #3
 80040d4:	e21f      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 80040d6:	4b61      	ldr	r3, [pc, #388]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 80040d8:	681b      	ldr	r3, [r3, #0]
 80040da:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80040de:	2b00      	cmp	r3, #0
 80040e0:	d0f0      	beq.n	80040c4 <HAL_RCC_OscConfig+0xdc>
 80040e2:	e014      	b.n	800410e <HAL_RCC_OscConfig+0x126>
 80040e4:	f7fe fd1e 	bl	8002b24 <HAL_GetTick>
 80040e8:	6138      	str	r0, [r7, #16]
 80040ea:	e008      	b.n	80040fe <HAL_RCC_OscConfig+0x116>
 80040ec:	f7fe fd1a 	bl	8002b24 <HAL_GetTick>
 80040f0:	4602      	mov	r2, r0
 80040f2:	693b      	ldr	r3, [r7, #16]
 80040f4:	1ad3      	subs	r3, r2, r3
 80040f6:	2b64      	cmp	r3, #100	@ 0x64
 80040f8:	d901      	bls.n	80040fe <HAL_RCC_OscConfig+0x116>
 80040fa:	2303      	movs	r3, #3
 80040fc:	e20b      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 80040fe:	4b57      	ldr	r3, [pc, #348]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004100:	681b      	ldr	r3, [r3, #0]
 8004102:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8004106:	2b00      	cmp	r3, #0
 8004108:	d1f0      	bne.n	80040ec <HAL_RCC_OscConfig+0x104>
 800410a:	e000      	b.n	800410e <HAL_RCC_OscConfig+0x126>
 800410c:	bf00      	nop
 800410e:	687b      	ldr	r3, [r7, #4]
 8004110:	681b      	ldr	r3, [r3, #0]
 8004112:	f003 0302 	and.w	r3, r3, #2
 8004116:	2b00      	cmp	r3, #0
 8004118:	d06f      	beq.n	80041fa <HAL_RCC_OscConfig+0x212>
 800411a:	4b50      	ldr	r3, [pc, #320]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 800411c:	689b      	ldr	r3, [r3, #8]
 800411e:	f003 030c 	and.w	r3, r3, #12
 8004122:	2b00      	cmp	r3, #0
 8004124:	d017      	beq.n	8004156 <HAL_RCC_OscConfig+0x16e>
 8004126:	4b4d      	ldr	r3, [pc, #308]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004128:	689b      	ldr	r3, [r3, #8]
 800412a:	f003 030c 	and.w	r3, r3, #12
 800412e:	2b08      	cmp	r3, #8
 8004130:	d105      	bne.n	800413e <HAL_RCC_OscConfig+0x156>
 8004132:	4b4a      	ldr	r3, [pc, #296]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004134:	685b      	ldr	r3, [r3, #4]
 8004136:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800413a:	2b00      	cmp	r3, #0
 800413c:	d00b      	beq.n	8004156 <HAL_RCC_OscConfig+0x16e>
 800413e:	4b47      	ldr	r3, [pc, #284]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004140:	689b      	ldr	r3, [r3, #8]
 8004142:	f003 030c 	and.w	r3, r3, #12
 8004146:	2b0c      	cmp	r3, #12
 8004148:	d11c      	bne.n	8004184 <HAL_RCC_OscConfig+0x19c>
 800414a:	4b44      	ldr	r3, [pc, #272]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 800414c:	685b      	ldr	r3, [r3, #4]
 800414e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8004152:	2b00      	cmp	r3, #0
 8004154:	d116      	bne.n	8004184 <HAL_RCC_OscConfig+0x19c>
 8004156:	4b41      	ldr	r3, [pc, #260]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004158:	681b      	ldr	r3, [r3, #0]
 800415a:	f003 0302 	and.w	r3, r3, #2
 800415e:	2b00      	cmp	r3, #0
 8004160:	d005      	beq.n	800416e <HAL_RCC_OscConfig+0x186>
 8004162:	687b      	ldr	r3, [r7, #4]
 8004164:	68db      	ldr	r3, [r3, #12]
 8004166:	2b01      	cmp	r3, #1
 8004168:	d001      	beq.n	800416e <HAL_RCC_OscConfig+0x186>
 800416a:	2301      	movs	r3, #1
 800416c:	e1d3      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 800416e:	4b3b      	ldr	r3, [pc, #236]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004170:	681b      	ldr	r3, [r3, #0]
 8004172:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	691b      	ldr	r3, [r3, #16]
 800417a:	00db      	lsls	r3, r3, #3
 800417c:	4937      	ldr	r1, [pc, #220]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 800417e:	4313      	orrs	r3, r2
 8004180:	600b      	str	r3, [r1, #0]
 8004182:	e03a      	b.n	80041fa <HAL_RCC_OscConfig+0x212>
 8004184:	687b      	ldr	r3, [r7, #4]
 8004186:	68db      	ldr	r3, [r3, #12]
 8004188:	2b00      	cmp	r3, #0
 800418a:	d020      	beq.n	80041ce <HAL_RCC_OscConfig+0x1e6>
 800418c:	4b34      	ldr	r3, [pc, #208]	@ (8004260 <HAL_RCC_OscConfig+0x278>)
 800418e:	2201      	movs	r2, #1
 8004190:	601a      	str	r2, [r3, #0]
 8004192:	f7fe fcc7 	bl	8002b24 <HAL_GetTick>
 8004196:	6138      	str	r0, [r7, #16]
 8004198:	e008      	b.n	80041ac <HAL_RCC_OscConfig+0x1c4>
 800419a:	f7fe fcc3 	bl	8002b24 <HAL_GetTick>
 800419e:	4602      	mov	r2, r0
 80041a0:	693b      	ldr	r3, [r7, #16]
 80041a2:	1ad3      	subs	r3, r2, r3
 80041a4:	2b02      	cmp	r3, #2
 80041a6:	d901      	bls.n	80041ac <HAL_RCC_OscConfig+0x1c4>
 80041a8:	2303      	movs	r3, #3
 80041aa:	e1b4      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 80041ac:	4b2b      	ldr	r3, [pc, #172]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 80041ae:	681b      	ldr	r3, [r3, #0]
 80041b0:	f003 0302 	and.w	r3, r3, #2
 80041b4:	2b00      	cmp	r3, #0
 80041b6:	d0f0      	beq.n	800419a <HAL_RCC_OscConfig+0x1b2>
 80041b8:	4b28      	ldr	r3, [pc, #160]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 80041ba:	681b      	ldr	r3, [r3, #0]
 80041bc:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 80041c0:	687b      	ldr	r3, [r7, #4]
 80041c2:	691b      	ldr	r3, [r3, #16]
 80041c4:	00db      	lsls	r3, r3, #3
 80041c6:	4925      	ldr	r1, [pc, #148]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 80041c8:	4313      	orrs	r3, r2
 80041ca:	600b      	str	r3, [r1, #0]
 80041cc:	e015      	b.n	80041fa <HAL_RCC_OscConfig+0x212>
 80041ce:	4b24      	ldr	r3, [pc, #144]	@ (8004260 <HAL_RCC_OscConfig+0x278>)
 80041d0:	2200      	movs	r2, #0
 80041d2:	601a      	str	r2, [r3, #0]
 80041d4:	f7fe fca6 	bl	8002b24 <HAL_GetTick>
 80041d8:	6138      	str	r0, [r7, #16]
 80041da:	e008      	b.n	80041ee <HAL_RCC_OscConfig+0x206>
 80041dc:	f7fe fca2 	bl	8002b24 <HAL_GetTick>
 80041e0:	4602      	mov	r2, r0
 80041e2:	693b      	ldr	r3, [r7, #16]
 80041e4:	1ad3      	subs	r3, r2, r3
 80041e6:	2b02      	cmp	r3, #2
 80041e8:	d901      	bls.n	80041ee <HAL_RCC_OscConfig+0x206>
 80041ea:	2303      	movs	r3, #3
 80041ec:	e193      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 80041ee:	4b1b      	ldr	r3, [pc, #108]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 80041f0:	681b      	ldr	r3, [r3, #0]
 80041f2:	f003 0302 	and.w	r3, r3, #2
 80041f6:	2b00      	cmp	r3, #0
 80041f8:	d1f0      	bne.n	80041dc <HAL_RCC_OscConfig+0x1f4>
 80041fa:	687b      	ldr	r3, [r7, #4]
 80041fc:	681b      	ldr	r3, [r3, #0]
 80041fe:	f003 0308 	and.w	r3, r3, #8
 8004202:	2b00      	cmp	r3, #0
 8004204:	d036      	beq.n	8004274 <HAL_RCC_OscConfig+0x28c>
 8004206:	687b      	ldr	r3, [r7, #4]
 8004208:	695b      	ldr	r3, [r3, #20]
 800420a:	2b00      	cmp	r3, #0
 800420c:	d016      	beq.n	800423c <HAL_RCC_OscConfig+0x254>
 800420e:	4b15      	ldr	r3, [pc, #84]	@ (8004264 <HAL_RCC_OscConfig+0x27c>)
 8004210:	2201      	movs	r2, #1
 8004212:	601a      	str	r2, [r3, #0]
 8004214:	f7fe fc86 	bl	8002b24 <HAL_GetTick>
 8004218:	6138      	str	r0, [r7, #16]
 800421a:	e008      	b.n	800422e <HAL_RCC_OscConfig+0x246>
 800421c:	f7fe fc82 	bl	8002b24 <HAL_GetTick>
 8004220:	4602      	mov	r2, r0
 8004222:	693b      	ldr	r3, [r7, #16]
 8004224:	1ad3      	subs	r3, r2, r3
 8004226:	2b02      	cmp	r3, #2
 8004228:	d901      	bls.n	800422e <HAL_RCC_OscConfig+0x246>
 800422a:	2303      	movs	r3, #3
 800422c:	e173      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 800422e:	4b0b      	ldr	r3, [pc, #44]	@ (800425c <HAL_RCC_OscConfig+0x274>)
 8004230:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8004232:	f003 0302 	and.w	r3, r3, #2
 8004236:	2b00      	cmp	r3, #0
 8004238:	d0f0      	beq.n	800421c <HAL_RCC_OscConfig+0x234>
 800423a:	e01b      	b.n	8004274 <HAL_RCC_OscConfig+0x28c>
 800423c:	4b09      	ldr	r3, [pc, #36]	@ (8004264 <HAL_RCC_OscConfig+0x27c>)
 800423e:	2200      	movs	r2, #0
 8004240:	601a      	str	r2, [r3, #0]
 8004242:	f7fe fc6f 	bl	8002b24 <HAL_GetTick>
 8004246:	6138      	str	r0, [r7, #16]
 8004248:	e00e      	b.n	8004268 <HAL_RCC_OscConfig+0x280>
 800424a:	f7fe fc6b 	bl	8002b24 <HAL_GetTick>
 800424e:	4602      	mov	r2, r0
 8004250:	693b      	ldr	r3, [r7, #16]
 8004252:	1ad3      	subs	r3, r2, r3
 8004254:	2b02      	cmp	r3, #2
 8004256:	d907      	bls.n	8004268 <HAL_RCC_OscConfig+0x280>
 8004258:	2303      	movs	r3, #3
 800425a:	e15c      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 800425c:	40023800 	.word	0x40023800
 8004260:	42470000 	.word	0x42470000
 8004264:	42470e80 	.word	0x42470e80
 8004268:	4b8a      	ldr	r3, [pc, #552]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 800426a:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 800426c:	f003 0302 	and.w	r3, r3, #2
 8004270:	2b00      	cmp	r3, #0
 8004272:	d1ea      	bne.n	800424a <HAL_RCC_OscConfig+0x262>
 8004274:	687b      	ldr	r3, [r7, #4]
 8004276:	681b      	ldr	r3, [r3, #0]
 8004278:	f003 0304 	and.w	r3, r3, #4
 800427c:	2b00      	cmp	r3, #0
 800427e:	f000 8097 	beq.w	80043b0 <HAL_RCC_OscConfig+0x3c8>
 8004282:	2300      	movs	r3, #0
 8004284:	75fb      	strb	r3, [r7, #23]
 8004286:	4b83      	ldr	r3, [pc, #524]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 8004288:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800428a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800428e:	2b00      	cmp	r3, #0
 8004290:	d10f      	bne.n	80042b2 <HAL_RCC_OscConfig+0x2ca>
 8004292:	2300      	movs	r3, #0
 8004294:	60bb      	str	r3, [r7, #8]
 8004296:	4b7f      	ldr	r3, [pc, #508]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 8004298:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800429a:	4a7e      	ldr	r2, [pc, #504]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 800429c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80042a0:	6413      	str	r3, [r2, #64]	@ 0x40
 80042a2:	4b7c      	ldr	r3, [pc, #496]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 80042a4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80042a6:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 80042aa:	60bb      	str	r3, [r7, #8]
 80042ac:	68bb      	ldr	r3, [r7, #8]
 80042ae:	2301      	movs	r3, #1
 80042b0:	75fb      	strb	r3, [r7, #23]
 80042b2:	4b79      	ldr	r3, [pc, #484]	@ (8004498 <HAL_RCC_OscConfig+0x4b0>)
 80042b4:	681b      	ldr	r3, [r3, #0]
 80042b6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80042ba:	2b00      	cmp	r3, #0
 80042bc:	d118      	bne.n	80042f0 <HAL_RCC_OscConfig+0x308>
 80042be:	4b76      	ldr	r3, [pc, #472]	@ (8004498 <HAL_RCC_OscConfig+0x4b0>)
 80042c0:	681b      	ldr	r3, [r3, #0]
 80042c2:	4a75      	ldr	r2, [pc, #468]	@ (8004498 <HAL_RCC_OscConfig+0x4b0>)
 80042c4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80042c8:	6013      	str	r3, [r2, #0]
 80042ca:	f7fe fc2b 	bl	8002b24 <HAL_GetTick>
 80042ce:	6138      	str	r0, [r7, #16]
 80042d0:	e008      	b.n	80042e4 <HAL_RCC_OscConfig+0x2fc>
 80042d2:	f7fe fc27 	bl	8002b24 <HAL_GetTick>
 80042d6:	4602      	mov	r2, r0
 80042d8:	693b      	ldr	r3, [r7, #16]
 80042da:	1ad3      	subs	r3, r2, r3
 80042dc:	2b02      	cmp	r3, #2
 80042de:	d901      	bls.n	80042e4 <HAL_RCC_OscConfig+0x2fc>
 80042e0:	2303      	movs	r3, #3
 80042e2:	e118      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 80042e4:	4b6c      	ldr	r3, [pc, #432]	@ (8004498 <HAL_RCC_OscConfig+0x4b0>)
 80042e6:	681b      	ldr	r3, [r3, #0]
 80042e8:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80042ec:	2b00      	cmp	r3, #0
 80042ee:	d0f0      	beq.n	80042d2 <HAL_RCC_OscConfig+0x2ea>
 80042f0:	687b      	ldr	r3, [r7, #4]
 80042f2:	689b      	ldr	r3, [r3, #8]
 80042f4:	2b01      	cmp	r3, #1
 80042f6:	d106      	bne.n	8004306 <HAL_RCC_OscConfig+0x31e>
 80042f8:	4b66      	ldr	r3, [pc, #408]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 80042fa:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80042fc:	4a65      	ldr	r2, [pc, #404]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 80042fe:	f043 0301 	orr.w	r3, r3, #1
 8004302:	6713      	str	r3, [r2, #112]	@ 0x70
 8004304:	e01c      	b.n	8004340 <HAL_RCC_OscConfig+0x358>
 8004306:	687b      	ldr	r3, [r7, #4]
 8004308:	689b      	ldr	r3, [r3, #8]
 800430a:	2b05      	cmp	r3, #5
 800430c:	d10c      	bne.n	8004328 <HAL_RCC_OscConfig+0x340>
 800430e:	4b61      	ldr	r3, [pc, #388]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 8004310:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004312:	4a60      	ldr	r2, [pc, #384]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 8004314:	f043 0304 	orr.w	r3, r3, #4
 8004318:	6713      	str	r3, [r2, #112]	@ 0x70
 800431a:	4b5e      	ldr	r3, [pc, #376]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 800431c:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800431e:	4a5d      	ldr	r2, [pc, #372]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 8004320:	f043 0301 	orr.w	r3, r3, #1
 8004324:	6713      	str	r3, [r2, #112]	@ 0x70
 8004326:	e00b      	b.n	8004340 <HAL_RCC_OscConfig+0x358>
 8004328:	4b5a      	ldr	r3, [pc, #360]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 800432a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800432c:	4a59      	ldr	r2, [pc, #356]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 800432e:	f023 0301 	bic.w	r3, r3, #1
 8004332:	6713      	str	r3, [r2, #112]	@ 0x70
 8004334:	4b57      	ldr	r3, [pc, #348]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 8004336:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004338:	4a56      	ldr	r2, [pc, #344]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 800433a:	f023 0304 	bic.w	r3, r3, #4
 800433e:	6713      	str	r3, [r2, #112]	@ 0x70
 8004340:	687b      	ldr	r3, [r7, #4]
 8004342:	689b      	ldr	r3, [r3, #8]
 8004344:	2b00      	cmp	r3, #0
 8004346:	d015      	beq.n	8004374 <HAL_RCC_OscConfig+0x38c>
 8004348:	f7fe fbec 	bl	8002b24 <HAL_GetTick>
 800434c:	6138      	str	r0, [r7, #16]
 800434e:	e00a      	b.n	8004366 <HAL_RCC_OscConfig+0x37e>
 8004350:	f7fe fbe8 	bl	8002b24 <HAL_GetTick>
 8004354:	4602      	mov	r2, r0
 8004356:	693b      	ldr	r3, [r7, #16]
 8004358:	1ad3      	subs	r3, r2, r3
 800435a:	f241 3288 	movw	r2, #5000	@ 0x1388
 800435e:	4293      	cmp	r3, r2
 8004360:	d901      	bls.n	8004366 <HAL_RCC_OscConfig+0x37e>
 8004362:	2303      	movs	r3, #3
 8004364:	e0d7      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 8004366:	4b4b      	ldr	r3, [pc, #300]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 8004368:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 800436a:	f003 0302 	and.w	r3, r3, #2
 800436e:	2b00      	cmp	r3, #0
 8004370:	d0ee      	beq.n	8004350 <HAL_RCC_OscConfig+0x368>
 8004372:	e014      	b.n	800439e <HAL_RCC_OscConfig+0x3b6>
 8004374:	f7fe fbd6 	bl	8002b24 <HAL_GetTick>
 8004378:	6138      	str	r0, [r7, #16]
 800437a:	e00a      	b.n	8004392 <HAL_RCC_OscConfig+0x3aa>
 800437c:	f7fe fbd2 	bl	8002b24 <HAL_GetTick>
 8004380:	4602      	mov	r2, r0
 8004382:	693b      	ldr	r3, [r7, #16]
 8004384:	1ad3      	subs	r3, r2, r3
 8004386:	f241 3288 	movw	r2, #5000	@ 0x1388
 800438a:	4293      	cmp	r3, r2
 800438c:	d901      	bls.n	8004392 <HAL_RCC_OscConfig+0x3aa>
 800438e:	2303      	movs	r3, #3
 8004390:	e0c1      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 8004392:	4b40      	ldr	r3, [pc, #256]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 8004394:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8004396:	f003 0302 	and.w	r3, r3, #2
 800439a:	2b00      	cmp	r3, #0
 800439c:	d1ee      	bne.n	800437c <HAL_RCC_OscConfig+0x394>
 800439e:	7dfb      	ldrb	r3, [r7, #23]
 80043a0:	2b01      	cmp	r3, #1
 80043a2:	d105      	bne.n	80043b0 <HAL_RCC_OscConfig+0x3c8>
 80043a4:	4b3b      	ldr	r3, [pc, #236]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 80043a6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80043a8:	4a3a      	ldr	r2, [pc, #232]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 80043aa:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 80043ae:	6413      	str	r3, [r2, #64]	@ 0x40
 80043b0:	687b      	ldr	r3, [r7, #4]
 80043b2:	699b      	ldr	r3, [r3, #24]
 80043b4:	2b00      	cmp	r3, #0
 80043b6:	f000 80ad 	beq.w	8004514 <HAL_RCC_OscConfig+0x52c>
 80043ba:	4b36      	ldr	r3, [pc, #216]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 80043bc:	689b      	ldr	r3, [r3, #8]
 80043be:	f003 030c 	and.w	r3, r3, #12
 80043c2:	2b08      	cmp	r3, #8
 80043c4:	d060      	beq.n	8004488 <HAL_RCC_OscConfig+0x4a0>
 80043c6:	687b      	ldr	r3, [r7, #4]
 80043c8:	699b      	ldr	r3, [r3, #24]
 80043ca:	2b02      	cmp	r3, #2
 80043cc:	d145      	bne.n	800445a <HAL_RCC_OscConfig+0x472>
 80043ce:	4b33      	ldr	r3, [pc, #204]	@ (800449c <HAL_RCC_OscConfig+0x4b4>)
 80043d0:	2200      	movs	r2, #0
 80043d2:	601a      	str	r2, [r3, #0]
 80043d4:	f7fe fba6 	bl	8002b24 <HAL_GetTick>
 80043d8:	6138      	str	r0, [r7, #16]
 80043da:	e008      	b.n	80043ee <HAL_RCC_OscConfig+0x406>
 80043dc:	f7fe fba2 	bl	8002b24 <HAL_GetTick>
 80043e0:	4602      	mov	r2, r0
 80043e2:	693b      	ldr	r3, [r7, #16]
 80043e4:	1ad3      	subs	r3, r2, r3
 80043e6:	2b02      	cmp	r3, #2
 80043e8:	d901      	bls.n	80043ee <HAL_RCC_OscConfig+0x406>
 80043ea:	2303      	movs	r3, #3
 80043ec:	e093      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 80043ee:	4b29      	ldr	r3, [pc, #164]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 80043f0:	681b      	ldr	r3, [r3, #0]
 80043f2:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80043f6:	2b00      	cmp	r3, #0
 80043f8:	d1f0      	bne.n	80043dc <HAL_RCC_OscConfig+0x3f4>
 80043fa:	687b      	ldr	r3, [r7, #4]
 80043fc:	69da      	ldr	r2, [r3, #28]
 80043fe:	687b      	ldr	r3, [r7, #4]
 8004400:	6a1b      	ldr	r3, [r3, #32]
 8004402:	431a      	orrs	r2, r3
 8004404:	687b      	ldr	r3, [r7, #4]
 8004406:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004408:	019b      	lsls	r3, r3, #6
 800440a:	431a      	orrs	r2, r3
 800440c:	687b      	ldr	r3, [r7, #4]
 800440e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004410:	085b      	lsrs	r3, r3, #1
 8004412:	3b01      	subs	r3, #1
 8004414:	041b      	lsls	r3, r3, #16
 8004416:	431a      	orrs	r2, r3
 8004418:	687b      	ldr	r3, [r7, #4]
 800441a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 800441c:	061b      	lsls	r3, r3, #24
 800441e:	431a      	orrs	r2, r3
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004424:	071b      	lsls	r3, r3, #28
 8004426:	491b      	ldr	r1, [pc, #108]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 8004428:	4313      	orrs	r3, r2
 800442a:	604b      	str	r3, [r1, #4]
 800442c:	4b1b      	ldr	r3, [pc, #108]	@ (800449c <HAL_RCC_OscConfig+0x4b4>)
 800442e:	2201      	movs	r2, #1
 8004430:	601a      	str	r2, [r3, #0]
 8004432:	f7fe fb77 	bl	8002b24 <HAL_GetTick>
 8004436:	6138      	str	r0, [r7, #16]
 8004438:	e008      	b.n	800444c <HAL_RCC_OscConfig+0x464>
 800443a:	f7fe fb73 	bl	8002b24 <HAL_GetTick>
 800443e:	4602      	mov	r2, r0
 8004440:	693b      	ldr	r3, [r7, #16]
 8004442:	1ad3      	subs	r3, r2, r3
 8004444:	2b02      	cmp	r3, #2
 8004446:	d901      	bls.n	800444c <HAL_RCC_OscConfig+0x464>
 8004448:	2303      	movs	r3, #3
 800444a:	e064      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 800444c:	4b11      	ldr	r3, [pc, #68]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 800444e:	681b      	ldr	r3, [r3, #0]
 8004450:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004454:	2b00      	cmp	r3, #0
 8004456:	d0f0      	beq.n	800443a <HAL_RCC_OscConfig+0x452>
 8004458:	e05c      	b.n	8004514 <HAL_RCC_OscConfig+0x52c>
 800445a:	4b10      	ldr	r3, [pc, #64]	@ (800449c <HAL_RCC_OscConfig+0x4b4>)
 800445c:	2200      	movs	r2, #0
 800445e:	601a      	str	r2, [r3, #0]
 8004460:	f7fe fb60 	bl	8002b24 <HAL_GetTick>
 8004464:	6138      	str	r0, [r7, #16]
 8004466:	e008      	b.n	800447a <HAL_RCC_OscConfig+0x492>
 8004468:	f7fe fb5c 	bl	8002b24 <HAL_GetTick>
 800446c:	4602      	mov	r2, r0
 800446e:	693b      	ldr	r3, [r7, #16]
 8004470:	1ad3      	subs	r3, r2, r3
 8004472:	2b02      	cmp	r3, #2
 8004474:	d901      	bls.n	800447a <HAL_RCC_OscConfig+0x492>
 8004476:	2303      	movs	r3, #3
 8004478:	e04d      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 800447a:	4b06      	ldr	r3, [pc, #24]	@ (8004494 <HAL_RCC_OscConfig+0x4ac>)
 800447c:	681b      	ldr	r3, [r3, #0]
 800447e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8004482:	2b00      	cmp	r3, #0
 8004484:	d1f0      	bne.n	8004468 <HAL_RCC_OscConfig+0x480>
 8004486:	e045      	b.n	8004514 <HAL_RCC_OscConfig+0x52c>
 8004488:	687b      	ldr	r3, [r7, #4]
 800448a:	699b      	ldr	r3, [r3, #24]
 800448c:	2b01      	cmp	r3, #1
 800448e:	d107      	bne.n	80044a0 <HAL_RCC_OscConfig+0x4b8>
 8004490:	2301      	movs	r3, #1
 8004492:	e040      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 8004494:	40023800 	.word	0x40023800
 8004498:	40007000 	.word	0x40007000
 800449c:	42470060 	.word	0x42470060
 80044a0:	4b1f      	ldr	r3, [pc, #124]	@ (8004520 <HAL_RCC_OscConfig+0x538>)
 80044a2:	685b      	ldr	r3, [r3, #4]
 80044a4:	60fb      	str	r3, [r7, #12]
 80044a6:	687b      	ldr	r3, [r7, #4]
 80044a8:	699b      	ldr	r3, [r3, #24]
 80044aa:	2b01      	cmp	r3, #1
 80044ac:	d030      	beq.n	8004510 <HAL_RCC_OscConfig+0x528>
 80044ae:	68fb      	ldr	r3, [r7, #12]
 80044b0:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 80044b4:	687b      	ldr	r3, [r7, #4]
 80044b6:	69db      	ldr	r3, [r3, #28]
 80044b8:	429a      	cmp	r2, r3
 80044ba:	d129      	bne.n	8004510 <HAL_RCC_OscConfig+0x528>
 80044bc:	68fb      	ldr	r3, [r7, #12]
 80044be:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 80044c2:	687b      	ldr	r3, [r7, #4]
 80044c4:	6a1b      	ldr	r3, [r3, #32]
 80044c6:	429a      	cmp	r2, r3
 80044c8:	d122      	bne.n	8004510 <HAL_RCC_OscConfig+0x528>
 80044ca:	68fa      	ldr	r2, [r7, #12]
 80044cc:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 80044d0:	4013      	ands	r3, r2
 80044d2:	687a      	ldr	r2, [r7, #4]
 80044d4:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 80044d6:	0192      	lsls	r2, r2, #6
 80044d8:	4293      	cmp	r3, r2
 80044da:	d119      	bne.n	8004510 <HAL_RCC_OscConfig+0x528>
 80044dc:	68fb      	ldr	r3, [r7, #12]
 80044de:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 80044e2:	687b      	ldr	r3, [r7, #4]
 80044e4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80044e6:	085b      	lsrs	r3, r3, #1
 80044e8:	3b01      	subs	r3, #1
 80044ea:	041b      	lsls	r3, r3, #16
 80044ec:	429a      	cmp	r2, r3
 80044ee:	d10f      	bne.n	8004510 <HAL_RCC_OscConfig+0x528>
 80044f0:	68fb      	ldr	r3, [r7, #12]
 80044f2:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 80044f6:	687b      	ldr	r3, [r7, #4]
 80044f8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80044fa:	061b      	lsls	r3, r3, #24
 80044fc:	429a      	cmp	r2, r3
 80044fe:	d107      	bne.n	8004510 <HAL_RCC_OscConfig+0x528>
 8004500:	68fb      	ldr	r3, [r7, #12]
 8004502:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8004506:	687b      	ldr	r3, [r7, #4]
 8004508:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800450a:	071b      	lsls	r3, r3, #28
 800450c:	429a      	cmp	r2, r3
 800450e:	d001      	beq.n	8004514 <HAL_RCC_OscConfig+0x52c>
 8004510:	2301      	movs	r3, #1
 8004512:	e000      	b.n	8004516 <HAL_RCC_OscConfig+0x52e>
 8004514:	2300      	movs	r3, #0
 8004516:	4618      	mov	r0, r3
 8004518:	3718      	adds	r7, #24
 800451a:	46bd      	mov	sp, r7
 800451c:	bd80      	pop	{r7, pc}
 800451e:	bf00      	nop
 8004520:	40023800 	.word	0x40023800

08004524 <HAL_SPI_Init>:
 8004524:	b580      	push	{r7, lr}
 8004526:	b082      	sub	sp, #8
 8004528:	af00      	add	r7, sp, #0
 800452a:	6078      	str	r0, [r7, #4]
 800452c:	687b      	ldr	r3, [r7, #4]
 800452e:	2b00      	cmp	r3, #0
 8004530:	d101      	bne.n	8004536 <HAL_SPI_Init+0x12>
 8004532:	2301      	movs	r3, #1
 8004534:	e07b      	b.n	800462e <HAL_SPI_Init+0x10a>
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800453a:	2b00      	cmp	r3, #0
 800453c:	d108      	bne.n	8004550 <HAL_SPI_Init+0x2c>
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	685b      	ldr	r3, [r3, #4]
 8004542:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8004546:	d009      	beq.n	800455c <HAL_SPI_Init+0x38>
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	2200      	movs	r2, #0
 800454c:	61da      	str	r2, [r3, #28]
 800454e:	e005      	b.n	800455c <HAL_SPI_Init+0x38>
 8004550:	687b      	ldr	r3, [r7, #4]
 8004552:	2200      	movs	r2, #0
 8004554:	611a      	str	r2, [r3, #16]
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	2200      	movs	r2, #0
 800455a:	615a      	str	r2, [r3, #20]
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	2200      	movs	r2, #0
 8004560:	629a      	str	r2, [r3, #40]	@ 0x28
 8004562:	687b      	ldr	r3, [r7, #4]
 8004564:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004568:	b2db      	uxtb	r3, r3
 800456a:	2b00      	cmp	r3, #0
 800456c:	d106      	bne.n	800457c <HAL_SPI_Init+0x58>
 800456e:	687b      	ldr	r3, [r7, #4]
 8004570:	2200      	movs	r2, #0
 8004572:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004576:	6878      	ldr	r0, [r7, #4]
 8004578:	f7fd fe5c 	bl	8002234 <HAL_SPI_MspInit>
 800457c:	687b      	ldr	r3, [r7, #4]
 800457e:	2202      	movs	r2, #2
 8004580:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004584:	687b      	ldr	r3, [r7, #4]
 8004586:	681b      	ldr	r3, [r3, #0]
 8004588:	681a      	ldr	r2, [r3, #0]
 800458a:	687b      	ldr	r3, [r7, #4]
 800458c:	681b      	ldr	r3, [r3, #0]
 800458e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004592:	601a      	str	r2, [r3, #0]
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	685b      	ldr	r3, [r3, #4]
 8004598:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	689b      	ldr	r3, [r3, #8]
 80045a0:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 80045a4:	431a      	orrs	r2, r3
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	68db      	ldr	r3, [r3, #12]
 80045aa:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 80045ae:	431a      	orrs	r2, r3
 80045b0:	687b      	ldr	r3, [r7, #4]
 80045b2:	691b      	ldr	r3, [r3, #16]
 80045b4:	f003 0302 	and.w	r3, r3, #2
 80045b8:	431a      	orrs	r2, r3
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	695b      	ldr	r3, [r3, #20]
 80045be:	f003 0301 	and.w	r3, r3, #1
 80045c2:	431a      	orrs	r2, r3
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	699b      	ldr	r3, [r3, #24]
 80045c8:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 80045cc:	431a      	orrs	r2, r3
 80045ce:	687b      	ldr	r3, [r7, #4]
 80045d0:	69db      	ldr	r3, [r3, #28]
 80045d2:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 80045d6:	431a      	orrs	r2, r3
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	6a1b      	ldr	r3, [r3, #32]
 80045dc:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80045e0:	ea42 0103 	orr.w	r1, r2, r3
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80045e8:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 80045ec:	687b      	ldr	r3, [r7, #4]
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	430a      	orrs	r2, r1
 80045f2:	601a      	str	r2, [r3, #0]
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	699b      	ldr	r3, [r3, #24]
 80045f8:	0c1b      	lsrs	r3, r3, #16
 80045fa:	f003 0104 	and.w	r1, r3, #4
 80045fe:	687b      	ldr	r3, [r7, #4]
 8004600:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004602:	f003 0210 	and.w	r2, r3, #16
 8004606:	687b      	ldr	r3, [r7, #4]
 8004608:	681b      	ldr	r3, [r3, #0]
 800460a:	430a      	orrs	r2, r1
 800460c:	605a      	str	r2, [r3, #4]
 800460e:	687b      	ldr	r3, [r7, #4]
 8004610:	681b      	ldr	r3, [r3, #0]
 8004612:	69da      	ldr	r2, [r3, #28]
 8004614:	687b      	ldr	r3, [r7, #4]
 8004616:	681b      	ldr	r3, [r3, #0]
 8004618:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 800461c:	61da      	str	r2, [r3, #28]
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	2200      	movs	r2, #0
 8004622:	655a      	str	r2, [r3, #84]	@ 0x54
 8004624:	687b      	ldr	r3, [r7, #4]
 8004626:	2201      	movs	r2, #1
 8004628:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800462c:	2300      	movs	r3, #0
 800462e:	4618      	mov	r0, r3
 8004630:	3708      	adds	r7, #8
 8004632:	46bd      	mov	sp, r7
 8004634:	bd80      	pop	{r7, pc}

08004636 <HAL_SPI_TransmitReceive>:
 8004636:	b580      	push	{r7, lr}
 8004638:	b08a      	sub	sp, #40	@ 0x28
 800463a:	af00      	add	r7, sp, #0
 800463c:	60f8      	str	r0, [r7, #12]
 800463e:	60b9      	str	r1, [r7, #8]
 8004640:	607a      	str	r2, [r7, #4]
 8004642:	807b      	strh	r3, [r7, #2]
 8004644:	2301      	movs	r3, #1
 8004646:	627b      	str	r3, [r7, #36]	@ 0x24
 8004648:	f7fe fa6c 	bl	8002b24 <HAL_GetTick>
 800464c:	6238      	str	r0, [r7, #32]
 800464e:	68fb      	ldr	r3, [r7, #12]
 8004650:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8004654:	77fb      	strb	r3, [r7, #31]
 8004656:	68fb      	ldr	r3, [r7, #12]
 8004658:	685b      	ldr	r3, [r3, #4]
 800465a:	61bb      	str	r3, [r7, #24]
 800465c:	887b      	ldrh	r3, [r7, #2]
 800465e:	82fb      	strh	r3, [r7, #22]
 8004660:	7ffb      	ldrb	r3, [r7, #31]
 8004662:	2b01      	cmp	r3, #1
 8004664:	d00c      	beq.n	8004680 <HAL_SPI_TransmitReceive+0x4a>
 8004666:	69bb      	ldr	r3, [r7, #24]
 8004668:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 800466c:	d106      	bne.n	800467c <HAL_SPI_TransmitReceive+0x46>
 800466e:	68fb      	ldr	r3, [r7, #12]
 8004670:	689b      	ldr	r3, [r3, #8]
 8004672:	2b00      	cmp	r3, #0
 8004674:	d102      	bne.n	800467c <HAL_SPI_TransmitReceive+0x46>
 8004676:	7ffb      	ldrb	r3, [r7, #31]
 8004678:	2b04      	cmp	r3, #4
 800467a:	d001      	beq.n	8004680 <HAL_SPI_TransmitReceive+0x4a>
 800467c:	2302      	movs	r3, #2
 800467e:	e17f      	b.n	8004980 <HAL_SPI_TransmitReceive+0x34a>
 8004680:	68bb      	ldr	r3, [r7, #8]
 8004682:	2b00      	cmp	r3, #0
 8004684:	d005      	beq.n	8004692 <HAL_SPI_TransmitReceive+0x5c>
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	2b00      	cmp	r3, #0
 800468a:	d002      	beq.n	8004692 <HAL_SPI_TransmitReceive+0x5c>
 800468c:	887b      	ldrh	r3, [r7, #2]
 800468e:	2b00      	cmp	r3, #0
 8004690:	d101      	bne.n	8004696 <HAL_SPI_TransmitReceive+0x60>
 8004692:	2301      	movs	r3, #1
 8004694:	e174      	b.n	8004980 <HAL_SPI_TransmitReceive+0x34a>
 8004696:	68fb      	ldr	r3, [r7, #12]
 8004698:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 800469c:	2b01      	cmp	r3, #1
 800469e:	d101      	bne.n	80046a4 <HAL_SPI_TransmitReceive+0x6e>
 80046a0:	2302      	movs	r3, #2
 80046a2:	e16d      	b.n	8004980 <HAL_SPI_TransmitReceive+0x34a>
 80046a4:	68fb      	ldr	r3, [r7, #12]
 80046a6:	2201      	movs	r2, #1
 80046a8:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 80046ac:	68fb      	ldr	r3, [r7, #12]
 80046ae:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80046b2:	b2db      	uxtb	r3, r3
 80046b4:	2b04      	cmp	r3, #4
 80046b6:	d003      	beq.n	80046c0 <HAL_SPI_TransmitReceive+0x8a>
 80046b8:	68fb      	ldr	r3, [r7, #12]
 80046ba:	2205      	movs	r2, #5
 80046bc:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80046c0:	68fb      	ldr	r3, [r7, #12]
 80046c2:	2200      	movs	r2, #0
 80046c4:	655a      	str	r2, [r3, #84]	@ 0x54
 80046c6:	68fb      	ldr	r3, [r7, #12]
 80046c8:	687a      	ldr	r2, [r7, #4]
 80046ca:	639a      	str	r2, [r3, #56]	@ 0x38
 80046cc:	68fb      	ldr	r3, [r7, #12]
 80046ce:	887a      	ldrh	r2, [r7, #2]
 80046d0:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80046d2:	68fb      	ldr	r3, [r7, #12]
 80046d4:	887a      	ldrh	r2, [r7, #2]
 80046d6:	879a      	strh	r2, [r3, #60]	@ 0x3c
 80046d8:	68fb      	ldr	r3, [r7, #12]
 80046da:	68ba      	ldr	r2, [r7, #8]
 80046dc:	631a      	str	r2, [r3, #48]	@ 0x30
 80046de:	68fb      	ldr	r3, [r7, #12]
 80046e0:	887a      	ldrh	r2, [r7, #2]
 80046e2:	86da      	strh	r2, [r3, #54]	@ 0x36
 80046e4:	68fb      	ldr	r3, [r7, #12]
 80046e6:	887a      	ldrh	r2, [r7, #2]
 80046e8:	869a      	strh	r2, [r3, #52]	@ 0x34
 80046ea:	68fb      	ldr	r3, [r7, #12]
 80046ec:	2200      	movs	r2, #0
 80046ee:	641a      	str	r2, [r3, #64]	@ 0x40
 80046f0:	68fb      	ldr	r3, [r7, #12]
 80046f2:	2200      	movs	r2, #0
 80046f4:	645a      	str	r2, [r3, #68]	@ 0x44
 80046f6:	68fb      	ldr	r3, [r7, #12]
 80046f8:	681b      	ldr	r3, [r3, #0]
 80046fa:	681b      	ldr	r3, [r3, #0]
 80046fc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8004700:	2b40      	cmp	r3, #64	@ 0x40
 8004702:	d007      	beq.n	8004714 <HAL_SPI_TransmitReceive+0xde>
 8004704:	68fb      	ldr	r3, [r7, #12]
 8004706:	681b      	ldr	r3, [r3, #0]
 8004708:	681a      	ldr	r2, [r3, #0]
 800470a:	68fb      	ldr	r3, [r7, #12]
 800470c:	681b      	ldr	r3, [r3, #0]
 800470e:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 8004712:	601a      	str	r2, [r3, #0]
 8004714:	68fb      	ldr	r3, [r7, #12]
 8004716:	68db      	ldr	r3, [r3, #12]
 8004718:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 800471c:	d17e      	bne.n	800481c <HAL_SPI_TransmitReceive+0x1e6>
 800471e:	68fb      	ldr	r3, [r7, #12]
 8004720:	685b      	ldr	r3, [r3, #4]
 8004722:	2b00      	cmp	r3, #0
 8004724:	d002      	beq.n	800472c <HAL_SPI_TransmitReceive+0xf6>
 8004726:	8afb      	ldrh	r3, [r7, #22]
 8004728:	2b01      	cmp	r3, #1
 800472a:	d16c      	bne.n	8004806 <HAL_SPI_TransmitReceive+0x1d0>
 800472c:	68fb      	ldr	r3, [r7, #12]
 800472e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004730:	881a      	ldrh	r2, [r3, #0]
 8004732:	68fb      	ldr	r3, [r7, #12]
 8004734:	681b      	ldr	r3, [r3, #0]
 8004736:	60da      	str	r2, [r3, #12]
 8004738:	68fb      	ldr	r3, [r7, #12]
 800473a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800473c:	1c9a      	adds	r2, r3, #2
 800473e:	68fb      	ldr	r3, [r7, #12]
 8004740:	631a      	str	r2, [r3, #48]	@ 0x30
 8004742:	68fb      	ldr	r3, [r7, #12]
 8004744:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004746:	b29b      	uxth	r3, r3
 8004748:	3b01      	subs	r3, #1
 800474a:	b29a      	uxth	r2, r3
 800474c:	68fb      	ldr	r3, [r7, #12]
 800474e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004750:	e059      	b.n	8004806 <HAL_SPI_TransmitReceive+0x1d0>
 8004752:	68fb      	ldr	r3, [r7, #12]
 8004754:	681b      	ldr	r3, [r3, #0]
 8004756:	689b      	ldr	r3, [r3, #8]
 8004758:	f003 0302 	and.w	r3, r3, #2
 800475c:	2b02      	cmp	r3, #2
 800475e:	d11b      	bne.n	8004798 <HAL_SPI_TransmitReceive+0x162>
 8004760:	68fb      	ldr	r3, [r7, #12]
 8004762:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004764:	b29b      	uxth	r3, r3
 8004766:	2b00      	cmp	r3, #0
 8004768:	d016      	beq.n	8004798 <HAL_SPI_TransmitReceive+0x162>
 800476a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800476c:	2b01      	cmp	r3, #1
 800476e:	d113      	bne.n	8004798 <HAL_SPI_TransmitReceive+0x162>
 8004770:	68fb      	ldr	r3, [r7, #12]
 8004772:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004774:	881a      	ldrh	r2, [r3, #0]
 8004776:	68fb      	ldr	r3, [r7, #12]
 8004778:	681b      	ldr	r3, [r3, #0]
 800477a:	60da      	str	r2, [r3, #12]
 800477c:	68fb      	ldr	r3, [r7, #12]
 800477e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004780:	1c9a      	adds	r2, r3, #2
 8004782:	68fb      	ldr	r3, [r7, #12]
 8004784:	631a      	str	r2, [r3, #48]	@ 0x30
 8004786:	68fb      	ldr	r3, [r7, #12]
 8004788:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800478a:	b29b      	uxth	r3, r3
 800478c:	3b01      	subs	r3, #1
 800478e:	b29a      	uxth	r2, r3
 8004790:	68fb      	ldr	r3, [r7, #12]
 8004792:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004794:	2300      	movs	r3, #0
 8004796:	627b      	str	r3, [r7, #36]	@ 0x24
 8004798:	68fb      	ldr	r3, [r7, #12]
 800479a:	681b      	ldr	r3, [r3, #0]
 800479c:	689b      	ldr	r3, [r3, #8]
 800479e:	f003 0301 	and.w	r3, r3, #1
 80047a2:	2b01      	cmp	r3, #1
 80047a4:	d119      	bne.n	80047da <HAL_SPI_TransmitReceive+0x1a4>
 80047a6:	68fb      	ldr	r3, [r7, #12]
 80047a8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80047aa:	b29b      	uxth	r3, r3
 80047ac:	2b00      	cmp	r3, #0
 80047ae:	d014      	beq.n	80047da <HAL_SPI_TransmitReceive+0x1a4>
 80047b0:	68fb      	ldr	r3, [r7, #12]
 80047b2:	681b      	ldr	r3, [r3, #0]
 80047b4:	68da      	ldr	r2, [r3, #12]
 80047b6:	68fb      	ldr	r3, [r7, #12]
 80047b8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80047ba:	b292      	uxth	r2, r2
 80047bc:	801a      	strh	r2, [r3, #0]
 80047be:	68fb      	ldr	r3, [r7, #12]
 80047c0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80047c2:	1c9a      	adds	r2, r3, #2
 80047c4:	68fb      	ldr	r3, [r7, #12]
 80047c6:	639a      	str	r2, [r3, #56]	@ 0x38
 80047c8:	68fb      	ldr	r3, [r7, #12]
 80047ca:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80047cc:	b29b      	uxth	r3, r3
 80047ce:	3b01      	subs	r3, #1
 80047d0:	b29a      	uxth	r2, r3
 80047d2:	68fb      	ldr	r3, [r7, #12]
 80047d4:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80047d6:	2301      	movs	r3, #1
 80047d8:	627b      	str	r3, [r7, #36]	@ 0x24
 80047da:	f7fe f9a3 	bl	8002b24 <HAL_GetTick>
 80047de:	4602      	mov	r2, r0
 80047e0:	6a3b      	ldr	r3, [r7, #32]
 80047e2:	1ad3      	subs	r3, r2, r3
 80047e4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80047e6:	429a      	cmp	r2, r3
 80047e8:	d80d      	bhi.n	8004806 <HAL_SPI_TransmitReceive+0x1d0>
 80047ea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80047ec:	f1b3 3fff 	cmp.w	r3, #4294967295
 80047f0:	d009      	beq.n	8004806 <HAL_SPI_TransmitReceive+0x1d0>
 80047f2:	68fb      	ldr	r3, [r7, #12]
 80047f4:	2201      	movs	r2, #1
 80047f6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 80047fa:	68fb      	ldr	r3, [r7, #12]
 80047fc:	2200      	movs	r2, #0
 80047fe:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004802:	2303      	movs	r3, #3
 8004804:	e0bc      	b.n	8004980 <HAL_SPI_TransmitReceive+0x34a>
 8004806:	68fb      	ldr	r3, [r7, #12]
 8004808:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800480a:	b29b      	uxth	r3, r3
 800480c:	2b00      	cmp	r3, #0
 800480e:	d1a0      	bne.n	8004752 <HAL_SPI_TransmitReceive+0x11c>
 8004810:	68fb      	ldr	r3, [r7, #12]
 8004812:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8004814:	b29b      	uxth	r3, r3
 8004816:	2b00      	cmp	r3, #0
 8004818:	d19b      	bne.n	8004752 <HAL_SPI_TransmitReceive+0x11c>
 800481a:	e082      	b.n	8004922 <HAL_SPI_TransmitReceive+0x2ec>
 800481c:	68fb      	ldr	r3, [r7, #12]
 800481e:	685b      	ldr	r3, [r3, #4]
 8004820:	2b00      	cmp	r3, #0
 8004822:	d002      	beq.n	800482a <HAL_SPI_TransmitReceive+0x1f4>
 8004824:	8afb      	ldrh	r3, [r7, #22]
 8004826:	2b01      	cmp	r3, #1
 8004828:	d171      	bne.n	800490e <HAL_SPI_TransmitReceive+0x2d8>
 800482a:	68fb      	ldr	r3, [r7, #12]
 800482c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800482e:	68fb      	ldr	r3, [r7, #12]
 8004830:	681b      	ldr	r3, [r3, #0]
 8004832:	330c      	adds	r3, #12
 8004834:	7812      	ldrb	r2, [r2, #0]
 8004836:	701a      	strb	r2, [r3, #0]
 8004838:	68fb      	ldr	r3, [r7, #12]
 800483a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800483c:	1c5a      	adds	r2, r3, #1
 800483e:	68fb      	ldr	r3, [r7, #12]
 8004840:	631a      	str	r2, [r3, #48]	@ 0x30
 8004842:	68fb      	ldr	r3, [r7, #12]
 8004844:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004846:	b29b      	uxth	r3, r3
 8004848:	3b01      	subs	r3, #1
 800484a:	b29a      	uxth	r2, r3
 800484c:	68fb      	ldr	r3, [r7, #12]
 800484e:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004850:	e05d      	b.n	800490e <HAL_SPI_TransmitReceive+0x2d8>
 8004852:	68fb      	ldr	r3, [r7, #12]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	689b      	ldr	r3, [r3, #8]
 8004858:	f003 0302 	and.w	r3, r3, #2
 800485c:	2b02      	cmp	r3, #2
 800485e:	d11c      	bne.n	800489a <HAL_SPI_TransmitReceive+0x264>
 8004860:	68fb      	ldr	r3, [r7, #12]
 8004862:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004864:	b29b      	uxth	r3, r3
 8004866:	2b00      	cmp	r3, #0
 8004868:	d017      	beq.n	800489a <HAL_SPI_TransmitReceive+0x264>
 800486a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800486c:	2b01      	cmp	r3, #1
 800486e:	d114      	bne.n	800489a <HAL_SPI_TransmitReceive+0x264>
 8004870:	68fb      	ldr	r3, [r7, #12]
 8004872:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8004874:	68fb      	ldr	r3, [r7, #12]
 8004876:	681b      	ldr	r3, [r3, #0]
 8004878:	330c      	adds	r3, #12
 800487a:	7812      	ldrb	r2, [r2, #0]
 800487c:	701a      	strb	r2, [r3, #0]
 800487e:	68fb      	ldr	r3, [r7, #12]
 8004880:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004882:	1c5a      	adds	r2, r3, #1
 8004884:	68fb      	ldr	r3, [r7, #12]
 8004886:	631a      	str	r2, [r3, #48]	@ 0x30
 8004888:	68fb      	ldr	r3, [r7, #12]
 800488a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800488c:	b29b      	uxth	r3, r3
 800488e:	3b01      	subs	r3, #1
 8004890:	b29a      	uxth	r2, r3
 8004892:	68fb      	ldr	r3, [r7, #12]
 8004894:	86da      	strh	r2, [r3, #54]	@ 0x36
 8004896:	2300      	movs	r3, #0
 8004898:	627b      	str	r3, [r7, #36]	@ 0x24
 800489a:	68fb      	ldr	r3, [r7, #12]
 800489c:	681b      	ldr	r3, [r3, #0]
 800489e:	689b      	ldr	r3, [r3, #8]
 80048a0:	f003 0301 	and.w	r3, r3, #1
 80048a4:	2b01      	cmp	r3, #1
 80048a6:	d119      	bne.n	80048dc <HAL_SPI_TransmitReceive+0x2a6>
 80048a8:	68fb      	ldr	r3, [r7, #12]
 80048aa:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80048ac:	b29b      	uxth	r3, r3
 80048ae:	2b00      	cmp	r3, #0
 80048b0:	d014      	beq.n	80048dc <HAL_SPI_TransmitReceive+0x2a6>
 80048b2:	68fb      	ldr	r3, [r7, #12]
 80048b4:	681b      	ldr	r3, [r3, #0]
 80048b6:	68da      	ldr	r2, [r3, #12]
 80048b8:	68fb      	ldr	r3, [r7, #12]
 80048ba:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80048bc:	b2d2      	uxtb	r2, r2
 80048be:	701a      	strb	r2, [r3, #0]
 80048c0:	68fb      	ldr	r3, [r7, #12]
 80048c2:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80048c4:	1c5a      	adds	r2, r3, #1
 80048c6:	68fb      	ldr	r3, [r7, #12]
 80048c8:	639a      	str	r2, [r3, #56]	@ 0x38
 80048ca:	68fb      	ldr	r3, [r7, #12]
 80048cc:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80048ce:	b29b      	uxth	r3, r3
 80048d0:	3b01      	subs	r3, #1
 80048d2:	b29a      	uxth	r2, r3
 80048d4:	68fb      	ldr	r3, [r7, #12]
 80048d6:	87da      	strh	r2, [r3, #62]	@ 0x3e
 80048d8:	2301      	movs	r3, #1
 80048da:	627b      	str	r3, [r7, #36]	@ 0x24
 80048dc:	f7fe f922 	bl	8002b24 <HAL_GetTick>
 80048e0:	4602      	mov	r2, r0
 80048e2:	6a3b      	ldr	r3, [r7, #32]
 80048e4:	1ad3      	subs	r3, r2, r3
 80048e6:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80048e8:	429a      	cmp	r2, r3
 80048ea:	d803      	bhi.n	80048f4 <HAL_SPI_TransmitReceive+0x2be>
 80048ec:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80048ee:	f1b3 3fff 	cmp.w	r3, #4294967295
 80048f2:	d102      	bne.n	80048fa <HAL_SPI_TransmitReceive+0x2c4>
 80048f4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80048f6:	2b00      	cmp	r3, #0
 80048f8:	d109      	bne.n	800490e <HAL_SPI_TransmitReceive+0x2d8>
 80048fa:	68fb      	ldr	r3, [r7, #12]
 80048fc:	2201      	movs	r2, #1
 80048fe:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004902:	68fb      	ldr	r3, [r7, #12]
 8004904:	2200      	movs	r2, #0
 8004906:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 800490a:	2303      	movs	r3, #3
 800490c:	e038      	b.n	8004980 <HAL_SPI_TransmitReceive+0x34a>
 800490e:	68fb      	ldr	r3, [r7, #12]
 8004910:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8004912:	b29b      	uxth	r3, r3
 8004914:	2b00      	cmp	r3, #0
 8004916:	d19c      	bne.n	8004852 <HAL_SPI_TransmitReceive+0x21c>
 8004918:	68fb      	ldr	r3, [r7, #12]
 800491a:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800491c:	b29b      	uxth	r3, r3
 800491e:	2b00      	cmp	r3, #0
 8004920:	d197      	bne.n	8004852 <HAL_SPI_TransmitReceive+0x21c>
 8004922:	6a3a      	ldr	r2, [r7, #32]
 8004924:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004926:	68f8      	ldr	r0, [r7, #12]
 8004928:	f000 f8b6 	bl	8004a98 <SPI_EndRxTxTransaction>
 800492c:	4603      	mov	r3, r0
 800492e:	2b00      	cmp	r3, #0
 8004930:	d008      	beq.n	8004944 <HAL_SPI_TransmitReceive+0x30e>
 8004932:	68fb      	ldr	r3, [r7, #12]
 8004934:	2220      	movs	r2, #32
 8004936:	655a      	str	r2, [r3, #84]	@ 0x54
 8004938:	68fb      	ldr	r3, [r7, #12]
 800493a:	2200      	movs	r2, #0
 800493c:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004940:	2301      	movs	r3, #1
 8004942:	e01d      	b.n	8004980 <HAL_SPI_TransmitReceive+0x34a>
 8004944:	68fb      	ldr	r3, [r7, #12]
 8004946:	689b      	ldr	r3, [r3, #8]
 8004948:	2b00      	cmp	r3, #0
 800494a:	d10a      	bne.n	8004962 <HAL_SPI_TransmitReceive+0x32c>
 800494c:	2300      	movs	r3, #0
 800494e:	613b      	str	r3, [r7, #16]
 8004950:	68fb      	ldr	r3, [r7, #12]
 8004952:	681b      	ldr	r3, [r3, #0]
 8004954:	68db      	ldr	r3, [r3, #12]
 8004956:	613b      	str	r3, [r7, #16]
 8004958:	68fb      	ldr	r3, [r7, #12]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	689b      	ldr	r3, [r3, #8]
 800495e:	613b      	str	r3, [r7, #16]
 8004960:	693b      	ldr	r3, [r7, #16]
 8004962:	68fb      	ldr	r3, [r7, #12]
 8004964:	2201      	movs	r2, #1
 8004966:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 800496a:	68fb      	ldr	r3, [r7, #12]
 800496c:	2200      	movs	r2, #0
 800496e:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004972:	68fb      	ldr	r3, [r7, #12]
 8004974:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004976:	2b00      	cmp	r3, #0
 8004978:	d001      	beq.n	800497e <HAL_SPI_TransmitReceive+0x348>
 800497a:	2301      	movs	r3, #1
 800497c:	e000      	b.n	8004980 <HAL_SPI_TransmitReceive+0x34a>
 800497e:	2300      	movs	r3, #0
 8004980:	4618      	mov	r0, r3
 8004982:	3728      	adds	r7, #40	@ 0x28
 8004984:	46bd      	mov	sp, r7
 8004986:	bd80      	pop	{r7, pc}

08004988 <SPI_WaitFlagStateUntilTimeout>:
 8004988:	b580      	push	{r7, lr}
 800498a:	b088      	sub	sp, #32
 800498c:	af00      	add	r7, sp, #0
 800498e:	60f8      	str	r0, [r7, #12]
 8004990:	60b9      	str	r1, [r7, #8]
 8004992:	603b      	str	r3, [r7, #0]
 8004994:	4613      	mov	r3, r2
 8004996:	71fb      	strb	r3, [r7, #7]
 8004998:	f7fe f8c4 	bl	8002b24 <HAL_GetTick>
 800499c:	4602      	mov	r2, r0
 800499e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80049a0:	1a9b      	subs	r3, r3, r2
 80049a2:	683a      	ldr	r2, [r7, #0]
 80049a4:	4413      	add	r3, r2
 80049a6:	61fb      	str	r3, [r7, #28]
 80049a8:	f7fe f8bc 	bl	8002b24 <HAL_GetTick>
 80049ac:	61b8      	str	r0, [r7, #24]
 80049ae:	4b39      	ldr	r3, [pc, #228]	@ (8004a94 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 80049b0:	681b      	ldr	r3, [r3, #0]
 80049b2:	015b      	lsls	r3, r3, #5
 80049b4:	0d1b      	lsrs	r3, r3, #20
 80049b6:	69fa      	ldr	r2, [r7, #28]
 80049b8:	fb02 f303 	mul.w	r3, r2, r3
 80049bc:	617b      	str	r3, [r7, #20]
 80049be:	e055      	b.n	8004a6c <SPI_WaitFlagStateUntilTimeout+0xe4>
 80049c0:	683b      	ldr	r3, [r7, #0]
 80049c2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80049c6:	d051      	beq.n	8004a6c <SPI_WaitFlagStateUntilTimeout+0xe4>
 80049c8:	f7fe f8ac 	bl	8002b24 <HAL_GetTick>
 80049cc:	4602      	mov	r2, r0
 80049ce:	69bb      	ldr	r3, [r7, #24]
 80049d0:	1ad3      	subs	r3, r2, r3
 80049d2:	69fa      	ldr	r2, [r7, #28]
 80049d4:	429a      	cmp	r2, r3
 80049d6:	d902      	bls.n	80049de <SPI_WaitFlagStateUntilTimeout+0x56>
 80049d8:	69fb      	ldr	r3, [r7, #28]
 80049da:	2b00      	cmp	r3, #0
 80049dc:	d13d      	bne.n	8004a5a <SPI_WaitFlagStateUntilTimeout+0xd2>
 80049de:	68fb      	ldr	r3, [r7, #12]
 80049e0:	681b      	ldr	r3, [r3, #0]
 80049e2:	685a      	ldr	r2, [r3, #4]
 80049e4:	68fb      	ldr	r3, [r7, #12]
 80049e6:	681b      	ldr	r3, [r3, #0]
 80049e8:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 80049ec:	605a      	str	r2, [r3, #4]
 80049ee:	68fb      	ldr	r3, [r7, #12]
 80049f0:	685b      	ldr	r3, [r3, #4]
 80049f2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80049f6:	d111      	bne.n	8004a1c <SPI_WaitFlagStateUntilTimeout+0x94>
 80049f8:	68fb      	ldr	r3, [r7, #12]
 80049fa:	689b      	ldr	r3, [r3, #8]
 80049fc:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8004a00:	d004      	beq.n	8004a0c <SPI_WaitFlagStateUntilTimeout+0x84>
 8004a02:	68fb      	ldr	r3, [r7, #12]
 8004a04:	689b      	ldr	r3, [r3, #8]
 8004a06:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8004a0a:	d107      	bne.n	8004a1c <SPI_WaitFlagStateUntilTimeout+0x94>
 8004a0c:	68fb      	ldr	r3, [r7, #12]
 8004a0e:	681b      	ldr	r3, [r3, #0]
 8004a10:	681a      	ldr	r2, [r3, #0]
 8004a12:	68fb      	ldr	r3, [r7, #12]
 8004a14:	681b      	ldr	r3, [r3, #0]
 8004a16:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8004a1a:	601a      	str	r2, [r3, #0]
 8004a1c:	68fb      	ldr	r3, [r7, #12]
 8004a1e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004a20:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8004a24:	d10f      	bne.n	8004a46 <SPI_WaitFlagStateUntilTimeout+0xbe>
 8004a26:	68fb      	ldr	r3, [r7, #12]
 8004a28:	681b      	ldr	r3, [r3, #0]
 8004a2a:	681a      	ldr	r2, [r3, #0]
 8004a2c:	68fb      	ldr	r3, [r7, #12]
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8004a34:	601a      	str	r2, [r3, #0]
 8004a36:	68fb      	ldr	r3, [r7, #12]
 8004a38:	681b      	ldr	r3, [r3, #0]
 8004a3a:	681a      	ldr	r2, [r3, #0]
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8004a44:	601a      	str	r2, [r3, #0]
 8004a46:	68fb      	ldr	r3, [r7, #12]
 8004a48:	2201      	movs	r2, #1
 8004a4a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
 8004a4e:	68fb      	ldr	r3, [r7, #12]
 8004a50:	2200      	movs	r2, #0
 8004a52:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
 8004a56:	2303      	movs	r3, #3
 8004a58:	e018      	b.n	8004a8c <SPI_WaitFlagStateUntilTimeout+0x104>
 8004a5a:	697b      	ldr	r3, [r7, #20]
 8004a5c:	2b00      	cmp	r3, #0
 8004a5e:	d102      	bne.n	8004a66 <SPI_WaitFlagStateUntilTimeout+0xde>
 8004a60:	2300      	movs	r3, #0
 8004a62:	61fb      	str	r3, [r7, #28]
 8004a64:	e002      	b.n	8004a6c <SPI_WaitFlagStateUntilTimeout+0xe4>
 8004a66:	697b      	ldr	r3, [r7, #20]
 8004a68:	3b01      	subs	r3, #1
 8004a6a:	617b      	str	r3, [r7, #20]
 8004a6c:	68fb      	ldr	r3, [r7, #12]
 8004a6e:	681b      	ldr	r3, [r3, #0]
 8004a70:	689a      	ldr	r2, [r3, #8]
 8004a72:	68bb      	ldr	r3, [r7, #8]
 8004a74:	4013      	ands	r3, r2
 8004a76:	68ba      	ldr	r2, [r7, #8]
 8004a78:	429a      	cmp	r2, r3
 8004a7a:	bf0c      	ite	eq
 8004a7c:	2301      	moveq	r3, #1
 8004a7e:	2300      	movne	r3, #0
 8004a80:	b2db      	uxtb	r3, r3
 8004a82:	461a      	mov	r2, r3
 8004a84:	79fb      	ldrb	r3, [r7, #7]
 8004a86:	429a      	cmp	r2, r3
 8004a88:	d19a      	bne.n	80049c0 <SPI_WaitFlagStateUntilTimeout+0x38>
 8004a8a:	2300      	movs	r3, #0
 8004a8c:	4618      	mov	r0, r3
 8004a8e:	3720      	adds	r7, #32
 8004a90:	46bd      	mov	sp, r7
 8004a92:	bd80      	pop	{r7, pc}
 8004a94:	20000000 	.word	0x20000000

08004a98 <SPI_EndRxTxTransaction>:
 8004a98:	b580      	push	{r7, lr}
 8004a9a:	b088      	sub	sp, #32
 8004a9c:	af02      	add	r7, sp, #8
 8004a9e:	60f8      	str	r0, [r7, #12]
 8004aa0:	60b9      	str	r1, [r7, #8]
 8004aa2:	607a      	str	r2, [r7, #4]
 8004aa4:	687b      	ldr	r3, [r7, #4]
 8004aa6:	9300      	str	r3, [sp, #0]
 8004aa8:	68bb      	ldr	r3, [r7, #8]
 8004aaa:	2201      	movs	r2, #1
 8004aac:	2102      	movs	r1, #2
 8004aae:	68f8      	ldr	r0, [r7, #12]
 8004ab0:	f7ff ff6a 	bl	8004988 <SPI_WaitFlagStateUntilTimeout>
 8004ab4:	4603      	mov	r3, r0
 8004ab6:	2b00      	cmp	r3, #0
 8004ab8:	d007      	beq.n	8004aca <SPI_EndRxTxTransaction+0x32>
 8004aba:	68fb      	ldr	r3, [r7, #12]
 8004abc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004abe:	f043 0220 	orr.w	r2, r3, #32
 8004ac2:	68fb      	ldr	r3, [r7, #12]
 8004ac4:	655a      	str	r2, [r3, #84]	@ 0x54
 8004ac6:	2303      	movs	r3, #3
 8004ac8:	e032      	b.n	8004b30 <SPI_EndRxTxTransaction+0x98>
 8004aca:	4b1b      	ldr	r3, [pc, #108]	@ (8004b38 <SPI_EndRxTxTransaction+0xa0>)
 8004acc:	681b      	ldr	r3, [r3, #0]
 8004ace:	4a1b      	ldr	r2, [pc, #108]	@ (8004b3c <SPI_EndRxTxTransaction+0xa4>)
 8004ad0:	fba2 2303 	umull	r2, r3, r2, r3
 8004ad4:	0d5b      	lsrs	r3, r3, #21
 8004ad6:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8004ada:	fb02 f303 	mul.w	r3, r2, r3
 8004ade:	617b      	str	r3, [r7, #20]
 8004ae0:	68fb      	ldr	r3, [r7, #12]
 8004ae2:	685b      	ldr	r3, [r3, #4]
 8004ae4:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8004ae8:	d112      	bne.n	8004b10 <SPI_EndRxTxTransaction+0x78>
 8004aea:	687b      	ldr	r3, [r7, #4]
 8004aec:	9300      	str	r3, [sp, #0]
 8004aee:	68bb      	ldr	r3, [r7, #8]
 8004af0:	2200      	movs	r2, #0
 8004af2:	2180      	movs	r1, #128	@ 0x80
 8004af4:	68f8      	ldr	r0, [r7, #12]
 8004af6:	f7ff ff47 	bl	8004988 <SPI_WaitFlagStateUntilTimeout>
 8004afa:	4603      	mov	r3, r0
 8004afc:	2b00      	cmp	r3, #0
 8004afe:	d016      	beq.n	8004b2e <SPI_EndRxTxTransaction+0x96>
 8004b00:	68fb      	ldr	r3, [r7, #12]
 8004b02:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8004b04:	f043 0220 	orr.w	r2, r3, #32
 8004b08:	68fb      	ldr	r3, [r7, #12]
 8004b0a:	655a      	str	r2, [r3, #84]	@ 0x54
 8004b0c:	2303      	movs	r3, #3
 8004b0e:	e00f      	b.n	8004b30 <SPI_EndRxTxTransaction+0x98>
 8004b10:	697b      	ldr	r3, [r7, #20]
 8004b12:	2b00      	cmp	r3, #0
 8004b14:	d00a      	beq.n	8004b2c <SPI_EndRxTxTransaction+0x94>
 8004b16:	697b      	ldr	r3, [r7, #20]
 8004b18:	3b01      	subs	r3, #1
 8004b1a:	617b      	str	r3, [r7, #20]
 8004b1c:	68fb      	ldr	r3, [r7, #12]
 8004b1e:	681b      	ldr	r3, [r3, #0]
 8004b20:	689b      	ldr	r3, [r3, #8]
 8004b22:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8004b26:	2b80      	cmp	r3, #128	@ 0x80
 8004b28:	d0f2      	beq.n	8004b10 <SPI_EndRxTxTransaction+0x78>
 8004b2a:	e000      	b.n	8004b2e <SPI_EndRxTxTransaction+0x96>
 8004b2c:	bf00      	nop
 8004b2e:	2300      	movs	r3, #0
 8004b30:	4618      	mov	r0, r3
 8004b32:	3718      	adds	r7, #24
 8004b34:	46bd      	mov	sp, r7
 8004b36:	bd80      	pop	{r7, pc}
 8004b38:	20000000 	.word	0x20000000
 8004b3c:	165e9f81 	.word	0x165e9f81

08004b40 <HAL_TIM_Base_Init>:
 8004b40:	b580      	push	{r7, lr}
 8004b42:	b082      	sub	sp, #8
 8004b44:	af00      	add	r7, sp, #0
 8004b46:	6078      	str	r0, [r7, #4]
 8004b48:	687b      	ldr	r3, [r7, #4]
 8004b4a:	2b00      	cmp	r3, #0
 8004b4c:	d101      	bne.n	8004b52 <HAL_TIM_Base_Init+0x12>
 8004b4e:	2301      	movs	r3, #1
 8004b50:	e041      	b.n	8004bd6 <HAL_TIM_Base_Init+0x96>
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004b58:	b2db      	uxtb	r3, r3
 8004b5a:	2b00      	cmp	r3, #0
 8004b5c:	d106      	bne.n	8004b6c <HAL_TIM_Base_Init+0x2c>
 8004b5e:	687b      	ldr	r3, [r7, #4]
 8004b60:	2200      	movs	r2, #0
 8004b62:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004b66:	6878      	ldr	r0, [r7, #4]
 8004b68:	f7fd fe16 	bl	8002798 <HAL_TIM_Base_MspInit>
 8004b6c:	687b      	ldr	r3, [r7, #4]
 8004b6e:	2202      	movs	r2, #2
 8004b70:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	681a      	ldr	r2, [r3, #0]
 8004b78:	687b      	ldr	r3, [r7, #4]
 8004b7a:	3304      	adds	r3, #4
 8004b7c:	4619      	mov	r1, r3
 8004b7e:	4610      	mov	r0, r2
 8004b80:	f000 ff18 	bl	80059b4 <TIM_Base_SetConfig>
 8004b84:	687b      	ldr	r3, [r7, #4]
 8004b86:	2201      	movs	r2, #1
 8004b88:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004b8c:	687b      	ldr	r3, [r7, #4]
 8004b8e:	2201      	movs	r2, #1
 8004b90:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004b94:	687b      	ldr	r3, [r7, #4]
 8004b96:	2201      	movs	r2, #1
 8004b98:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004b9c:	687b      	ldr	r3, [r7, #4]
 8004b9e:	2201      	movs	r2, #1
 8004ba0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004ba4:	687b      	ldr	r3, [r7, #4]
 8004ba6:	2201      	movs	r2, #1
 8004ba8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004bac:	687b      	ldr	r3, [r7, #4]
 8004bae:	2201      	movs	r2, #1
 8004bb0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	2201      	movs	r2, #1
 8004bb8:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004bbc:	687b      	ldr	r3, [r7, #4]
 8004bbe:	2201      	movs	r2, #1
 8004bc0:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004bc4:	687b      	ldr	r3, [r7, #4]
 8004bc6:	2201      	movs	r2, #1
 8004bc8:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004bcc:	687b      	ldr	r3, [r7, #4]
 8004bce:	2201      	movs	r2, #1
 8004bd0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004bd4:	2300      	movs	r3, #0
 8004bd6:	4618      	mov	r0, r3
 8004bd8:	3708      	adds	r7, #8
 8004bda:	46bd      	mov	sp, r7
 8004bdc:	bd80      	pop	{r7, pc}
	...

08004be0 <HAL_TIM_Base_Start>:
 8004be0:	b480      	push	{r7}
 8004be2:	b085      	sub	sp, #20
 8004be4:	af00      	add	r7, sp, #0
 8004be6:	6078      	str	r0, [r7, #4]
 8004be8:	687b      	ldr	r3, [r7, #4]
 8004bea:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004bee:	b2db      	uxtb	r3, r3
 8004bf0:	2b01      	cmp	r3, #1
 8004bf2:	d001      	beq.n	8004bf8 <HAL_TIM_Base_Start+0x18>
 8004bf4:	2301      	movs	r3, #1
 8004bf6:	e046      	b.n	8004c86 <HAL_TIM_Base_Start+0xa6>
 8004bf8:	687b      	ldr	r3, [r7, #4]
 8004bfa:	2202      	movs	r2, #2
 8004bfc:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004c00:	687b      	ldr	r3, [r7, #4]
 8004c02:	681b      	ldr	r3, [r3, #0]
 8004c04:	4a23      	ldr	r2, [pc, #140]	@ (8004c94 <HAL_TIM_Base_Start+0xb4>)
 8004c06:	4293      	cmp	r3, r2
 8004c08:	d022      	beq.n	8004c50 <HAL_TIM_Base_Start+0x70>
 8004c0a:	687b      	ldr	r3, [r7, #4]
 8004c0c:	681b      	ldr	r3, [r3, #0]
 8004c0e:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004c12:	d01d      	beq.n	8004c50 <HAL_TIM_Base_Start+0x70>
 8004c14:	687b      	ldr	r3, [r7, #4]
 8004c16:	681b      	ldr	r3, [r3, #0]
 8004c18:	4a1f      	ldr	r2, [pc, #124]	@ (8004c98 <HAL_TIM_Base_Start+0xb8>)
 8004c1a:	4293      	cmp	r3, r2
 8004c1c:	d018      	beq.n	8004c50 <HAL_TIM_Base_Start+0x70>
 8004c1e:	687b      	ldr	r3, [r7, #4]
 8004c20:	681b      	ldr	r3, [r3, #0]
 8004c22:	4a1e      	ldr	r2, [pc, #120]	@ (8004c9c <HAL_TIM_Base_Start+0xbc>)
 8004c24:	4293      	cmp	r3, r2
 8004c26:	d013      	beq.n	8004c50 <HAL_TIM_Base_Start+0x70>
 8004c28:	687b      	ldr	r3, [r7, #4]
 8004c2a:	681b      	ldr	r3, [r3, #0]
 8004c2c:	4a1c      	ldr	r2, [pc, #112]	@ (8004ca0 <HAL_TIM_Base_Start+0xc0>)
 8004c2e:	4293      	cmp	r3, r2
 8004c30:	d00e      	beq.n	8004c50 <HAL_TIM_Base_Start+0x70>
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	681b      	ldr	r3, [r3, #0]
 8004c36:	4a1b      	ldr	r2, [pc, #108]	@ (8004ca4 <HAL_TIM_Base_Start+0xc4>)
 8004c38:	4293      	cmp	r3, r2
 8004c3a:	d009      	beq.n	8004c50 <HAL_TIM_Base_Start+0x70>
 8004c3c:	687b      	ldr	r3, [r7, #4]
 8004c3e:	681b      	ldr	r3, [r3, #0]
 8004c40:	4a19      	ldr	r2, [pc, #100]	@ (8004ca8 <HAL_TIM_Base_Start+0xc8>)
 8004c42:	4293      	cmp	r3, r2
 8004c44:	d004      	beq.n	8004c50 <HAL_TIM_Base_Start+0x70>
 8004c46:	687b      	ldr	r3, [r7, #4]
 8004c48:	681b      	ldr	r3, [r3, #0]
 8004c4a:	4a18      	ldr	r2, [pc, #96]	@ (8004cac <HAL_TIM_Base_Start+0xcc>)
 8004c4c:	4293      	cmp	r3, r2
 8004c4e:	d111      	bne.n	8004c74 <HAL_TIM_Base_Start+0x94>
 8004c50:	687b      	ldr	r3, [r7, #4]
 8004c52:	681b      	ldr	r3, [r3, #0]
 8004c54:	689b      	ldr	r3, [r3, #8]
 8004c56:	f003 0307 	and.w	r3, r3, #7
 8004c5a:	60fb      	str	r3, [r7, #12]
 8004c5c:	68fb      	ldr	r3, [r7, #12]
 8004c5e:	2b06      	cmp	r3, #6
 8004c60:	d010      	beq.n	8004c84 <HAL_TIM_Base_Start+0xa4>
 8004c62:	687b      	ldr	r3, [r7, #4]
 8004c64:	681b      	ldr	r3, [r3, #0]
 8004c66:	681a      	ldr	r2, [r3, #0]
 8004c68:	687b      	ldr	r3, [r7, #4]
 8004c6a:	681b      	ldr	r3, [r3, #0]
 8004c6c:	f042 0201 	orr.w	r2, r2, #1
 8004c70:	601a      	str	r2, [r3, #0]
 8004c72:	e007      	b.n	8004c84 <HAL_TIM_Base_Start+0xa4>
 8004c74:	687b      	ldr	r3, [r7, #4]
 8004c76:	681b      	ldr	r3, [r3, #0]
 8004c78:	681a      	ldr	r2, [r3, #0]
 8004c7a:	687b      	ldr	r3, [r7, #4]
 8004c7c:	681b      	ldr	r3, [r3, #0]
 8004c7e:	f042 0201 	orr.w	r2, r2, #1
 8004c82:	601a      	str	r2, [r3, #0]
 8004c84:	2300      	movs	r3, #0
 8004c86:	4618      	mov	r0, r3
 8004c88:	3714      	adds	r7, #20
 8004c8a:	46bd      	mov	sp, r7
 8004c8c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c90:	4770      	bx	lr
 8004c92:	bf00      	nop
 8004c94:	40010000 	.word	0x40010000
 8004c98:	40000400 	.word	0x40000400
 8004c9c:	40000800 	.word	0x40000800
 8004ca0:	40000c00 	.word	0x40000c00
 8004ca4:	40010400 	.word	0x40010400
 8004ca8:	40014000 	.word	0x40014000
 8004cac:	40001800 	.word	0x40001800

08004cb0 <HAL_TIM_PWM_Init>:
 8004cb0:	b580      	push	{r7, lr}
 8004cb2:	b082      	sub	sp, #8
 8004cb4:	af00      	add	r7, sp, #0
 8004cb6:	6078      	str	r0, [r7, #4]
 8004cb8:	687b      	ldr	r3, [r7, #4]
 8004cba:	2b00      	cmp	r3, #0
 8004cbc:	d101      	bne.n	8004cc2 <HAL_TIM_PWM_Init+0x12>
 8004cbe:	2301      	movs	r3, #1
 8004cc0:	e041      	b.n	8004d46 <HAL_TIM_PWM_Init+0x96>
 8004cc2:	687b      	ldr	r3, [r7, #4]
 8004cc4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004cc8:	b2db      	uxtb	r3, r3
 8004cca:	2b00      	cmp	r3, #0
 8004ccc:	d106      	bne.n	8004cdc <HAL_TIM_PWM_Init+0x2c>
 8004cce:	687b      	ldr	r3, [r7, #4]
 8004cd0:	2200      	movs	r2, #0
 8004cd2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004cd6:	6878      	ldr	r0, [r7, #4]
 8004cd8:	f7fd fd9a 	bl	8002810 <HAL_TIM_PWM_MspInit>
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	2202      	movs	r2, #2
 8004ce0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004ce4:	687b      	ldr	r3, [r7, #4]
 8004ce6:	681a      	ldr	r2, [r3, #0]
 8004ce8:	687b      	ldr	r3, [r7, #4]
 8004cea:	3304      	adds	r3, #4
 8004cec:	4619      	mov	r1, r3
 8004cee:	4610      	mov	r0, r2
 8004cf0:	f000 fe60 	bl	80059b4 <TIM_Base_SetConfig>
 8004cf4:	687b      	ldr	r3, [r7, #4]
 8004cf6:	2201      	movs	r2, #1
 8004cf8:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 8004cfc:	687b      	ldr	r3, [r7, #4]
 8004cfe:	2201      	movs	r2, #1
 8004d00:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004d04:	687b      	ldr	r3, [r7, #4]
 8004d06:	2201      	movs	r2, #1
 8004d08:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004d0c:	687b      	ldr	r3, [r7, #4]
 8004d0e:	2201      	movs	r2, #1
 8004d10:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004d14:	687b      	ldr	r3, [r7, #4]
 8004d16:	2201      	movs	r2, #1
 8004d18:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	2201      	movs	r2, #1
 8004d20:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8004d24:	687b      	ldr	r3, [r7, #4]
 8004d26:	2201      	movs	r2, #1
 8004d28:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	2201      	movs	r2, #1
 8004d30:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8004d34:	687b      	ldr	r3, [r7, #4]
 8004d36:	2201      	movs	r2, #1
 8004d38:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	2201      	movs	r2, #1
 8004d40:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004d44:	2300      	movs	r3, #0
 8004d46:	4618      	mov	r0, r3
 8004d48:	3708      	adds	r7, #8
 8004d4a:	46bd      	mov	sp, r7
 8004d4c:	bd80      	pop	{r7, pc}
	...

08004d50 <HAL_TIM_PWM_Start>:
 8004d50:	b580      	push	{r7, lr}
 8004d52:	b084      	sub	sp, #16
 8004d54:	af00      	add	r7, sp, #0
 8004d56:	6078      	str	r0, [r7, #4]
 8004d58:	6039      	str	r1, [r7, #0]
 8004d5a:	683b      	ldr	r3, [r7, #0]
 8004d5c:	2b00      	cmp	r3, #0
 8004d5e:	d109      	bne.n	8004d74 <HAL_TIM_PWM_Start+0x24>
 8004d60:	687b      	ldr	r3, [r7, #4]
 8004d62:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 8004d66:	b2db      	uxtb	r3, r3
 8004d68:	2b01      	cmp	r3, #1
 8004d6a:	bf14      	ite	ne
 8004d6c:	2301      	movne	r3, #1
 8004d6e:	2300      	moveq	r3, #0
 8004d70:	b2db      	uxtb	r3, r3
 8004d72:	e022      	b.n	8004dba <HAL_TIM_PWM_Start+0x6a>
 8004d74:	683b      	ldr	r3, [r7, #0]
 8004d76:	2b04      	cmp	r3, #4
 8004d78:	d109      	bne.n	8004d8e <HAL_TIM_PWM_Start+0x3e>
 8004d7a:	687b      	ldr	r3, [r7, #4]
 8004d7c:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8004d80:	b2db      	uxtb	r3, r3
 8004d82:	2b01      	cmp	r3, #1
 8004d84:	bf14      	ite	ne
 8004d86:	2301      	movne	r3, #1
 8004d88:	2300      	moveq	r3, #0
 8004d8a:	b2db      	uxtb	r3, r3
 8004d8c:	e015      	b.n	8004dba <HAL_TIM_PWM_Start+0x6a>
 8004d8e:	683b      	ldr	r3, [r7, #0]
 8004d90:	2b08      	cmp	r3, #8
 8004d92:	d109      	bne.n	8004da8 <HAL_TIM_PWM_Start+0x58>
 8004d94:	687b      	ldr	r3, [r7, #4]
 8004d96:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8004d9a:	b2db      	uxtb	r3, r3
 8004d9c:	2b01      	cmp	r3, #1
 8004d9e:	bf14      	ite	ne
 8004da0:	2301      	movne	r3, #1
 8004da2:	2300      	moveq	r3, #0
 8004da4:	b2db      	uxtb	r3, r3
 8004da6:	e008      	b.n	8004dba <HAL_TIM_PWM_Start+0x6a>
 8004da8:	687b      	ldr	r3, [r7, #4]
 8004daa:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8004dae:	b2db      	uxtb	r3, r3
 8004db0:	2b01      	cmp	r3, #1
 8004db2:	bf14      	ite	ne
 8004db4:	2301      	movne	r3, #1
 8004db6:	2300      	moveq	r3, #0
 8004db8:	b2db      	uxtb	r3, r3
 8004dba:	2b00      	cmp	r3, #0
 8004dbc:	d001      	beq.n	8004dc2 <HAL_TIM_PWM_Start+0x72>
 8004dbe:	2301      	movs	r3, #1
 8004dc0:	e07c      	b.n	8004ebc <HAL_TIM_PWM_Start+0x16c>
 8004dc2:	683b      	ldr	r3, [r7, #0]
 8004dc4:	2b00      	cmp	r3, #0
 8004dc6:	d104      	bne.n	8004dd2 <HAL_TIM_PWM_Start+0x82>
 8004dc8:	687b      	ldr	r3, [r7, #4]
 8004dca:	2202      	movs	r2, #2
 8004dcc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004dd0:	e013      	b.n	8004dfa <HAL_TIM_PWM_Start+0xaa>
 8004dd2:	683b      	ldr	r3, [r7, #0]
 8004dd4:	2b04      	cmp	r3, #4
 8004dd6:	d104      	bne.n	8004de2 <HAL_TIM_PWM_Start+0x92>
 8004dd8:	687b      	ldr	r3, [r7, #4]
 8004dda:	2202      	movs	r2, #2
 8004ddc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004de0:	e00b      	b.n	8004dfa <HAL_TIM_PWM_Start+0xaa>
 8004de2:	683b      	ldr	r3, [r7, #0]
 8004de4:	2b08      	cmp	r3, #8
 8004de6:	d104      	bne.n	8004df2 <HAL_TIM_PWM_Start+0xa2>
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	2202      	movs	r2, #2
 8004dec:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004df0:	e003      	b.n	8004dfa <HAL_TIM_PWM_Start+0xaa>
 8004df2:	687b      	ldr	r3, [r7, #4]
 8004df4:	2202      	movs	r2, #2
 8004df6:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004dfa:	687b      	ldr	r3, [r7, #4]
 8004dfc:	681b      	ldr	r3, [r3, #0]
 8004dfe:	2201      	movs	r2, #1
 8004e00:	6839      	ldr	r1, [r7, #0]
 8004e02:	4618      	mov	r0, r3
 8004e04:	f001 f9f0 	bl	80061e8 <TIM_CCxChannelCmd>
 8004e08:	687b      	ldr	r3, [r7, #4]
 8004e0a:	681b      	ldr	r3, [r3, #0]
 8004e0c:	4a2d      	ldr	r2, [pc, #180]	@ (8004ec4 <HAL_TIM_PWM_Start+0x174>)
 8004e0e:	4293      	cmp	r3, r2
 8004e10:	d004      	beq.n	8004e1c <HAL_TIM_PWM_Start+0xcc>
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	681b      	ldr	r3, [r3, #0]
 8004e16:	4a2c      	ldr	r2, [pc, #176]	@ (8004ec8 <HAL_TIM_PWM_Start+0x178>)
 8004e18:	4293      	cmp	r3, r2
 8004e1a:	d101      	bne.n	8004e20 <HAL_TIM_PWM_Start+0xd0>
 8004e1c:	2301      	movs	r3, #1
 8004e1e:	e000      	b.n	8004e22 <HAL_TIM_PWM_Start+0xd2>
 8004e20:	2300      	movs	r3, #0
 8004e22:	2b00      	cmp	r3, #0
 8004e24:	d007      	beq.n	8004e36 <HAL_TIM_PWM_Start+0xe6>
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	681b      	ldr	r3, [r3, #0]
 8004e2a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004e2c:	687b      	ldr	r3, [r7, #4]
 8004e2e:	681b      	ldr	r3, [r3, #0]
 8004e30:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 8004e34:	645a      	str	r2, [r3, #68]	@ 0x44
 8004e36:	687b      	ldr	r3, [r7, #4]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	4a22      	ldr	r2, [pc, #136]	@ (8004ec4 <HAL_TIM_PWM_Start+0x174>)
 8004e3c:	4293      	cmp	r3, r2
 8004e3e:	d022      	beq.n	8004e86 <HAL_TIM_PWM_Start+0x136>
 8004e40:	687b      	ldr	r3, [r7, #4]
 8004e42:	681b      	ldr	r3, [r3, #0]
 8004e44:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8004e48:	d01d      	beq.n	8004e86 <HAL_TIM_PWM_Start+0x136>
 8004e4a:	687b      	ldr	r3, [r7, #4]
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	4a1f      	ldr	r2, [pc, #124]	@ (8004ecc <HAL_TIM_PWM_Start+0x17c>)
 8004e50:	4293      	cmp	r3, r2
 8004e52:	d018      	beq.n	8004e86 <HAL_TIM_PWM_Start+0x136>
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	681b      	ldr	r3, [r3, #0]
 8004e58:	4a1d      	ldr	r2, [pc, #116]	@ (8004ed0 <HAL_TIM_PWM_Start+0x180>)
 8004e5a:	4293      	cmp	r3, r2
 8004e5c:	d013      	beq.n	8004e86 <HAL_TIM_PWM_Start+0x136>
 8004e5e:	687b      	ldr	r3, [r7, #4]
 8004e60:	681b      	ldr	r3, [r3, #0]
 8004e62:	4a1c      	ldr	r2, [pc, #112]	@ (8004ed4 <HAL_TIM_PWM_Start+0x184>)
 8004e64:	4293      	cmp	r3, r2
 8004e66:	d00e      	beq.n	8004e86 <HAL_TIM_PWM_Start+0x136>
 8004e68:	687b      	ldr	r3, [r7, #4]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	4a16      	ldr	r2, [pc, #88]	@ (8004ec8 <HAL_TIM_PWM_Start+0x178>)
 8004e6e:	4293      	cmp	r3, r2
 8004e70:	d009      	beq.n	8004e86 <HAL_TIM_PWM_Start+0x136>
 8004e72:	687b      	ldr	r3, [r7, #4]
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	4a18      	ldr	r2, [pc, #96]	@ (8004ed8 <HAL_TIM_PWM_Start+0x188>)
 8004e78:	4293      	cmp	r3, r2
 8004e7a:	d004      	beq.n	8004e86 <HAL_TIM_PWM_Start+0x136>
 8004e7c:	687b      	ldr	r3, [r7, #4]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	4a16      	ldr	r2, [pc, #88]	@ (8004edc <HAL_TIM_PWM_Start+0x18c>)
 8004e82:	4293      	cmp	r3, r2
 8004e84:	d111      	bne.n	8004eaa <HAL_TIM_PWM_Start+0x15a>
 8004e86:	687b      	ldr	r3, [r7, #4]
 8004e88:	681b      	ldr	r3, [r3, #0]
 8004e8a:	689b      	ldr	r3, [r3, #8]
 8004e8c:	f003 0307 	and.w	r3, r3, #7
 8004e90:	60fb      	str	r3, [r7, #12]
 8004e92:	68fb      	ldr	r3, [r7, #12]
 8004e94:	2b06      	cmp	r3, #6
 8004e96:	d010      	beq.n	8004eba <HAL_TIM_PWM_Start+0x16a>
 8004e98:	687b      	ldr	r3, [r7, #4]
 8004e9a:	681b      	ldr	r3, [r3, #0]
 8004e9c:	681a      	ldr	r2, [r3, #0]
 8004e9e:	687b      	ldr	r3, [r7, #4]
 8004ea0:	681b      	ldr	r3, [r3, #0]
 8004ea2:	f042 0201 	orr.w	r2, r2, #1
 8004ea6:	601a      	str	r2, [r3, #0]
 8004ea8:	e007      	b.n	8004eba <HAL_TIM_PWM_Start+0x16a>
 8004eaa:	687b      	ldr	r3, [r7, #4]
 8004eac:	681b      	ldr	r3, [r3, #0]
 8004eae:	681a      	ldr	r2, [r3, #0]
 8004eb0:	687b      	ldr	r3, [r7, #4]
 8004eb2:	681b      	ldr	r3, [r3, #0]
 8004eb4:	f042 0201 	orr.w	r2, r2, #1
 8004eb8:	601a      	str	r2, [r3, #0]
 8004eba:	2300      	movs	r3, #0
 8004ebc:	4618      	mov	r0, r3
 8004ebe:	3710      	adds	r7, #16
 8004ec0:	46bd      	mov	sp, r7
 8004ec2:	bd80      	pop	{r7, pc}
 8004ec4:	40010000 	.word	0x40010000
 8004ec8:	40010400 	.word	0x40010400
 8004ecc:	40000400 	.word	0x40000400
 8004ed0:	40000800 	.word	0x40000800
 8004ed4:	40000c00 	.word	0x40000c00
 8004ed8:	40014000 	.word	0x40014000
 8004edc:	40001800 	.word	0x40001800

08004ee0 <HAL_TIM_PWM_Stop>:
 8004ee0:	b580      	push	{r7, lr}
 8004ee2:	b082      	sub	sp, #8
 8004ee4:	af00      	add	r7, sp, #0
 8004ee6:	6078      	str	r0, [r7, #4]
 8004ee8:	6039      	str	r1, [r7, #0]
 8004eea:	687b      	ldr	r3, [r7, #4]
 8004eec:	681b      	ldr	r3, [r3, #0]
 8004eee:	2200      	movs	r2, #0
 8004ef0:	6839      	ldr	r1, [r7, #0]
 8004ef2:	4618      	mov	r0, r3
 8004ef4:	f001 f978 	bl	80061e8 <TIM_CCxChannelCmd>
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	681b      	ldr	r3, [r3, #0]
 8004efc:	4a2e      	ldr	r2, [pc, #184]	@ (8004fb8 <HAL_TIM_PWM_Stop+0xd8>)
 8004efe:	4293      	cmp	r3, r2
 8004f00:	d004      	beq.n	8004f0c <HAL_TIM_PWM_Stop+0x2c>
 8004f02:	687b      	ldr	r3, [r7, #4]
 8004f04:	681b      	ldr	r3, [r3, #0]
 8004f06:	4a2d      	ldr	r2, [pc, #180]	@ (8004fbc <HAL_TIM_PWM_Stop+0xdc>)
 8004f08:	4293      	cmp	r3, r2
 8004f0a:	d101      	bne.n	8004f10 <HAL_TIM_PWM_Stop+0x30>
 8004f0c:	2301      	movs	r3, #1
 8004f0e:	e000      	b.n	8004f12 <HAL_TIM_PWM_Stop+0x32>
 8004f10:	2300      	movs	r3, #0
 8004f12:	2b00      	cmp	r3, #0
 8004f14:	d017      	beq.n	8004f46 <HAL_TIM_PWM_Stop+0x66>
 8004f16:	687b      	ldr	r3, [r7, #4]
 8004f18:	681b      	ldr	r3, [r3, #0]
 8004f1a:	6a1a      	ldr	r2, [r3, #32]
 8004f1c:	f241 1311 	movw	r3, #4369	@ 0x1111
 8004f20:	4013      	ands	r3, r2
 8004f22:	2b00      	cmp	r3, #0
 8004f24:	d10f      	bne.n	8004f46 <HAL_TIM_PWM_Stop+0x66>
 8004f26:	687b      	ldr	r3, [r7, #4]
 8004f28:	681b      	ldr	r3, [r3, #0]
 8004f2a:	6a1a      	ldr	r2, [r3, #32]
 8004f2c:	f240 4344 	movw	r3, #1092	@ 0x444
 8004f30:	4013      	ands	r3, r2
 8004f32:	2b00      	cmp	r3, #0
 8004f34:	d107      	bne.n	8004f46 <HAL_TIM_PWM_Stop+0x66>
 8004f36:	687b      	ldr	r3, [r7, #4]
 8004f38:	681b      	ldr	r3, [r3, #0]
 8004f3a:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8004f3c:	687b      	ldr	r3, [r7, #4]
 8004f3e:	681b      	ldr	r3, [r3, #0]
 8004f40:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 8004f44:	645a      	str	r2, [r3, #68]	@ 0x44
 8004f46:	687b      	ldr	r3, [r7, #4]
 8004f48:	681b      	ldr	r3, [r3, #0]
 8004f4a:	6a1a      	ldr	r2, [r3, #32]
 8004f4c:	f241 1311 	movw	r3, #4369	@ 0x1111
 8004f50:	4013      	ands	r3, r2
 8004f52:	2b00      	cmp	r3, #0
 8004f54:	d10f      	bne.n	8004f76 <HAL_TIM_PWM_Stop+0x96>
 8004f56:	687b      	ldr	r3, [r7, #4]
 8004f58:	681b      	ldr	r3, [r3, #0]
 8004f5a:	6a1a      	ldr	r2, [r3, #32]
 8004f5c:	f240 4344 	movw	r3, #1092	@ 0x444
 8004f60:	4013      	ands	r3, r2
 8004f62:	2b00      	cmp	r3, #0
 8004f64:	d107      	bne.n	8004f76 <HAL_TIM_PWM_Stop+0x96>
 8004f66:	687b      	ldr	r3, [r7, #4]
 8004f68:	681b      	ldr	r3, [r3, #0]
 8004f6a:	681a      	ldr	r2, [r3, #0]
 8004f6c:	687b      	ldr	r3, [r7, #4]
 8004f6e:	681b      	ldr	r3, [r3, #0]
 8004f70:	f022 0201 	bic.w	r2, r2, #1
 8004f74:	601a      	str	r2, [r3, #0]
 8004f76:	683b      	ldr	r3, [r7, #0]
 8004f78:	2b00      	cmp	r3, #0
 8004f7a:	d104      	bne.n	8004f86 <HAL_TIM_PWM_Stop+0xa6>
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	2201      	movs	r2, #1
 8004f80:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8004f84:	e013      	b.n	8004fae <HAL_TIM_PWM_Stop+0xce>
 8004f86:	683b      	ldr	r3, [r7, #0]
 8004f88:	2b04      	cmp	r3, #4
 8004f8a:	d104      	bne.n	8004f96 <HAL_TIM_PWM_Stop+0xb6>
 8004f8c:	687b      	ldr	r3, [r7, #4]
 8004f8e:	2201      	movs	r2, #1
 8004f90:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8004f94:	e00b      	b.n	8004fae <HAL_TIM_PWM_Stop+0xce>
 8004f96:	683b      	ldr	r3, [r7, #0]
 8004f98:	2b08      	cmp	r3, #8
 8004f9a:	d104      	bne.n	8004fa6 <HAL_TIM_PWM_Stop+0xc6>
 8004f9c:	687b      	ldr	r3, [r7, #4]
 8004f9e:	2201      	movs	r2, #1
 8004fa0:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8004fa4:	e003      	b.n	8004fae <HAL_TIM_PWM_Stop+0xce>
 8004fa6:	687b      	ldr	r3, [r7, #4]
 8004fa8:	2201      	movs	r2, #1
 8004faa:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8004fae:	2300      	movs	r3, #0
 8004fb0:	4618      	mov	r0, r3
 8004fb2:	3708      	adds	r7, #8
 8004fb4:	46bd      	mov	sp, r7
 8004fb6:	bd80      	pop	{r7, pc}
 8004fb8:	40010000 	.word	0x40010000
 8004fbc:	40010400 	.word	0x40010400

08004fc0 <HAL_TIM_IC_Init>:
 8004fc0:	b580      	push	{r7, lr}
 8004fc2:	b082      	sub	sp, #8
 8004fc4:	af00      	add	r7, sp, #0
 8004fc6:	6078      	str	r0, [r7, #4]
 8004fc8:	687b      	ldr	r3, [r7, #4]
 8004fca:	2b00      	cmp	r3, #0
 8004fcc:	d101      	bne.n	8004fd2 <HAL_TIM_IC_Init+0x12>
 8004fce:	2301      	movs	r3, #1
 8004fd0:	e041      	b.n	8005056 <HAL_TIM_IC_Init+0x96>
 8004fd2:	687b      	ldr	r3, [r7, #4]
 8004fd4:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004fd8:	b2db      	uxtb	r3, r3
 8004fda:	2b00      	cmp	r3, #0
 8004fdc:	d106      	bne.n	8004fec <HAL_TIM_IC_Init+0x2c>
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	2200      	movs	r2, #0
 8004fe2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8004fe6:	6878      	ldr	r0, [r7, #4]
 8004fe8:	f7fd fb86 	bl	80026f8 <HAL_TIM_IC_MspInit>
 8004fec:	687b      	ldr	r3, [r7, #4]
 8004fee:	2202      	movs	r2, #2
 8004ff0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8004ff4:	687b      	ldr	r3, [r7, #4]
 8004ff6:	681a      	ldr	r2, [r3, #0]
 8004ff8:	687b      	ldr	r3, [r7, #4]
 8004ffa:	3304      	adds	r3, #4
 8004ffc:	4619      	mov	r1, r3
 8004ffe:	4610      	mov	r0, r2
 8005000:	f000 fcd8 	bl	80059b4 <TIM_Base_SetConfig>
 8005004:	687b      	ldr	r3, [r7, #4]
 8005006:	2201      	movs	r2, #1
 8005008:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	2201      	movs	r2, #1
 8005010:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005014:	687b      	ldr	r3, [r7, #4]
 8005016:	2201      	movs	r2, #1
 8005018:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 800501c:	687b      	ldr	r3, [r7, #4]
 800501e:	2201      	movs	r2, #1
 8005020:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005024:	687b      	ldr	r3, [r7, #4]
 8005026:	2201      	movs	r2, #1
 8005028:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800502c:	687b      	ldr	r3, [r7, #4]
 800502e:	2201      	movs	r2, #1
 8005030:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005034:	687b      	ldr	r3, [r7, #4]
 8005036:	2201      	movs	r2, #1
 8005038:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 800503c:	687b      	ldr	r3, [r7, #4]
 800503e:	2201      	movs	r2, #1
 8005040:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005044:	687b      	ldr	r3, [r7, #4]
 8005046:	2201      	movs	r2, #1
 8005048:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 800504c:	687b      	ldr	r3, [r7, #4]
 800504e:	2201      	movs	r2, #1
 8005050:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005054:	2300      	movs	r3, #0
 8005056:	4618      	mov	r0, r3
 8005058:	3708      	adds	r7, #8
 800505a:	46bd      	mov	sp, r7
 800505c:	bd80      	pop	{r7, pc}
	...

08005060 <HAL_TIM_IC_Start_IT>:
 8005060:	b580      	push	{r7, lr}
 8005062:	b084      	sub	sp, #16
 8005064:	af00      	add	r7, sp, #0
 8005066:	6078      	str	r0, [r7, #4]
 8005068:	6039      	str	r1, [r7, #0]
 800506a:	2300      	movs	r3, #0
 800506c:	73fb      	strb	r3, [r7, #15]
 800506e:	683b      	ldr	r3, [r7, #0]
 8005070:	2b00      	cmp	r3, #0
 8005072:	d104      	bne.n	800507e <HAL_TIM_IC_Start_IT+0x1e>
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800507a:	b2db      	uxtb	r3, r3
 800507c:	e013      	b.n	80050a6 <HAL_TIM_IC_Start_IT+0x46>
 800507e:	683b      	ldr	r3, [r7, #0]
 8005080:	2b04      	cmp	r3, #4
 8005082:	d104      	bne.n	800508e <HAL_TIM_IC_Start_IT+0x2e>
 8005084:	687b      	ldr	r3, [r7, #4]
 8005086:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 800508a:	b2db      	uxtb	r3, r3
 800508c:	e00b      	b.n	80050a6 <HAL_TIM_IC_Start_IT+0x46>
 800508e:	683b      	ldr	r3, [r7, #0]
 8005090:	2b08      	cmp	r3, #8
 8005092:	d104      	bne.n	800509e <HAL_TIM_IC_Start_IT+0x3e>
 8005094:	687b      	ldr	r3, [r7, #4]
 8005096:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 800509a:	b2db      	uxtb	r3, r3
 800509c:	e003      	b.n	80050a6 <HAL_TIM_IC_Start_IT+0x46>
 800509e:	687b      	ldr	r3, [r7, #4]
 80050a0:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 80050a4:	b2db      	uxtb	r3, r3
 80050a6:	73bb      	strb	r3, [r7, #14]
 80050a8:	683b      	ldr	r3, [r7, #0]
 80050aa:	2b00      	cmp	r3, #0
 80050ac:	d104      	bne.n	80050b8 <HAL_TIM_IC_Start_IT+0x58>
 80050ae:	687b      	ldr	r3, [r7, #4]
 80050b0:	f893 3042 	ldrb.w	r3, [r3, #66]	@ 0x42
 80050b4:	b2db      	uxtb	r3, r3
 80050b6:	e013      	b.n	80050e0 <HAL_TIM_IC_Start_IT+0x80>
 80050b8:	683b      	ldr	r3, [r7, #0]
 80050ba:	2b04      	cmp	r3, #4
 80050bc:	d104      	bne.n	80050c8 <HAL_TIM_IC_Start_IT+0x68>
 80050be:	687b      	ldr	r3, [r7, #4]
 80050c0:	f893 3043 	ldrb.w	r3, [r3, #67]	@ 0x43
 80050c4:	b2db      	uxtb	r3, r3
 80050c6:	e00b      	b.n	80050e0 <HAL_TIM_IC_Start_IT+0x80>
 80050c8:	683b      	ldr	r3, [r7, #0]
 80050ca:	2b08      	cmp	r3, #8
 80050cc:	d104      	bne.n	80050d8 <HAL_TIM_IC_Start_IT+0x78>
 80050ce:	687b      	ldr	r3, [r7, #4]
 80050d0:	f893 3044 	ldrb.w	r3, [r3, #68]	@ 0x44
 80050d4:	b2db      	uxtb	r3, r3
 80050d6:	e003      	b.n	80050e0 <HAL_TIM_IC_Start_IT+0x80>
 80050d8:	687b      	ldr	r3, [r7, #4]
 80050da:	f893 3045 	ldrb.w	r3, [r3, #69]	@ 0x45
 80050de:	b2db      	uxtb	r3, r3
 80050e0:	737b      	strb	r3, [r7, #13]
 80050e2:	7bbb      	ldrb	r3, [r7, #14]
 80050e4:	2b01      	cmp	r3, #1
 80050e6:	d102      	bne.n	80050ee <HAL_TIM_IC_Start_IT+0x8e>
 80050e8:	7b7b      	ldrb	r3, [r7, #13]
 80050ea:	2b01      	cmp	r3, #1
 80050ec:	d001      	beq.n	80050f2 <HAL_TIM_IC_Start_IT+0x92>
 80050ee:	2301      	movs	r3, #1
 80050f0:	e0cc      	b.n	800528c <HAL_TIM_IC_Start_IT+0x22c>
 80050f2:	683b      	ldr	r3, [r7, #0]
 80050f4:	2b00      	cmp	r3, #0
 80050f6:	d104      	bne.n	8005102 <HAL_TIM_IC_Start_IT+0xa2>
 80050f8:	687b      	ldr	r3, [r7, #4]
 80050fa:	2202      	movs	r2, #2
 80050fc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8005100:	e013      	b.n	800512a <HAL_TIM_IC_Start_IT+0xca>
 8005102:	683b      	ldr	r3, [r7, #0]
 8005104:	2b04      	cmp	r3, #4
 8005106:	d104      	bne.n	8005112 <HAL_TIM_IC_Start_IT+0xb2>
 8005108:	687b      	ldr	r3, [r7, #4]
 800510a:	2202      	movs	r2, #2
 800510c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8005110:	e00b      	b.n	800512a <HAL_TIM_IC_Start_IT+0xca>
 8005112:	683b      	ldr	r3, [r7, #0]
 8005114:	2b08      	cmp	r3, #8
 8005116:	d104      	bne.n	8005122 <HAL_TIM_IC_Start_IT+0xc2>
 8005118:	687b      	ldr	r3, [r7, #4]
 800511a:	2202      	movs	r2, #2
 800511c:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8005120:	e003      	b.n	800512a <HAL_TIM_IC_Start_IT+0xca>
 8005122:	687b      	ldr	r3, [r7, #4]
 8005124:	2202      	movs	r2, #2
 8005126:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 800512a:	683b      	ldr	r3, [r7, #0]
 800512c:	2b00      	cmp	r3, #0
 800512e:	d104      	bne.n	800513a <HAL_TIM_IC_Start_IT+0xda>
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	2202      	movs	r2, #2
 8005134:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8005138:	e013      	b.n	8005162 <HAL_TIM_IC_Start_IT+0x102>
 800513a:	683b      	ldr	r3, [r7, #0]
 800513c:	2b04      	cmp	r3, #4
 800513e:	d104      	bne.n	800514a <HAL_TIM_IC_Start_IT+0xea>
 8005140:	687b      	ldr	r3, [r7, #4]
 8005142:	2202      	movs	r2, #2
 8005144:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8005148:	e00b      	b.n	8005162 <HAL_TIM_IC_Start_IT+0x102>
 800514a:	683b      	ldr	r3, [r7, #0]
 800514c:	2b08      	cmp	r3, #8
 800514e:	d104      	bne.n	800515a <HAL_TIM_IC_Start_IT+0xfa>
 8005150:	687b      	ldr	r3, [r7, #4]
 8005152:	2202      	movs	r2, #2
 8005154:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8005158:	e003      	b.n	8005162 <HAL_TIM_IC_Start_IT+0x102>
 800515a:	687b      	ldr	r3, [r7, #4]
 800515c:	2202      	movs	r2, #2
 800515e:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45
 8005162:	683b      	ldr	r3, [r7, #0]
 8005164:	2b0c      	cmp	r3, #12
 8005166:	d841      	bhi.n	80051ec <HAL_TIM_IC_Start_IT+0x18c>
 8005168:	a201      	add	r2, pc, #4	@ (adr r2, 8005170 <HAL_TIM_IC_Start_IT+0x110>)
 800516a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800516e:	bf00      	nop
 8005170:	080051a5 	.word	0x080051a5
 8005174:	080051ed 	.word	0x080051ed
 8005178:	080051ed 	.word	0x080051ed
 800517c:	080051ed 	.word	0x080051ed
 8005180:	080051b7 	.word	0x080051b7
 8005184:	080051ed 	.word	0x080051ed
 8005188:	080051ed 	.word	0x080051ed
 800518c:	080051ed 	.word	0x080051ed
 8005190:	080051c9 	.word	0x080051c9
 8005194:	080051ed 	.word	0x080051ed
 8005198:	080051ed 	.word	0x080051ed
 800519c:	080051ed 	.word	0x080051ed
 80051a0:	080051db 	.word	0x080051db
 80051a4:	687b      	ldr	r3, [r7, #4]
 80051a6:	681b      	ldr	r3, [r3, #0]
 80051a8:	68da      	ldr	r2, [r3, #12]
 80051aa:	687b      	ldr	r3, [r7, #4]
 80051ac:	681b      	ldr	r3, [r3, #0]
 80051ae:	f042 0202 	orr.w	r2, r2, #2
 80051b2:	60da      	str	r2, [r3, #12]
 80051b4:	e01d      	b.n	80051f2 <HAL_TIM_IC_Start_IT+0x192>
 80051b6:	687b      	ldr	r3, [r7, #4]
 80051b8:	681b      	ldr	r3, [r3, #0]
 80051ba:	68da      	ldr	r2, [r3, #12]
 80051bc:	687b      	ldr	r3, [r7, #4]
 80051be:	681b      	ldr	r3, [r3, #0]
 80051c0:	f042 0204 	orr.w	r2, r2, #4
 80051c4:	60da      	str	r2, [r3, #12]
 80051c6:	e014      	b.n	80051f2 <HAL_TIM_IC_Start_IT+0x192>
 80051c8:	687b      	ldr	r3, [r7, #4]
 80051ca:	681b      	ldr	r3, [r3, #0]
 80051cc:	68da      	ldr	r2, [r3, #12]
 80051ce:	687b      	ldr	r3, [r7, #4]
 80051d0:	681b      	ldr	r3, [r3, #0]
 80051d2:	f042 0208 	orr.w	r2, r2, #8
 80051d6:	60da      	str	r2, [r3, #12]
 80051d8:	e00b      	b.n	80051f2 <HAL_TIM_IC_Start_IT+0x192>
 80051da:	687b      	ldr	r3, [r7, #4]
 80051dc:	681b      	ldr	r3, [r3, #0]
 80051de:	68da      	ldr	r2, [r3, #12]
 80051e0:	687b      	ldr	r3, [r7, #4]
 80051e2:	681b      	ldr	r3, [r3, #0]
 80051e4:	f042 0210 	orr.w	r2, r2, #16
 80051e8:	60da      	str	r2, [r3, #12]
 80051ea:	e002      	b.n	80051f2 <HAL_TIM_IC_Start_IT+0x192>
 80051ec:	2301      	movs	r3, #1
 80051ee:	73fb      	strb	r3, [r7, #15]
 80051f0:	bf00      	nop
 80051f2:	7bfb      	ldrb	r3, [r7, #15]
 80051f4:	2b00      	cmp	r3, #0
 80051f6:	d148      	bne.n	800528a <HAL_TIM_IC_Start_IT+0x22a>
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	681b      	ldr	r3, [r3, #0]
 80051fc:	2201      	movs	r2, #1
 80051fe:	6839      	ldr	r1, [r7, #0]
 8005200:	4618      	mov	r0, r3
 8005202:	f000 fff1 	bl	80061e8 <TIM_CCxChannelCmd>
 8005206:	687b      	ldr	r3, [r7, #4]
 8005208:	681b      	ldr	r3, [r3, #0]
 800520a:	4a22      	ldr	r2, [pc, #136]	@ (8005294 <HAL_TIM_IC_Start_IT+0x234>)
 800520c:	4293      	cmp	r3, r2
 800520e:	d022      	beq.n	8005256 <HAL_TIM_IC_Start_IT+0x1f6>
 8005210:	687b      	ldr	r3, [r7, #4]
 8005212:	681b      	ldr	r3, [r3, #0]
 8005214:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005218:	d01d      	beq.n	8005256 <HAL_TIM_IC_Start_IT+0x1f6>
 800521a:	687b      	ldr	r3, [r7, #4]
 800521c:	681b      	ldr	r3, [r3, #0]
 800521e:	4a1e      	ldr	r2, [pc, #120]	@ (8005298 <HAL_TIM_IC_Start_IT+0x238>)
 8005220:	4293      	cmp	r3, r2
 8005222:	d018      	beq.n	8005256 <HAL_TIM_IC_Start_IT+0x1f6>
 8005224:	687b      	ldr	r3, [r7, #4]
 8005226:	681b      	ldr	r3, [r3, #0]
 8005228:	4a1c      	ldr	r2, [pc, #112]	@ (800529c <HAL_TIM_IC_Start_IT+0x23c>)
 800522a:	4293      	cmp	r3, r2
 800522c:	d013      	beq.n	8005256 <HAL_TIM_IC_Start_IT+0x1f6>
 800522e:	687b      	ldr	r3, [r7, #4]
 8005230:	681b      	ldr	r3, [r3, #0]
 8005232:	4a1b      	ldr	r2, [pc, #108]	@ (80052a0 <HAL_TIM_IC_Start_IT+0x240>)
 8005234:	4293      	cmp	r3, r2
 8005236:	d00e      	beq.n	8005256 <HAL_TIM_IC_Start_IT+0x1f6>
 8005238:	687b      	ldr	r3, [r7, #4]
 800523a:	681b      	ldr	r3, [r3, #0]
 800523c:	4a19      	ldr	r2, [pc, #100]	@ (80052a4 <HAL_TIM_IC_Start_IT+0x244>)
 800523e:	4293      	cmp	r3, r2
 8005240:	d009      	beq.n	8005256 <HAL_TIM_IC_Start_IT+0x1f6>
 8005242:	687b      	ldr	r3, [r7, #4]
 8005244:	681b      	ldr	r3, [r3, #0]
 8005246:	4a18      	ldr	r2, [pc, #96]	@ (80052a8 <HAL_TIM_IC_Start_IT+0x248>)
 8005248:	4293      	cmp	r3, r2
 800524a:	d004      	beq.n	8005256 <HAL_TIM_IC_Start_IT+0x1f6>
 800524c:	687b      	ldr	r3, [r7, #4]
 800524e:	681b      	ldr	r3, [r3, #0]
 8005250:	4a16      	ldr	r2, [pc, #88]	@ (80052ac <HAL_TIM_IC_Start_IT+0x24c>)
 8005252:	4293      	cmp	r3, r2
 8005254:	d111      	bne.n	800527a <HAL_TIM_IC_Start_IT+0x21a>
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	681b      	ldr	r3, [r3, #0]
 800525a:	689b      	ldr	r3, [r3, #8]
 800525c:	f003 0307 	and.w	r3, r3, #7
 8005260:	60bb      	str	r3, [r7, #8]
 8005262:	68bb      	ldr	r3, [r7, #8]
 8005264:	2b06      	cmp	r3, #6
 8005266:	d010      	beq.n	800528a <HAL_TIM_IC_Start_IT+0x22a>
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	681b      	ldr	r3, [r3, #0]
 800526c:	681a      	ldr	r2, [r3, #0]
 800526e:	687b      	ldr	r3, [r7, #4]
 8005270:	681b      	ldr	r3, [r3, #0]
 8005272:	f042 0201 	orr.w	r2, r2, #1
 8005276:	601a      	str	r2, [r3, #0]
 8005278:	e007      	b.n	800528a <HAL_TIM_IC_Start_IT+0x22a>
 800527a:	687b      	ldr	r3, [r7, #4]
 800527c:	681b      	ldr	r3, [r3, #0]
 800527e:	681a      	ldr	r2, [r3, #0]
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	681b      	ldr	r3, [r3, #0]
 8005284:	f042 0201 	orr.w	r2, r2, #1
 8005288:	601a      	str	r2, [r3, #0]
 800528a:	7bfb      	ldrb	r3, [r7, #15]
 800528c:	4618      	mov	r0, r3
 800528e:	3710      	adds	r7, #16
 8005290:	46bd      	mov	sp, r7
 8005292:	bd80      	pop	{r7, pc}
 8005294:	40010000 	.word	0x40010000
 8005298:	40000400 	.word	0x40000400
 800529c:	40000800 	.word	0x40000800
 80052a0:	40000c00 	.word	0x40000c00
 80052a4:	40010400 	.word	0x40010400
 80052a8:	40014000 	.word	0x40014000
 80052ac:	40001800 	.word	0x40001800

080052b0 <HAL_TIM_IRQHandler>:
 80052b0:	b580      	push	{r7, lr}
 80052b2:	b084      	sub	sp, #16
 80052b4:	af00      	add	r7, sp, #0
 80052b6:	6078      	str	r0, [r7, #4]
 80052b8:	687b      	ldr	r3, [r7, #4]
 80052ba:	681b      	ldr	r3, [r3, #0]
 80052bc:	68db      	ldr	r3, [r3, #12]
 80052be:	60fb      	str	r3, [r7, #12]
 80052c0:	687b      	ldr	r3, [r7, #4]
 80052c2:	681b      	ldr	r3, [r3, #0]
 80052c4:	691b      	ldr	r3, [r3, #16]
 80052c6:	60bb      	str	r3, [r7, #8]
 80052c8:	68bb      	ldr	r3, [r7, #8]
 80052ca:	f003 0302 	and.w	r3, r3, #2
 80052ce:	2b00      	cmp	r3, #0
 80052d0:	d020      	beq.n	8005314 <HAL_TIM_IRQHandler+0x64>
 80052d2:	68fb      	ldr	r3, [r7, #12]
 80052d4:	f003 0302 	and.w	r3, r3, #2
 80052d8:	2b00      	cmp	r3, #0
 80052da:	d01b      	beq.n	8005314 <HAL_TIM_IRQHandler+0x64>
 80052dc:	687b      	ldr	r3, [r7, #4]
 80052de:	681b      	ldr	r3, [r3, #0]
 80052e0:	f06f 0202 	mvn.w	r2, #2
 80052e4:	611a      	str	r2, [r3, #16]
 80052e6:	687b      	ldr	r3, [r7, #4]
 80052e8:	2201      	movs	r2, #1
 80052ea:	771a      	strb	r2, [r3, #28]
 80052ec:	687b      	ldr	r3, [r7, #4]
 80052ee:	681b      	ldr	r3, [r3, #0]
 80052f0:	699b      	ldr	r3, [r3, #24]
 80052f2:	f003 0303 	and.w	r3, r3, #3
 80052f6:	2b00      	cmp	r3, #0
 80052f8:	d003      	beq.n	8005302 <HAL_TIM_IRQHandler+0x52>
 80052fa:	6878      	ldr	r0, [r7, #4]
 80052fc:	f7fc f844 	bl	8001388 <HAL_TIM_IC_CaptureCallback>
 8005300:	e005      	b.n	800530e <HAL_TIM_IRQHandler+0x5e>
 8005302:	6878      	ldr	r0, [r7, #4]
 8005304:	f000 fb38 	bl	8005978 <HAL_TIM_OC_DelayElapsedCallback>
 8005308:	6878      	ldr	r0, [r7, #4]
 800530a:	f000 fb3f 	bl	800598c <HAL_TIM_PWM_PulseFinishedCallback>
 800530e:	687b      	ldr	r3, [r7, #4]
 8005310:	2200      	movs	r2, #0
 8005312:	771a      	strb	r2, [r3, #28]
 8005314:	68bb      	ldr	r3, [r7, #8]
 8005316:	f003 0304 	and.w	r3, r3, #4
 800531a:	2b00      	cmp	r3, #0
 800531c:	d020      	beq.n	8005360 <HAL_TIM_IRQHandler+0xb0>
 800531e:	68fb      	ldr	r3, [r7, #12]
 8005320:	f003 0304 	and.w	r3, r3, #4
 8005324:	2b00      	cmp	r3, #0
 8005326:	d01b      	beq.n	8005360 <HAL_TIM_IRQHandler+0xb0>
 8005328:	687b      	ldr	r3, [r7, #4]
 800532a:	681b      	ldr	r3, [r3, #0]
 800532c:	f06f 0204 	mvn.w	r2, #4
 8005330:	611a      	str	r2, [r3, #16]
 8005332:	687b      	ldr	r3, [r7, #4]
 8005334:	2202      	movs	r2, #2
 8005336:	771a      	strb	r2, [r3, #28]
 8005338:	687b      	ldr	r3, [r7, #4]
 800533a:	681b      	ldr	r3, [r3, #0]
 800533c:	699b      	ldr	r3, [r3, #24]
 800533e:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 8005342:	2b00      	cmp	r3, #0
 8005344:	d003      	beq.n	800534e <HAL_TIM_IRQHandler+0x9e>
 8005346:	6878      	ldr	r0, [r7, #4]
 8005348:	f7fc f81e 	bl	8001388 <HAL_TIM_IC_CaptureCallback>
 800534c:	e005      	b.n	800535a <HAL_TIM_IRQHandler+0xaa>
 800534e:	6878      	ldr	r0, [r7, #4]
 8005350:	f000 fb12 	bl	8005978 <HAL_TIM_OC_DelayElapsedCallback>
 8005354:	6878      	ldr	r0, [r7, #4]
 8005356:	f000 fb19 	bl	800598c <HAL_TIM_PWM_PulseFinishedCallback>
 800535a:	687b      	ldr	r3, [r7, #4]
 800535c:	2200      	movs	r2, #0
 800535e:	771a      	strb	r2, [r3, #28]
 8005360:	68bb      	ldr	r3, [r7, #8]
 8005362:	f003 0308 	and.w	r3, r3, #8
 8005366:	2b00      	cmp	r3, #0
 8005368:	d020      	beq.n	80053ac <HAL_TIM_IRQHandler+0xfc>
 800536a:	68fb      	ldr	r3, [r7, #12]
 800536c:	f003 0308 	and.w	r3, r3, #8
 8005370:	2b00      	cmp	r3, #0
 8005372:	d01b      	beq.n	80053ac <HAL_TIM_IRQHandler+0xfc>
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	681b      	ldr	r3, [r3, #0]
 8005378:	f06f 0208 	mvn.w	r2, #8
 800537c:	611a      	str	r2, [r3, #16]
 800537e:	687b      	ldr	r3, [r7, #4]
 8005380:	2204      	movs	r2, #4
 8005382:	771a      	strb	r2, [r3, #28]
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	69db      	ldr	r3, [r3, #28]
 800538a:	f003 0303 	and.w	r3, r3, #3
 800538e:	2b00      	cmp	r3, #0
 8005390:	d003      	beq.n	800539a <HAL_TIM_IRQHandler+0xea>
 8005392:	6878      	ldr	r0, [r7, #4]
 8005394:	f7fb fff8 	bl	8001388 <HAL_TIM_IC_CaptureCallback>
 8005398:	e005      	b.n	80053a6 <HAL_TIM_IRQHandler+0xf6>
 800539a:	6878      	ldr	r0, [r7, #4]
 800539c:	f000 faec 	bl	8005978 <HAL_TIM_OC_DelayElapsedCallback>
 80053a0:	6878      	ldr	r0, [r7, #4]
 80053a2:	f000 faf3 	bl	800598c <HAL_TIM_PWM_PulseFinishedCallback>
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	2200      	movs	r2, #0
 80053aa:	771a      	strb	r2, [r3, #28]
 80053ac:	68bb      	ldr	r3, [r7, #8]
 80053ae:	f003 0310 	and.w	r3, r3, #16
 80053b2:	2b00      	cmp	r3, #0
 80053b4:	d020      	beq.n	80053f8 <HAL_TIM_IRQHandler+0x148>
 80053b6:	68fb      	ldr	r3, [r7, #12]
 80053b8:	f003 0310 	and.w	r3, r3, #16
 80053bc:	2b00      	cmp	r3, #0
 80053be:	d01b      	beq.n	80053f8 <HAL_TIM_IRQHandler+0x148>
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	681b      	ldr	r3, [r3, #0]
 80053c4:	f06f 0210 	mvn.w	r2, #16
 80053c8:	611a      	str	r2, [r3, #16]
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	2208      	movs	r2, #8
 80053ce:	771a      	strb	r2, [r3, #28]
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	681b      	ldr	r3, [r3, #0]
 80053d4:	69db      	ldr	r3, [r3, #28]
 80053d6:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80053da:	2b00      	cmp	r3, #0
 80053dc:	d003      	beq.n	80053e6 <HAL_TIM_IRQHandler+0x136>
 80053de:	6878      	ldr	r0, [r7, #4]
 80053e0:	f7fb ffd2 	bl	8001388 <HAL_TIM_IC_CaptureCallback>
 80053e4:	e005      	b.n	80053f2 <HAL_TIM_IRQHandler+0x142>
 80053e6:	6878      	ldr	r0, [r7, #4]
 80053e8:	f000 fac6 	bl	8005978 <HAL_TIM_OC_DelayElapsedCallback>
 80053ec:	6878      	ldr	r0, [r7, #4]
 80053ee:	f000 facd 	bl	800598c <HAL_TIM_PWM_PulseFinishedCallback>
 80053f2:	687b      	ldr	r3, [r7, #4]
 80053f4:	2200      	movs	r2, #0
 80053f6:	771a      	strb	r2, [r3, #28]
 80053f8:	68bb      	ldr	r3, [r7, #8]
 80053fa:	f003 0301 	and.w	r3, r3, #1
 80053fe:	2b00      	cmp	r3, #0
 8005400:	d00c      	beq.n	800541c <HAL_TIM_IRQHandler+0x16c>
 8005402:	68fb      	ldr	r3, [r7, #12]
 8005404:	f003 0301 	and.w	r3, r3, #1
 8005408:	2b00      	cmp	r3, #0
 800540a:	d007      	beq.n	800541c <HAL_TIM_IRQHandler+0x16c>
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	681b      	ldr	r3, [r3, #0]
 8005410:	f06f 0201 	mvn.w	r2, #1
 8005414:	611a      	str	r2, [r3, #16]
 8005416:	6878      	ldr	r0, [r7, #4]
 8005418:	f000 faa4 	bl	8005964 <HAL_TIM_PeriodElapsedCallback>
 800541c:	68bb      	ldr	r3, [r7, #8]
 800541e:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8005422:	2b00      	cmp	r3, #0
 8005424:	d00c      	beq.n	8005440 <HAL_TIM_IRQHandler+0x190>
 8005426:	68fb      	ldr	r3, [r7, #12]
 8005428:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800542c:	2b00      	cmp	r3, #0
 800542e:	d007      	beq.n	8005440 <HAL_TIM_IRQHandler+0x190>
 8005430:	687b      	ldr	r3, [r7, #4]
 8005432:	681b      	ldr	r3, [r3, #0]
 8005434:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8005438:	611a      	str	r2, [r3, #16]
 800543a:	6878      	ldr	r0, [r7, #4]
 800543c:	f000 ff80 	bl	8006340 <HAL_TIMEx_BreakCallback>
 8005440:	68bb      	ldr	r3, [r7, #8]
 8005442:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005446:	2b00      	cmp	r3, #0
 8005448:	d00c      	beq.n	8005464 <HAL_TIM_IRQHandler+0x1b4>
 800544a:	68fb      	ldr	r3, [r7, #12]
 800544c:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005450:	2b00      	cmp	r3, #0
 8005452:	d007      	beq.n	8005464 <HAL_TIM_IRQHandler+0x1b4>
 8005454:	687b      	ldr	r3, [r7, #4]
 8005456:	681b      	ldr	r3, [r3, #0]
 8005458:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 800545c:	611a      	str	r2, [r3, #16]
 800545e:	6878      	ldr	r0, [r7, #4]
 8005460:	f000 fa9e 	bl	80059a0 <HAL_TIM_TriggerCallback>
 8005464:	68bb      	ldr	r3, [r7, #8]
 8005466:	f003 0320 	and.w	r3, r3, #32
 800546a:	2b00      	cmp	r3, #0
 800546c:	d00c      	beq.n	8005488 <HAL_TIM_IRQHandler+0x1d8>
 800546e:	68fb      	ldr	r3, [r7, #12]
 8005470:	f003 0320 	and.w	r3, r3, #32
 8005474:	2b00      	cmp	r3, #0
 8005476:	d007      	beq.n	8005488 <HAL_TIM_IRQHandler+0x1d8>
 8005478:	687b      	ldr	r3, [r7, #4]
 800547a:	681b      	ldr	r3, [r3, #0]
 800547c:	f06f 0220 	mvn.w	r2, #32
 8005480:	611a      	str	r2, [r3, #16]
 8005482:	6878      	ldr	r0, [r7, #4]
 8005484:	f000 ff52 	bl	800632c <HAL_TIMEx_CommutCallback>
 8005488:	bf00      	nop
 800548a:	3710      	adds	r7, #16
 800548c:	46bd      	mov	sp, r7
 800548e:	bd80      	pop	{r7, pc}

08005490 <HAL_TIM_IC_ConfigChannel>:
 8005490:	b580      	push	{r7, lr}
 8005492:	b086      	sub	sp, #24
 8005494:	af00      	add	r7, sp, #0
 8005496:	60f8      	str	r0, [r7, #12]
 8005498:	60b9      	str	r1, [r7, #8]
 800549a:	607a      	str	r2, [r7, #4]
 800549c:	2300      	movs	r3, #0
 800549e:	75fb      	strb	r3, [r7, #23]
 80054a0:	68fb      	ldr	r3, [r7, #12]
 80054a2:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80054a6:	2b01      	cmp	r3, #1
 80054a8:	d101      	bne.n	80054ae <HAL_TIM_IC_ConfigChannel+0x1e>
 80054aa:	2302      	movs	r3, #2
 80054ac:	e088      	b.n	80055c0 <HAL_TIM_IC_ConfigChannel+0x130>
 80054ae:	68fb      	ldr	r3, [r7, #12]
 80054b0:	2201      	movs	r2, #1
 80054b2:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	2b00      	cmp	r3, #0
 80054ba:	d11b      	bne.n	80054f4 <HAL_TIM_IC_ConfigChannel+0x64>
 80054bc:	68fb      	ldr	r3, [r7, #12]
 80054be:	6818      	ldr	r0, [r3, #0]
 80054c0:	68bb      	ldr	r3, [r7, #8]
 80054c2:	6819      	ldr	r1, [r3, #0]
 80054c4:	68bb      	ldr	r3, [r7, #8]
 80054c6:	685a      	ldr	r2, [r3, #4]
 80054c8:	68bb      	ldr	r3, [r7, #8]
 80054ca:	68db      	ldr	r3, [r3, #12]
 80054cc:	f000 fcc8 	bl	8005e60 <TIM_TI1_SetConfig>
 80054d0:	68fb      	ldr	r3, [r7, #12]
 80054d2:	681b      	ldr	r3, [r3, #0]
 80054d4:	699a      	ldr	r2, [r3, #24]
 80054d6:	68fb      	ldr	r3, [r7, #12]
 80054d8:	681b      	ldr	r3, [r3, #0]
 80054da:	f022 020c 	bic.w	r2, r2, #12
 80054de:	619a      	str	r2, [r3, #24]
 80054e0:	68fb      	ldr	r3, [r7, #12]
 80054e2:	681b      	ldr	r3, [r3, #0]
 80054e4:	6999      	ldr	r1, [r3, #24]
 80054e6:	68bb      	ldr	r3, [r7, #8]
 80054e8:	689a      	ldr	r2, [r3, #8]
 80054ea:	68fb      	ldr	r3, [r7, #12]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	430a      	orrs	r2, r1
 80054f0:	619a      	str	r2, [r3, #24]
 80054f2:	e060      	b.n	80055b6 <HAL_TIM_IC_ConfigChannel+0x126>
 80054f4:	687b      	ldr	r3, [r7, #4]
 80054f6:	2b04      	cmp	r3, #4
 80054f8:	d11c      	bne.n	8005534 <HAL_TIM_IC_ConfigChannel+0xa4>
 80054fa:	68fb      	ldr	r3, [r7, #12]
 80054fc:	6818      	ldr	r0, [r3, #0]
 80054fe:	68bb      	ldr	r3, [r7, #8]
 8005500:	6819      	ldr	r1, [r3, #0]
 8005502:	68bb      	ldr	r3, [r7, #8]
 8005504:	685a      	ldr	r2, [r3, #4]
 8005506:	68bb      	ldr	r3, [r7, #8]
 8005508:	68db      	ldr	r3, [r3, #12]
 800550a:	f000 fd4c 	bl	8005fa6 <TIM_TI2_SetConfig>
 800550e:	68fb      	ldr	r3, [r7, #12]
 8005510:	681b      	ldr	r3, [r3, #0]
 8005512:	699a      	ldr	r2, [r3, #24]
 8005514:	68fb      	ldr	r3, [r7, #12]
 8005516:	681b      	ldr	r3, [r3, #0]
 8005518:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 800551c:	619a      	str	r2, [r3, #24]
 800551e:	68fb      	ldr	r3, [r7, #12]
 8005520:	681b      	ldr	r3, [r3, #0]
 8005522:	6999      	ldr	r1, [r3, #24]
 8005524:	68bb      	ldr	r3, [r7, #8]
 8005526:	689b      	ldr	r3, [r3, #8]
 8005528:	021a      	lsls	r2, r3, #8
 800552a:	68fb      	ldr	r3, [r7, #12]
 800552c:	681b      	ldr	r3, [r3, #0]
 800552e:	430a      	orrs	r2, r1
 8005530:	619a      	str	r2, [r3, #24]
 8005532:	e040      	b.n	80055b6 <HAL_TIM_IC_ConfigChannel+0x126>
 8005534:	687b      	ldr	r3, [r7, #4]
 8005536:	2b08      	cmp	r3, #8
 8005538:	d11b      	bne.n	8005572 <HAL_TIM_IC_ConfigChannel+0xe2>
 800553a:	68fb      	ldr	r3, [r7, #12]
 800553c:	6818      	ldr	r0, [r3, #0]
 800553e:	68bb      	ldr	r3, [r7, #8]
 8005540:	6819      	ldr	r1, [r3, #0]
 8005542:	68bb      	ldr	r3, [r7, #8]
 8005544:	685a      	ldr	r2, [r3, #4]
 8005546:	68bb      	ldr	r3, [r7, #8]
 8005548:	68db      	ldr	r3, [r3, #12]
 800554a:	f000 fd99 	bl	8006080 <TIM_TI3_SetConfig>
 800554e:	68fb      	ldr	r3, [r7, #12]
 8005550:	681b      	ldr	r3, [r3, #0]
 8005552:	69da      	ldr	r2, [r3, #28]
 8005554:	68fb      	ldr	r3, [r7, #12]
 8005556:	681b      	ldr	r3, [r3, #0]
 8005558:	f022 020c 	bic.w	r2, r2, #12
 800555c:	61da      	str	r2, [r3, #28]
 800555e:	68fb      	ldr	r3, [r7, #12]
 8005560:	681b      	ldr	r3, [r3, #0]
 8005562:	69d9      	ldr	r1, [r3, #28]
 8005564:	68bb      	ldr	r3, [r7, #8]
 8005566:	689a      	ldr	r2, [r3, #8]
 8005568:	68fb      	ldr	r3, [r7, #12]
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	430a      	orrs	r2, r1
 800556e:	61da      	str	r2, [r3, #28]
 8005570:	e021      	b.n	80055b6 <HAL_TIM_IC_ConfigChannel+0x126>
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	2b0c      	cmp	r3, #12
 8005576:	d11c      	bne.n	80055b2 <HAL_TIM_IC_ConfigChannel+0x122>
 8005578:	68fb      	ldr	r3, [r7, #12]
 800557a:	6818      	ldr	r0, [r3, #0]
 800557c:	68bb      	ldr	r3, [r7, #8]
 800557e:	6819      	ldr	r1, [r3, #0]
 8005580:	68bb      	ldr	r3, [r7, #8]
 8005582:	685a      	ldr	r2, [r3, #4]
 8005584:	68bb      	ldr	r3, [r7, #8]
 8005586:	68db      	ldr	r3, [r3, #12]
 8005588:	f000 fdb6 	bl	80060f8 <TIM_TI4_SetConfig>
 800558c:	68fb      	ldr	r3, [r7, #12]
 800558e:	681b      	ldr	r3, [r3, #0]
 8005590:	69da      	ldr	r2, [r3, #28]
 8005592:	68fb      	ldr	r3, [r7, #12]
 8005594:	681b      	ldr	r3, [r3, #0]
 8005596:	f422 6240 	bic.w	r2, r2, #3072	@ 0xc00
 800559a:	61da      	str	r2, [r3, #28]
 800559c:	68fb      	ldr	r3, [r7, #12]
 800559e:	681b      	ldr	r3, [r3, #0]
 80055a0:	69d9      	ldr	r1, [r3, #28]
 80055a2:	68bb      	ldr	r3, [r7, #8]
 80055a4:	689b      	ldr	r3, [r3, #8]
 80055a6:	021a      	lsls	r2, r3, #8
 80055a8:	68fb      	ldr	r3, [r7, #12]
 80055aa:	681b      	ldr	r3, [r3, #0]
 80055ac:	430a      	orrs	r2, r1
 80055ae:	61da      	str	r2, [r3, #28]
 80055b0:	e001      	b.n	80055b6 <HAL_TIM_IC_ConfigChannel+0x126>
 80055b2:	2301      	movs	r3, #1
 80055b4:	75fb      	strb	r3, [r7, #23]
 80055b6:	68fb      	ldr	r3, [r7, #12]
 80055b8:	2200      	movs	r2, #0
 80055ba:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80055be:	7dfb      	ldrb	r3, [r7, #23]
 80055c0:	4618      	mov	r0, r3
 80055c2:	3718      	adds	r7, #24
 80055c4:	46bd      	mov	sp, r7
 80055c6:	bd80      	pop	{r7, pc}

080055c8 <HAL_TIM_PWM_ConfigChannel>:
 80055c8:	b580      	push	{r7, lr}
 80055ca:	b086      	sub	sp, #24
 80055cc:	af00      	add	r7, sp, #0
 80055ce:	60f8      	str	r0, [r7, #12]
 80055d0:	60b9      	str	r1, [r7, #8]
 80055d2:	607a      	str	r2, [r7, #4]
 80055d4:	2300      	movs	r3, #0
 80055d6:	75fb      	strb	r3, [r7, #23]
 80055d8:	68fb      	ldr	r3, [r7, #12]
 80055da:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 80055de:	2b01      	cmp	r3, #1
 80055e0:	d101      	bne.n	80055e6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80055e2:	2302      	movs	r3, #2
 80055e4:	e0ae      	b.n	8005744 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80055e6:	68fb      	ldr	r3, [r7, #12]
 80055e8:	2201      	movs	r2, #1
 80055ea:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80055ee:	687b      	ldr	r3, [r7, #4]
 80055f0:	2b0c      	cmp	r3, #12
 80055f2:	f200 809f 	bhi.w	8005734 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80055f6:	a201      	add	r2, pc, #4	@ (adr r2, 80055fc <HAL_TIM_PWM_ConfigChannel+0x34>)
 80055f8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80055fc:	08005631 	.word	0x08005631
 8005600:	08005735 	.word	0x08005735
 8005604:	08005735 	.word	0x08005735
 8005608:	08005735 	.word	0x08005735
 800560c:	08005671 	.word	0x08005671
 8005610:	08005735 	.word	0x08005735
 8005614:	08005735 	.word	0x08005735
 8005618:	08005735 	.word	0x08005735
 800561c:	080056b3 	.word	0x080056b3
 8005620:	08005735 	.word	0x08005735
 8005624:	08005735 	.word	0x08005735
 8005628:	08005735 	.word	0x08005735
 800562c:	080056f3 	.word	0x080056f3
 8005630:	68fb      	ldr	r3, [r7, #12]
 8005632:	681b      	ldr	r3, [r3, #0]
 8005634:	68b9      	ldr	r1, [r7, #8]
 8005636:	4618      	mov	r0, r3
 8005638:	f000 fa62 	bl	8005b00 <TIM_OC1_SetConfig>
 800563c:	68fb      	ldr	r3, [r7, #12]
 800563e:	681b      	ldr	r3, [r3, #0]
 8005640:	699a      	ldr	r2, [r3, #24]
 8005642:	68fb      	ldr	r3, [r7, #12]
 8005644:	681b      	ldr	r3, [r3, #0]
 8005646:	f042 0208 	orr.w	r2, r2, #8
 800564a:	619a      	str	r2, [r3, #24]
 800564c:	68fb      	ldr	r3, [r7, #12]
 800564e:	681b      	ldr	r3, [r3, #0]
 8005650:	699a      	ldr	r2, [r3, #24]
 8005652:	68fb      	ldr	r3, [r7, #12]
 8005654:	681b      	ldr	r3, [r3, #0]
 8005656:	f022 0204 	bic.w	r2, r2, #4
 800565a:	619a      	str	r2, [r3, #24]
 800565c:	68fb      	ldr	r3, [r7, #12]
 800565e:	681b      	ldr	r3, [r3, #0]
 8005660:	6999      	ldr	r1, [r3, #24]
 8005662:	68bb      	ldr	r3, [r7, #8]
 8005664:	691a      	ldr	r2, [r3, #16]
 8005666:	68fb      	ldr	r3, [r7, #12]
 8005668:	681b      	ldr	r3, [r3, #0]
 800566a:	430a      	orrs	r2, r1
 800566c:	619a      	str	r2, [r3, #24]
 800566e:	e064      	b.n	800573a <HAL_TIM_PWM_ConfigChannel+0x172>
 8005670:	68fb      	ldr	r3, [r7, #12]
 8005672:	681b      	ldr	r3, [r3, #0]
 8005674:	68b9      	ldr	r1, [r7, #8]
 8005676:	4618      	mov	r0, r3
 8005678:	f000 fab2 	bl	8005be0 <TIM_OC2_SetConfig>
 800567c:	68fb      	ldr	r3, [r7, #12]
 800567e:	681b      	ldr	r3, [r3, #0]
 8005680:	699a      	ldr	r2, [r3, #24]
 8005682:	68fb      	ldr	r3, [r7, #12]
 8005684:	681b      	ldr	r3, [r3, #0]
 8005686:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800568a:	619a      	str	r2, [r3, #24]
 800568c:	68fb      	ldr	r3, [r7, #12]
 800568e:	681b      	ldr	r3, [r3, #0]
 8005690:	699a      	ldr	r2, [r3, #24]
 8005692:	68fb      	ldr	r3, [r7, #12]
 8005694:	681b      	ldr	r3, [r3, #0]
 8005696:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800569a:	619a      	str	r2, [r3, #24]
 800569c:	68fb      	ldr	r3, [r7, #12]
 800569e:	681b      	ldr	r3, [r3, #0]
 80056a0:	6999      	ldr	r1, [r3, #24]
 80056a2:	68bb      	ldr	r3, [r7, #8]
 80056a4:	691b      	ldr	r3, [r3, #16]
 80056a6:	021a      	lsls	r2, r3, #8
 80056a8:	68fb      	ldr	r3, [r7, #12]
 80056aa:	681b      	ldr	r3, [r3, #0]
 80056ac:	430a      	orrs	r2, r1
 80056ae:	619a      	str	r2, [r3, #24]
 80056b0:	e043      	b.n	800573a <HAL_TIM_PWM_ConfigChannel+0x172>
 80056b2:	68fb      	ldr	r3, [r7, #12]
 80056b4:	681b      	ldr	r3, [r3, #0]
 80056b6:	68b9      	ldr	r1, [r7, #8]
 80056b8:	4618      	mov	r0, r3
 80056ba:	f000 fb07 	bl	8005ccc <TIM_OC3_SetConfig>
 80056be:	68fb      	ldr	r3, [r7, #12]
 80056c0:	681b      	ldr	r3, [r3, #0]
 80056c2:	69da      	ldr	r2, [r3, #28]
 80056c4:	68fb      	ldr	r3, [r7, #12]
 80056c6:	681b      	ldr	r3, [r3, #0]
 80056c8:	f042 0208 	orr.w	r2, r2, #8
 80056cc:	61da      	str	r2, [r3, #28]
 80056ce:	68fb      	ldr	r3, [r7, #12]
 80056d0:	681b      	ldr	r3, [r3, #0]
 80056d2:	69da      	ldr	r2, [r3, #28]
 80056d4:	68fb      	ldr	r3, [r7, #12]
 80056d6:	681b      	ldr	r3, [r3, #0]
 80056d8:	f022 0204 	bic.w	r2, r2, #4
 80056dc:	61da      	str	r2, [r3, #28]
 80056de:	68fb      	ldr	r3, [r7, #12]
 80056e0:	681b      	ldr	r3, [r3, #0]
 80056e2:	69d9      	ldr	r1, [r3, #28]
 80056e4:	68bb      	ldr	r3, [r7, #8]
 80056e6:	691a      	ldr	r2, [r3, #16]
 80056e8:	68fb      	ldr	r3, [r7, #12]
 80056ea:	681b      	ldr	r3, [r3, #0]
 80056ec:	430a      	orrs	r2, r1
 80056ee:	61da      	str	r2, [r3, #28]
 80056f0:	e023      	b.n	800573a <HAL_TIM_PWM_ConfigChannel+0x172>
 80056f2:	68fb      	ldr	r3, [r7, #12]
 80056f4:	681b      	ldr	r3, [r3, #0]
 80056f6:	68b9      	ldr	r1, [r7, #8]
 80056f8:	4618      	mov	r0, r3
 80056fa:	f000 fb5b 	bl	8005db4 <TIM_OC4_SetConfig>
 80056fe:	68fb      	ldr	r3, [r7, #12]
 8005700:	681b      	ldr	r3, [r3, #0]
 8005702:	69da      	ldr	r2, [r3, #28]
 8005704:	68fb      	ldr	r3, [r7, #12]
 8005706:	681b      	ldr	r3, [r3, #0]
 8005708:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800570c:	61da      	str	r2, [r3, #28]
 800570e:	68fb      	ldr	r3, [r7, #12]
 8005710:	681b      	ldr	r3, [r3, #0]
 8005712:	69da      	ldr	r2, [r3, #28]
 8005714:	68fb      	ldr	r3, [r7, #12]
 8005716:	681b      	ldr	r3, [r3, #0]
 8005718:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800571c:	61da      	str	r2, [r3, #28]
 800571e:	68fb      	ldr	r3, [r7, #12]
 8005720:	681b      	ldr	r3, [r3, #0]
 8005722:	69d9      	ldr	r1, [r3, #28]
 8005724:	68bb      	ldr	r3, [r7, #8]
 8005726:	691b      	ldr	r3, [r3, #16]
 8005728:	021a      	lsls	r2, r3, #8
 800572a:	68fb      	ldr	r3, [r7, #12]
 800572c:	681b      	ldr	r3, [r3, #0]
 800572e:	430a      	orrs	r2, r1
 8005730:	61da      	str	r2, [r3, #28]
 8005732:	e002      	b.n	800573a <HAL_TIM_PWM_ConfigChannel+0x172>
 8005734:	2301      	movs	r3, #1
 8005736:	75fb      	strb	r3, [r7, #23]
 8005738:	bf00      	nop
 800573a:	68fb      	ldr	r3, [r7, #12]
 800573c:	2200      	movs	r2, #0
 800573e:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005742:	7dfb      	ldrb	r3, [r7, #23]
 8005744:	4618      	mov	r0, r3
 8005746:	3718      	adds	r7, #24
 8005748:	46bd      	mov	sp, r7
 800574a:	bd80      	pop	{r7, pc}

0800574c <HAL_TIM_ConfigClockSource>:
 800574c:	b580      	push	{r7, lr}
 800574e:	b084      	sub	sp, #16
 8005750:	af00      	add	r7, sp, #0
 8005752:	6078      	str	r0, [r7, #4]
 8005754:	6039      	str	r1, [r7, #0]
 8005756:	2300      	movs	r3, #0
 8005758:	73fb      	strb	r3, [r7, #15]
 800575a:	687b      	ldr	r3, [r7, #4]
 800575c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8005760:	2b01      	cmp	r3, #1
 8005762:	d101      	bne.n	8005768 <HAL_TIM_ConfigClockSource+0x1c>
 8005764:	2302      	movs	r3, #2
 8005766:	e0b4      	b.n	80058d2 <HAL_TIM_ConfigClockSource+0x186>
 8005768:	687b      	ldr	r3, [r7, #4]
 800576a:	2201      	movs	r2, #1
 800576c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8005770:	687b      	ldr	r3, [r7, #4]
 8005772:	2202      	movs	r2, #2
 8005774:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 8005778:	687b      	ldr	r3, [r7, #4]
 800577a:	681b      	ldr	r3, [r3, #0]
 800577c:	689b      	ldr	r3, [r3, #8]
 800577e:	60bb      	str	r3, [r7, #8]
 8005780:	68bb      	ldr	r3, [r7, #8]
 8005782:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8005786:	60bb      	str	r3, [r7, #8]
 8005788:	68bb      	ldr	r3, [r7, #8]
 800578a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800578e:	60bb      	str	r3, [r7, #8]
 8005790:	687b      	ldr	r3, [r7, #4]
 8005792:	681b      	ldr	r3, [r3, #0]
 8005794:	68ba      	ldr	r2, [r7, #8]
 8005796:	609a      	str	r2, [r3, #8]
 8005798:	683b      	ldr	r3, [r7, #0]
 800579a:	681b      	ldr	r3, [r3, #0]
 800579c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80057a0:	d03e      	beq.n	8005820 <HAL_TIM_ConfigClockSource+0xd4>
 80057a2:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 80057a6:	f200 8087 	bhi.w	80058b8 <HAL_TIM_ConfigClockSource+0x16c>
 80057aa:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80057ae:	f000 8086 	beq.w	80058be <HAL_TIM_ConfigClockSource+0x172>
 80057b2:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 80057b6:	d87f      	bhi.n	80058b8 <HAL_TIM_ConfigClockSource+0x16c>
 80057b8:	2b70      	cmp	r3, #112	@ 0x70
 80057ba:	d01a      	beq.n	80057f2 <HAL_TIM_ConfigClockSource+0xa6>
 80057bc:	2b70      	cmp	r3, #112	@ 0x70
 80057be:	d87b      	bhi.n	80058b8 <HAL_TIM_ConfigClockSource+0x16c>
 80057c0:	2b60      	cmp	r3, #96	@ 0x60
 80057c2:	d050      	beq.n	8005866 <HAL_TIM_ConfigClockSource+0x11a>
 80057c4:	2b60      	cmp	r3, #96	@ 0x60
 80057c6:	d877      	bhi.n	80058b8 <HAL_TIM_ConfigClockSource+0x16c>
 80057c8:	2b50      	cmp	r3, #80	@ 0x50
 80057ca:	d03c      	beq.n	8005846 <HAL_TIM_ConfigClockSource+0xfa>
 80057cc:	2b50      	cmp	r3, #80	@ 0x50
 80057ce:	d873      	bhi.n	80058b8 <HAL_TIM_ConfigClockSource+0x16c>
 80057d0:	2b40      	cmp	r3, #64	@ 0x40
 80057d2:	d058      	beq.n	8005886 <HAL_TIM_ConfigClockSource+0x13a>
 80057d4:	2b40      	cmp	r3, #64	@ 0x40
 80057d6:	d86f      	bhi.n	80058b8 <HAL_TIM_ConfigClockSource+0x16c>
 80057d8:	2b30      	cmp	r3, #48	@ 0x30
 80057da:	d064      	beq.n	80058a6 <HAL_TIM_ConfigClockSource+0x15a>
 80057dc:	2b30      	cmp	r3, #48	@ 0x30
 80057de:	d86b      	bhi.n	80058b8 <HAL_TIM_ConfigClockSource+0x16c>
 80057e0:	2b20      	cmp	r3, #32
 80057e2:	d060      	beq.n	80058a6 <HAL_TIM_ConfigClockSource+0x15a>
 80057e4:	2b20      	cmp	r3, #32
 80057e6:	d867      	bhi.n	80058b8 <HAL_TIM_ConfigClockSource+0x16c>
 80057e8:	2b00      	cmp	r3, #0
 80057ea:	d05c      	beq.n	80058a6 <HAL_TIM_ConfigClockSource+0x15a>
 80057ec:	2b10      	cmp	r3, #16
 80057ee:	d05a      	beq.n	80058a6 <HAL_TIM_ConfigClockSource+0x15a>
 80057f0:	e062      	b.n	80058b8 <HAL_TIM_ConfigClockSource+0x16c>
 80057f2:	687b      	ldr	r3, [r7, #4]
 80057f4:	6818      	ldr	r0, [r3, #0]
 80057f6:	683b      	ldr	r3, [r7, #0]
 80057f8:	6899      	ldr	r1, [r3, #8]
 80057fa:	683b      	ldr	r3, [r7, #0]
 80057fc:	685a      	ldr	r2, [r3, #4]
 80057fe:	683b      	ldr	r3, [r7, #0]
 8005800:	68db      	ldr	r3, [r3, #12]
 8005802:	f000 fcd1 	bl	80061a8 <TIM_ETR_SetConfig>
 8005806:	687b      	ldr	r3, [r7, #4]
 8005808:	681b      	ldr	r3, [r3, #0]
 800580a:	689b      	ldr	r3, [r3, #8]
 800580c:	60bb      	str	r3, [r7, #8]
 800580e:	68bb      	ldr	r3, [r7, #8]
 8005810:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 8005814:	60bb      	str	r3, [r7, #8]
 8005816:	687b      	ldr	r3, [r7, #4]
 8005818:	681b      	ldr	r3, [r3, #0]
 800581a:	68ba      	ldr	r2, [r7, #8]
 800581c:	609a      	str	r2, [r3, #8]
 800581e:	e04f      	b.n	80058c0 <HAL_TIM_ConfigClockSource+0x174>
 8005820:	687b      	ldr	r3, [r7, #4]
 8005822:	6818      	ldr	r0, [r3, #0]
 8005824:	683b      	ldr	r3, [r7, #0]
 8005826:	6899      	ldr	r1, [r3, #8]
 8005828:	683b      	ldr	r3, [r7, #0]
 800582a:	685a      	ldr	r2, [r3, #4]
 800582c:	683b      	ldr	r3, [r7, #0]
 800582e:	68db      	ldr	r3, [r3, #12]
 8005830:	f000 fcba 	bl	80061a8 <TIM_ETR_SetConfig>
 8005834:	687b      	ldr	r3, [r7, #4]
 8005836:	681b      	ldr	r3, [r3, #0]
 8005838:	689a      	ldr	r2, [r3, #8]
 800583a:	687b      	ldr	r3, [r7, #4]
 800583c:	681b      	ldr	r3, [r3, #0]
 800583e:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8005842:	609a      	str	r2, [r3, #8]
 8005844:	e03c      	b.n	80058c0 <HAL_TIM_ConfigClockSource+0x174>
 8005846:	687b      	ldr	r3, [r7, #4]
 8005848:	6818      	ldr	r0, [r3, #0]
 800584a:	683b      	ldr	r3, [r7, #0]
 800584c:	6859      	ldr	r1, [r3, #4]
 800584e:	683b      	ldr	r3, [r7, #0]
 8005850:	68db      	ldr	r3, [r3, #12]
 8005852:	461a      	mov	r2, r3
 8005854:	f000 fb78 	bl	8005f48 <TIM_TI1_ConfigInputStage>
 8005858:	687b      	ldr	r3, [r7, #4]
 800585a:	681b      	ldr	r3, [r3, #0]
 800585c:	2150      	movs	r1, #80	@ 0x50
 800585e:	4618      	mov	r0, r3
 8005860:	f000 fc87 	bl	8006172 <TIM_ITRx_SetConfig>
 8005864:	e02c      	b.n	80058c0 <HAL_TIM_ConfigClockSource+0x174>
 8005866:	687b      	ldr	r3, [r7, #4]
 8005868:	6818      	ldr	r0, [r3, #0]
 800586a:	683b      	ldr	r3, [r7, #0]
 800586c:	6859      	ldr	r1, [r3, #4]
 800586e:	683b      	ldr	r3, [r7, #0]
 8005870:	68db      	ldr	r3, [r3, #12]
 8005872:	461a      	mov	r2, r3
 8005874:	f000 fbd4 	bl	8006020 <TIM_TI2_ConfigInputStage>
 8005878:	687b      	ldr	r3, [r7, #4]
 800587a:	681b      	ldr	r3, [r3, #0]
 800587c:	2160      	movs	r1, #96	@ 0x60
 800587e:	4618      	mov	r0, r3
 8005880:	f000 fc77 	bl	8006172 <TIM_ITRx_SetConfig>
 8005884:	e01c      	b.n	80058c0 <HAL_TIM_ConfigClockSource+0x174>
 8005886:	687b      	ldr	r3, [r7, #4]
 8005888:	6818      	ldr	r0, [r3, #0]
 800588a:	683b      	ldr	r3, [r7, #0]
 800588c:	6859      	ldr	r1, [r3, #4]
 800588e:	683b      	ldr	r3, [r7, #0]
 8005890:	68db      	ldr	r3, [r3, #12]
 8005892:	461a      	mov	r2, r3
 8005894:	f000 fb58 	bl	8005f48 <TIM_TI1_ConfigInputStage>
 8005898:	687b      	ldr	r3, [r7, #4]
 800589a:	681b      	ldr	r3, [r3, #0]
 800589c:	2140      	movs	r1, #64	@ 0x40
 800589e:	4618      	mov	r0, r3
 80058a0:	f000 fc67 	bl	8006172 <TIM_ITRx_SetConfig>
 80058a4:	e00c      	b.n	80058c0 <HAL_TIM_ConfigClockSource+0x174>
 80058a6:	687b      	ldr	r3, [r7, #4]
 80058a8:	681a      	ldr	r2, [r3, #0]
 80058aa:	683b      	ldr	r3, [r7, #0]
 80058ac:	681b      	ldr	r3, [r3, #0]
 80058ae:	4619      	mov	r1, r3
 80058b0:	4610      	mov	r0, r2
 80058b2:	f000 fc5e 	bl	8006172 <TIM_ITRx_SetConfig>
 80058b6:	e003      	b.n	80058c0 <HAL_TIM_ConfigClockSource+0x174>
 80058b8:	2301      	movs	r3, #1
 80058ba:	73fb      	strb	r3, [r7, #15]
 80058bc:	e000      	b.n	80058c0 <HAL_TIM_ConfigClockSource+0x174>
 80058be:	bf00      	nop
 80058c0:	687b      	ldr	r3, [r7, #4]
 80058c2:	2201      	movs	r2, #1
 80058c4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80058c8:	687b      	ldr	r3, [r7, #4]
 80058ca:	2200      	movs	r2, #0
 80058cc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 80058d0:	7bfb      	ldrb	r3, [r7, #15]
 80058d2:	4618      	mov	r0, r3
 80058d4:	3710      	adds	r7, #16
 80058d6:	46bd      	mov	sp, r7
 80058d8:	bd80      	pop	{r7, pc}
	...

080058dc <HAL_TIM_ReadCapturedValue>:
 80058dc:	b480      	push	{r7}
 80058de:	b085      	sub	sp, #20
 80058e0:	af00      	add	r7, sp, #0
 80058e2:	6078      	str	r0, [r7, #4]
 80058e4:	6039      	str	r1, [r7, #0]
 80058e6:	2300      	movs	r3, #0
 80058e8:	60fb      	str	r3, [r7, #12]
 80058ea:	683b      	ldr	r3, [r7, #0]
 80058ec:	2b0c      	cmp	r3, #12
 80058ee:	d831      	bhi.n	8005954 <HAL_TIM_ReadCapturedValue+0x78>
 80058f0:	a201      	add	r2, pc, #4	@ (adr r2, 80058f8 <HAL_TIM_ReadCapturedValue+0x1c>)
 80058f2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80058f6:	bf00      	nop
 80058f8:	0800592d 	.word	0x0800592d
 80058fc:	08005955 	.word	0x08005955
 8005900:	08005955 	.word	0x08005955
 8005904:	08005955 	.word	0x08005955
 8005908:	08005937 	.word	0x08005937
 800590c:	08005955 	.word	0x08005955
 8005910:	08005955 	.word	0x08005955
 8005914:	08005955 	.word	0x08005955
 8005918:	08005941 	.word	0x08005941
 800591c:	08005955 	.word	0x08005955
 8005920:	08005955 	.word	0x08005955
 8005924:	08005955 	.word	0x08005955
 8005928:	0800594b 	.word	0x0800594b
 800592c:	687b      	ldr	r3, [r7, #4]
 800592e:	681b      	ldr	r3, [r3, #0]
 8005930:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8005932:	60fb      	str	r3, [r7, #12]
 8005934:	e00f      	b.n	8005956 <HAL_TIM_ReadCapturedValue+0x7a>
 8005936:	687b      	ldr	r3, [r7, #4]
 8005938:	681b      	ldr	r3, [r3, #0]
 800593a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800593c:	60fb      	str	r3, [r7, #12]
 800593e:	e00a      	b.n	8005956 <HAL_TIM_ReadCapturedValue+0x7a>
 8005940:	687b      	ldr	r3, [r7, #4]
 8005942:	681b      	ldr	r3, [r3, #0]
 8005944:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8005946:	60fb      	str	r3, [r7, #12]
 8005948:	e005      	b.n	8005956 <HAL_TIM_ReadCapturedValue+0x7a>
 800594a:	687b      	ldr	r3, [r7, #4]
 800594c:	681b      	ldr	r3, [r3, #0]
 800594e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005950:	60fb      	str	r3, [r7, #12]
 8005952:	e000      	b.n	8005956 <HAL_TIM_ReadCapturedValue+0x7a>
 8005954:	bf00      	nop
 8005956:	68fb      	ldr	r3, [r7, #12]
 8005958:	4618      	mov	r0, r3
 800595a:	3714      	adds	r7, #20
 800595c:	46bd      	mov	sp, r7
 800595e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005962:	4770      	bx	lr

08005964 <HAL_TIM_PeriodElapsedCallback>:
 8005964:	b480      	push	{r7}
 8005966:	b083      	sub	sp, #12
 8005968:	af00      	add	r7, sp, #0
 800596a:	6078      	str	r0, [r7, #4]
 800596c:	bf00      	nop
 800596e:	370c      	adds	r7, #12
 8005970:	46bd      	mov	sp, r7
 8005972:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005976:	4770      	bx	lr

08005978 <HAL_TIM_OC_DelayElapsedCallback>:
 8005978:	b480      	push	{r7}
 800597a:	b083      	sub	sp, #12
 800597c:	af00      	add	r7, sp, #0
 800597e:	6078      	str	r0, [r7, #4]
 8005980:	bf00      	nop
 8005982:	370c      	adds	r7, #12
 8005984:	46bd      	mov	sp, r7
 8005986:	f85d 7b04 	ldr.w	r7, [sp], #4
 800598a:	4770      	bx	lr

0800598c <HAL_TIM_PWM_PulseFinishedCallback>:
 800598c:	b480      	push	{r7}
 800598e:	b083      	sub	sp, #12
 8005990:	af00      	add	r7, sp, #0
 8005992:	6078      	str	r0, [r7, #4]
 8005994:	bf00      	nop
 8005996:	370c      	adds	r7, #12
 8005998:	46bd      	mov	sp, r7
 800599a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800599e:	4770      	bx	lr

080059a0 <HAL_TIM_TriggerCallback>:
 80059a0:	b480      	push	{r7}
 80059a2:	b083      	sub	sp, #12
 80059a4:	af00      	add	r7, sp, #0
 80059a6:	6078      	str	r0, [r7, #4]
 80059a8:	bf00      	nop
 80059aa:	370c      	adds	r7, #12
 80059ac:	46bd      	mov	sp, r7
 80059ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80059b2:	4770      	bx	lr

080059b4 <TIM_Base_SetConfig>:
 80059b4:	b480      	push	{r7}
 80059b6:	b085      	sub	sp, #20
 80059b8:	af00      	add	r7, sp, #0
 80059ba:	6078      	str	r0, [r7, #4]
 80059bc:	6039      	str	r1, [r7, #0]
 80059be:	687b      	ldr	r3, [r7, #4]
 80059c0:	681b      	ldr	r3, [r3, #0]
 80059c2:	60fb      	str	r3, [r7, #12]
 80059c4:	687b      	ldr	r3, [r7, #4]
 80059c6:	4a43      	ldr	r2, [pc, #268]	@ (8005ad4 <TIM_Base_SetConfig+0x120>)
 80059c8:	4293      	cmp	r3, r2
 80059ca:	d013      	beq.n	80059f4 <TIM_Base_SetConfig+0x40>
 80059cc:	687b      	ldr	r3, [r7, #4]
 80059ce:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80059d2:	d00f      	beq.n	80059f4 <TIM_Base_SetConfig+0x40>
 80059d4:	687b      	ldr	r3, [r7, #4]
 80059d6:	4a40      	ldr	r2, [pc, #256]	@ (8005ad8 <TIM_Base_SetConfig+0x124>)
 80059d8:	4293      	cmp	r3, r2
 80059da:	d00b      	beq.n	80059f4 <TIM_Base_SetConfig+0x40>
 80059dc:	687b      	ldr	r3, [r7, #4]
 80059de:	4a3f      	ldr	r2, [pc, #252]	@ (8005adc <TIM_Base_SetConfig+0x128>)
 80059e0:	4293      	cmp	r3, r2
 80059e2:	d007      	beq.n	80059f4 <TIM_Base_SetConfig+0x40>
 80059e4:	687b      	ldr	r3, [r7, #4]
 80059e6:	4a3e      	ldr	r2, [pc, #248]	@ (8005ae0 <TIM_Base_SetConfig+0x12c>)
 80059e8:	4293      	cmp	r3, r2
 80059ea:	d003      	beq.n	80059f4 <TIM_Base_SetConfig+0x40>
 80059ec:	687b      	ldr	r3, [r7, #4]
 80059ee:	4a3d      	ldr	r2, [pc, #244]	@ (8005ae4 <TIM_Base_SetConfig+0x130>)
 80059f0:	4293      	cmp	r3, r2
 80059f2:	d108      	bne.n	8005a06 <TIM_Base_SetConfig+0x52>
 80059f4:	68fb      	ldr	r3, [r7, #12]
 80059f6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 80059fa:	60fb      	str	r3, [r7, #12]
 80059fc:	683b      	ldr	r3, [r7, #0]
 80059fe:	685b      	ldr	r3, [r3, #4]
 8005a00:	68fa      	ldr	r2, [r7, #12]
 8005a02:	4313      	orrs	r3, r2
 8005a04:	60fb      	str	r3, [r7, #12]
 8005a06:	687b      	ldr	r3, [r7, #4]
 8005a08:	4a32      	ldr	r2, [pc, #200]	@ (8005ad4 <TIM_Base_SetConfig+0x120>)
 8005a0a:	4293      	cmp	r3, r2
 8005a0c:	d02b      	beq.n	8005a66 <TIM_Base_SetConfig+0xb2>
 8005a0e:	687b      	ldr	r3, [r7, #4]
 8005a10:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005a14:	d027      	beq.n	8005a66 <TIM_Base_SetConfig+0xb2>
 8005a16:	687b      	ldr	r3, [r7, #4]
 8005a18:	4a2f      	ldr	r2, [pc, #188]	@ (8005ad8 <TIM_Base_SetConfig+0x124>)
 8005a1a:	4293      	cmp	r3, r2
 8005a1c:	d023      	beq.n	8005a66 <TIM_Base_SetConfig+0xb2>
 8005a1e:	687b      	ldr	r3, [r7, #4]
 8005a20:	4a2e      	ldr	r2, [pc, #184]	@ (8005adc <TIM_Base_SetConfig+0x128>)
 8005a22:	4293      	cmp	r3, r2
 8005a24:	d01f      	beq.n	8005a66 <TIM_Base_SetConfig+0xb2>
 8005a26:	687b      	ldr	r3, [r7, #4]
 8005a28:	4a2d      	ldr	r2, [pc, #180]	@ (8005ae0 <TIM_Base_SetConfig+0x12c>)
 8005a2a:	4293      	cmp	r3, r2
 8005a2c:	d01b      	beq.n	8005a66 <TIM_Base_SetConfig+0xb2>
 8005a2e:	687b      	ldr	r3, [r7, #4]
 8005a30:	4a2c      	ldr	r2, [pc, #176]	@ (8005ae4 <TIM_Base_SetConfig+0x130>)
 8005a32:	4293      	cmp	r3, r2
 8005a34:	d017      	beq.n	8005a66 <TIM_Base_SetConfig+0xb2>
 8005a36:	687b      	ldr	r3, [r7, #4]
 8005a38:	4a2b      	ldr	r2, [pc, #172]	@ (8005ae8 <TIM_Base_SetConfig+0x134>)
 8005a3a:	4293      	cmp	r3, r2
 8005a3c:	d013      	beq.n	8005a66 <TIM_Base_SetConfig+0xb2>
 8005a3e:	687b      	ldr	r3, [r7, #4]
 8005a40:	4a2a      	ldr	r2, [pc, #168]	@ (8005aec <TIM_Base_SetConfig+0x138>)
 8005a42:	4293      	cmp	r3, r2
 8005a44:	d00f      	beq.n	8005a66 <TIM_Base_SetConfig+0xb2>
 8005a46:	687b      	ldr	r3, [r7, #4]
 8005a48:	4a29      	ldr	r2, [pc, #164]	@ (8005af0 <TIM_Base_SetConfig+0x13c>)
 8005a4a:	4293      	cmp	r3, r2
 8005a4c:	d00b      	beq.n	8005a66 <TIM_Base_SetConfig+0xb2>
 8005a4e:	687b      	ldr	r3, [r7, #4]
 8005a50:	4a28      	ldr	r2, [pc, #160]	@ (8005af4 <TIM_Base_SetConfig+0x140>)
 8005a52:	4293      	cmp	r3, r2
 8005a54:	d007      	beq.n	8005a66 <TIM_Base_SetConfig+0xb2>
 8005a56:	687b      	ldr	r3, [r7, #4]
 8005a58:	4a27      	ldr	r2, [pc, #156]	@ (8005af8 <TIM_Base_SetConfig+0x144>)
 8005a5a:	4293      	cmp	r3, r2
 8005a5c:	d003      	beq.n	8005a66 <TIM_Base_SetConfig+0xb2>
 8005a5e:	687b      	ldr	r3, [r7, #4]
 8005a60:	4a26      	ldr	r2, [pc, #152]	@ (8005afc <TIM_Base_SetConfig+0x148>)
 8005a62:	4293      	cmp	r3, r2
 8005a64:	d108      	bne.n	8005a78 <TIM_Base_SetConfig+0xc4>
 8005a66:	68fb      	ldr	r3, [r7, #12]
 8005a68:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005a6c:	60fb      	str	r3, [r7, #12]
 8005a6e:	683b      	ldr	r3, [r7, #0]
 8005a70:	68db      	ldr	r3, [r3, #12]
 8005a72:	68fa      	ldr	r2, [r7, #12]
 8005a74:	4313      	orrs	r3, r2
 8005a76:	60fb      	str	r3, [r7, #12]
 8005a78:	68fb      	ldr	r3, [r7, #12]
 8005a7a:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 8005a7e:	683b      	ldr	r3, [r7, #0]
 8005a80:	695b      	ldr	r3, [r3, #20]
 8005a82:	4313      	orrs	r3, r2
 8005a84:	60fb      	str	r3, [r7, #12]
 8005a86:	683b      	ldr	r3, [r7, #0]
 8005a88:	689a      	ldr	r2, [r3, #8]
 8005a8a:	687b      	ldr	r3, [r7, #4]
 8005a8c:	62da      	str	r2, [r3, #44]	@ 0x2c
 8005a8e:	683b      	ldr	r3, [r7, #0]
 8005a90:	681a      	ldr	r2, [r3, #0]
 8005a92:	687b      	ldr	r3, [r7, #4]
 8005a94:	629a      	str	r2, [r3, #40]	@ 0x28
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	4a0e      	ldr	r2, [pc, #56]	@ (8005ad4 <TIM_Base_SetConfig+0x120>)
 8005a9a:	4293      	cmp	r3, r2
 8005a9c:	d003      	beq.n	8005aa6 <TIM_Base_SetConfig+0xf2>
 8005a9e:	687b      	ldr	r3, [r7, #4]
 8005aa0:	4a10      	ldr	r2, [pc, #64]	@ (8005ae4 <TIM_Base_SetConfig+0x130>)
 8005aa2:	4293      	cmp	r3, r2
 8005aa4:	d103      	bne.n	8005aae <TIM_Base_SetConfig+0xfa>
 8005aa6:	683b      	ldr	r3, [r7, #0]
 8005aa8:	691a      	ldr	r2, [r3, #16]
 8005aaa:	687b      	ldr	r3, [r7, #4]
 8005aac:	631a      	str	r2, [r3, #48]	@ 0x30
 8005aae:	687b      	ldr	r3, [r7, #4]
 8005ab0:	681b      	ldr	r3, [r3, #0]
 8005ab2:	f043 0204 	orr.w	r2, r3, #4
 8005ab6:	687b      	ldr	r3, [r7, #4]
 8005ab8:	601a      	str	r2, [r3, #0]
 8005aba:	687b      	ldr	r3, [r7, #4]
 8005abc:	2201      	movs	r2, #1
 8005abe:	615a      	str	r2, [r3, #20]
 8005ac0:	687b      	ldr	r3, [r7, #4]
 8005ac2:	68fa      	ldr	r2, [r7, #12]
 8005ac4:	601a      	str	r2, [r3, #0]
 8005ac6:	bf00      	nop
 8005ac8:	3714      	adds	r7, #20
 8005aca:	46bd      	mov	sp, r7
 8005acc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005ad0:	4770      	bx	lr
 8005ad2:	bf00      	nop
 8005ad4:	40010000 	.word	0x40010000
 8005ad8:	40000400 	.word	0x40000400
 8005adc:	40000800 	.word	0x40000800
 8005ae0:	40000c00 	.word	0x40000c00
 8005ae4:	40010400 	.word	0x40010400
 8005ae8:	40014000 	.word	0x40014000
 8005aec:	40014400 	.word	0x40014400
 8005af0:	40014800 	.word	0x40014800
 8005af4:	40001800 	.word	0x40001800
 8005af8:	40001c00 	.word	0x40001c00
 8005afc:	40002000 	.word	0x40002000

08005b00 <TIM_OC1_SetConfig>:
 8005b00:	b480      	push	{r7}
 8005b02:	b087      	sub	sp, #28
 8005b04:	af00      	add	r7, sp, #0
 8005b06:	6078      	str	r0, [r7, #4]
 8005b08:	6039      	str	r1, [r7, #0]
 8005b0a:	687b      	ldr	r3, [r7, #4]
 8005b0c:	6a1b      	ldr	r3, [r3, #32]
 8005b0e:	617b      	str	r3, [r7, #20]
 8005b10:	687b      	ldr	r3, [r7, #4]
 8005b12:	6a1b      	ldr	r3, [r3, #32]
 8005b14:	f023 0201 	bic.w	r2, r3, #1
 8005b18:	687b      	ldr	r3, [r7, #4]
 8005b1a:	621a      	str	r2, [r3, #32]
 8005b1c:	687b      	ldr	r3, [r7, #4]
 8005b1e:	685b      	ldr	r3, [r3, #4]
 8005b20:	613b      	str	r3, [r7, #16]
 8005b22:	687b      	ldr	r3, [r7, #4]
 8005b24:	699b      	ldr	r3, [r3, #24]
 8005b26:	60fb      	str	r3, [r7, #12]
 8005b28:	68fb      	ldr	r3, [r7, #12]
 8005b2a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005b2e:	60fb      	str	r3, [r7, #12]
 8005b30:	68fb      	ldr	r3, [r7, #12]
 8005b32:	f023 0303 	bic.w	r3, r3, #3
 8005b36:	60fb      	str	r3, [r7, #12]
 8005b38:	683b      	ldr	r3, [r7, #0]
 8005b3a:	681b      	ldr	r3, [r3, #0]
 8005b3c:	68fa      	ldr	r2, [r7, #12]
 8005b3e:	4313      	orrs	r3, r2
 8005b40:	60fb      	str	r3, [r7, #12]
 8005b42:	697b      	ldr	r3, [r7, #20]
 8005b44:	f023 0302 	bic.w	r3, r3, #2
 8005b48:	617b      	str	r3, [r7, #20]
 8005b4a:	683b      	ldr	r3, [r7, #0]
 8005b4c:	689b      	ldr	r3, [r3, #8]
 8005b4e:	697a      	ldr	r2, [r7, #20]
 8005b50:	4313      	orrs	r3, r2
 8005b52:	617b      	str	r3, [r7, #20]
 8005b54:	687b      	ldr	r3, [r7, #4]
 8005b56:	4a20      	ldr	r2, [pc, #128]	@ (8005bd8 <TIM_OC1_SetConfig+0xd8>)
 8005b58:	4293      	cmp	r3, r2
 8005b5a:	d003      	beq.n	8005b64 <TIM_OC1_SetConfig+0x64>
 8005b5c:	687b      	ldr	r3, [r7, #4]
 8005b5e:	4a1f      	ldr	r2, [pc, #124]	@ (8005bdc <TIM_OC1_SetConfig+0xdc>)
 8005b60:	4293      	cmp	r3, r2
 8005b62:	d10c      	bne.n	8005b7e <TIM_OC1_SetConfig+0x7e>
 8005b64:	697b      	ldr	r3, [r7, #20]
 8005b66:	f023 0308 	bic.w	r3, r3, #8
 8005b6a:	617b      	str	r3, [r7, #20]
 8005b6c:	683b      	ldr	r3, [r7, #0]
 8005b6e:	68db      	ldr	r3, [r3, #12]
 8005b70:	697a      	ldr	r2, [r7, #20]
 8005b72:	4313      	orrs	r3, r2
 8005b74:	617b      	str	r3, [r7, #20]
 8005b76:	697b      	ldr	r3, [r7, #20]
 8005b78:	f023 0304 	bic.w	r3, r3, #4
 8005b7c:	617b      	str	r3, [r7, #20]
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	4a15      	ldr	r2, [pc, #84]	@ (8005bd8 <TIM_OC1_SetConfig+0xd8>)
 8005b82:	4293      	cmp	r3, r2
 8005b84:	d003      	beq.n	8005b8e <TIM_OC1_SetConfig+0x8e>
 8005b86:	687b      	ldr	r3, [r7, #4]
 8005b88:	4a14      	ldr	r2, [pc, #80]	@ (8005bdc <TIM_OC1_SetConfig+0xdc>)
 8005b8a:	4293      	cmp	r3, r2
 8005b8c:	d111      	bne.n	8005bb2 <TIM_OC1_SetConfig+0xb2>
 8005b8e:	693b      	ldr	r3, [r7, #16]
 8005b90:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8005b94:	613b      	str	r3, [r7, #16]
 8005b96:	693b      	ldr	r3, [r7, #16]
 8005b98:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005b9c:	613b      	str	r3, [r7, #16]
 8005b9e:	683b      	ldr	r3, [r7, #0]
 8005ba0:	695b      	ldr	r3, [r3, #20]
 8005ba2:	693a      	ldr	r2, [r7, #16]
 8005ba4:	4313      	orrs	r3, r2
 8005ba6:	613b      	str	r3, [r7, #16]
 8005ba8:	683b      	ldr	r3, [r7, #0]
 8005baa:	699b      	ldr	r3, [r3, #24]
 8005bac:	693a      	ldr	r2, [r7, #16]
 8005bae:	4313      	orrs	r3, r2
 8005bb0:	613b      	str	r3, [r7, #16]
 8005bb2:	687b      	ldr	r3, [r7, #4]
 8005bb4:	693a      	ldr	r2, [r7, #16]
 8005bb6:	605a      	str	r2, [r3, #4]
 8005bb8:	687b      	ldr	r3, [r7, #4]
 8005bba:	68fa      	ldr	r2, [r7, #12]
 8005bbc:	619a      	str	r2, [r3, #24]
 8005bbe:	683b      	ldr	r3, [r7, #0]
 8005bc0:	685a      	ldr	r2, [r3, #4]
 8005bc2:	687b      	ldr	r3, [r7, #4]
 8005bc4:	635a      	str	r2, [r3, #52]	@ 0x34
 8005bc6:	687b      	ldr	r3, [r7, #4]
 8005bc8:	697a      	ldr	r2, [r7, #20]
 8005bca:	621a      	str	r2, [r3, #32]
 8005bcc:	bf00      	nop
 8005bce:	371c      	adds	r7, #28
 8005bd0:	46bd      	mov	sp, r7
 8005bd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005bd6:	4770      	bx	lr
 8005bd8:	40010000 	.word	0x40010000
 8005bdc:	40010400 	.word	0x40010400

08005be0 <TIM_OC2_SetConfig>:
 8005be0:	b480      	push	{r7}
 8005be2:	b087      	sub	sp, #28
 8005be4:	af00      	add	r7, sp, #0
 8005be6:	6078      	str	r0, [r7, #4]
 8005be8:	6039      	str	r1, [r7, #0]
 8005bea:	687b      	ldr	r3, [r7, #4]
 8005bec:	6a1b      	ldr	r3, [r3, #32]
 8005bee:	617b      	str	r3, [r7, #20]
 8005bf0:	687b      	ldr	r3, [r7, #4]
 8005bf2:	6a1b      	ldr	r3, [r3, #32]
 8005bf4:	f023 0210 	bic.w	r2, r3, #16
 8005bf8:	687b      	ldr	r3, [r7, #4]
 8005bfa:	621a      	str	r2, [r3, #32]
 8005bfc:	687b      	ldr	r3, [r7, #4]
 8005bfe:	685b      	ldr	r3, [r3, #4]
 8005c00:	613b      	str	r3, [r7, #16]
 8005c02:	687b      	ldr	r3, [r7, #4]
 8005c04:	699b      	ldr	r3, [r3, #24]
 8005c06:	60fb      	str	r3, [r7, #12]
 8005c08:	68fb      	ldr	r3, [r7, #12]
 8005c0a:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005c0e:	60fb      	str	r3, [r7, #12]
 8005c10:	68fb      	ldr	r3, [r7, #12]
 8005c12:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005c16:	60fb      	str	r3, [r7, #12]
 8005c18:	683b      	ldr	r3, [r7, #0]
 8005c1a:	681b      	ldr	r3, [r3, #0]
 8005c1c:	021b      	lsls	r3, r3, #8
 8005c1e:	68fa      	ldr	r2, [r7, #12]
 8005c20:	4313      	orrs	r3, r2
 8005c22:	60fb      	str	r3, [r7, #12]
 8005c24:	697b      	ldr	r3, [r7, #20]
 8005c26:	f023 0320 	bic.w	r3, r3, #32
 8005c2a:	617b      	str	r3, [r7, #20]
 8005c2c:	683b      	ldr	r3, [r7, #0]
 8005c2e:	689b      	ldr	r3, [r3, #8]
 8005c30:	011b      	lsls	r3, r3, #4
 8005c32:	697a      	ldr	r2, [r7, #20]
 8005c34:	4313      	orrs	r3, r2
 8005c36:	617b      	str	r3, [r7, #20]
 8005c38:	687b      	ldr	r3, [r7, #4]
 8005c3a:	4a22      	ldr	r2, [pc, #136]	@ (8005cc4 <TIM_OC2_SetConfig+0xe4>)
 8005c3c:	4293      	cmp	r3, r2
 8005c3e:	d003      	beq.n	8005c48 <TIM_OC2_SetConfig+0x68>
 8005c40:	687b      	ldr	r3, [r7, #4]
 8005c42:	4a21      	ldr	r2, [pc, #132]	@ (8005cc8 <TIM_OC2_SetConfig+0xe8>)
 8005c44:	4293      	cmp	r3, r2
 8005c46:	d10d      	bne.n	8005c64 <TIM_OC2_SetConfig+0x84>
 8005c48:	697b      	ldr	r3, [r7, #20]
 8005c4a:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8005c4e:	617b      	str	r3, [r7, #20]
 8005c50:	683b      	ldr	r3, [r7, #0]
 8005c52:	68db      	ldr	r3, [r3, #12]
 8005c54:	011b      	lsls	r3, r3, #4
 8005c56:	697a      	ldr	r2, [r7, #20]
 8005c58:	4313      	orrs	r3, r2
 8005c5a:	617b      	str	r3, [r7, #20]
 8005c5c:	697b      	ldr	r3, [r7, #20]
 8005c5e:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8005c62:	617b      	str	r3, [r7, #20]
 8005c64:	687b      	ldr	r3, [r7, #4]
 8005c66:	4a17      	ldr	r2, [pc, #92]	@ (8005cc4 <TIM_OC2_SetConfig+0xe4>)
 8005c68:	4293      	cmp	r3, r2
 8005c6a:	d003      	beq.n	8005c74 <TIM_OC2_SetConfig+0x94>
 8005c6c:	687b      	ldr	r3, [r7, #4]
 8005c6e:	4a16      	ldr	r2, [pc, #88]	@ (8005cc8 <TIM_OC2_SetConfig+0xe8>)
 8005c70:	4293      	cmp	r3, r2
 8005c72:	d113      	bne.n	8005c9c <TIM_OC2_SetConfig+0xbc>
 8005c74:	693b      	ldr	r3, [r7, #16]
 8005c76:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005c7a:	613b      	str	r3, [r7, #16]
 8005c7c:	693b      	ldr	r3, [r7, #16]
 8005c7e:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005c82:	613b      	str	r3, [r7, #16]
 8005c84:	683b      	ldr	r3, [r7, #0]
 8005c86:	695b      	ldr	r3, [r3, #20]
 8005c88:	009b      	lsls	r3, r3, #2
 8005c8a:	693a      	ldr	r2, [r7, #16]
 8005c8c:	4313      	orrs	r3, r2
 8005c8e:	613b      	str	r3, [r7, #16]
 8005c90:	683b      	ldr	r3, [r7, #0]
 8005c92:	699b      	ldr	r3, [r3, #24]
 8005c94:	009b      	lsls	r3, r3, #2
 8005c96:	693a      	ldr	r2, [r7, #16]
 8005c98:	4313      	orrs	r3, r2
 8005c9a:	613b      	str	r3, [r7, #16]
 8005c9c:	687b      	ldr	r3, [r7, #4]
 8005c9e:	693a      	ldr	r2, [r7, #16]
 8005ca0:	605a      	str	r2, [r3, #4]
 8005ca2:	687b      	ldr	r3, [r7, #4]
 8005ca4:	68fa      	ldr	r2, [r7, #12]
 8005ca6:	619a      	str	r2, [r3, #24]
 8005ca8:	683b      	ldr	r3, [r7, #0]
 8005caa:	685a      	ldr	r2, [r3, #4]
 8005cac:	687b      	ldr	r3, [r7, #4]
 8005cae:	639a      	str	r2, [r3, #56]	@ 0x38
 8005cb0:	687b      	ldr	r3, [r7, #4]
 8005cb2:	697a      	ldr	r2, [r7, #20]
 8005cb4:	621a      	str	r2, [r3, #32]
 8005cb6:	bf00      	nop
 8005cb8:	371c      	adds	r7, #28
 8005cba:	46bd      	mov	sp, r7
 8005cbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005cc0:	4770      	bx	lr
 8005cc2:	bf00      	nop
 8005cc4:	40010000 	.word	0x40010000
 8005cc8:	40010400 	.word	0x40010400

08005ccc <TIM_OC3_SetConfig>:
 8005ccc:	b480      	push	{r7}
 8005cce:	b087      	sub	sp, #28
 8005cd0:	af00      	add	r7, sp, #0
 8005cd2:	6078      	str	r0, [r7, #4]
 8005cd4:	6039      	str	r1, [r7, #0]
 8005cd6:	687b      	ldr	r3, [r7, #4]
 8005cd8:	6a1b      	ldr	r3, [r3, #32]
 8005cda:	617b      	str	r3, [r7, #20]
 8005cdc:	687b      	ldr	r3, [r7, #4]
 8005cde:	6a1b      	ldr	r3, [r3, #32]
 8005ce0:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8005ce4:	687b      	ldr	r3, [r7, #4]
 8005ce6:	621a      	str	r2, [r3, #32]
 8005ce8:	687b      	ldr	r3, [r7, #4]
 8005cea:	685b      	ldr	r3, [r3, #4]
 8005cec:	613b      	str	r3, [r7, #16]
 8005cee:	687b      	ldr	r3, [r7, #4]
 8005cf0:	69db      	ldr	r3, [r3, #28]
 8005cf2:	60fb      	str	r3, [r7, #12]
 8005cf4:	68fb      	ldr	r3, [r7, #12]
 8005cf6:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8005cfa:	60fb      	str	r3, [r7, #12]
 8005cfc:	68fb      	ldr	r3, [r7, #12]
 8005cfe:	f023 0303 	bic.w	r3, r3, #3
 8005d02:	60fb      	str	r3, [r7, #12]
 8005d04:	683b      	ldr	r3, [r7, #0]
 8005d06:	681b      	ldr	r3, [r3, #0]
 8005d08:	68fa      	ldr	r2, [r7, #12]
 8005d0a:	4313      	orrs	r3, r2
 8005d0c:	60fb      	str	r3, [r7, #12]
 8005d0e:	697b      	ldr	r3, [r7, #20]
 8005d10:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8005d14:	617b      	str	r3, [r7, #20]
 8005d16:	683b      	ldr	r3, [r7, #0]
 8005d18:	689b      	ldr	r3, [r3, #8]
 8005d1a:	021b      	lsls	r3, r3, #8
 8005d1c:	697a      	ldr	r2, [r7, #20]
 8005d1e:	4313      	orrs	r3, r2
 8005d20:	617b      	str	r3, [r7, #20]
 8005d22:	687b      	ldr	r3, [r7, #4]
 8005d24:	4a21      	ldr	r2, [pc, #132]	@ (8005dac <TIM_OC3_SetConfig+0xe0>)
 8005d26:	4293      	cmp	r3, r2
 8005d28:	d003      	beq.n	8005d32 <TIM_OC3_SetConfig+0x66>
 8005d2a:	687b      	ldr	r3, [r7, #4]
 8005d2c:	4a20      	ldr	r2, [pc, #128]	@ (8005db0 <TIM_OC3_SetConfig+0xe4>)
 8005d2e:	4293      	cmp	r3, r2
 8005d30:	d10d      	bne.n	8005d4e <TIM_OC3_SetConfig+0x82>
 8005d32:	697b      	ldr	r3, [r7, #20]
 8005d34:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8005d38:	617b      	str	r3, [r7, #20]
 8005d3a:	683b      	ldr	r3, [r7, #0]
 8005d3c:	68db      	ldr	r3, [r3, #12]
 8005d3e:	021b      	lsls	r3, r3, #8
 8005d40:	697a      	ldr	r2, [r7, #20]
 8005d42:	4313      	orrs	r3, r2
 8005d44:	617b      	str	r3, [r7, #20]
 8005d46:	697b      	ldr	r3, [r7, #20]
 8005d48:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8005d4c:	617b      	str	r3, [r7, #20]
 8005d4e:	687b      	ldr	r3, [r7, #4]
 8005d50:	4a16      	ldr	r2, [pc, #88]	@ (8005dac <TIM_OC3_SetConfig+0xe0>)
 8005d52:	4293      	cmp	r3, r2
 8005d54:	d003      	beq.n	8005d5e <TIM_OC3_SetConfig+0x92>
 8005d56:	687b      	ldr	r3, [r7, #4]
 8005d58:	4a15      	ldr	r2, [pc, #84]	@ (8005db0 <TIM_OC3_SetConfig+0xe4>)
 8005d5a:	4293      	cmp	r3, r2
 8005d5c:	d113      	bne.n	8005d86 <TIM_OC3_SetConfig+0xba>
 8005d5e:	693b      	ldr	r3, [r7, #16]
 8005d60:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8005d64:	613b      	str	r3, [r7, #16]
 8005d66:	693b      	ldr	r3, [r7, #16]
 8005d68:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005d6c:	613b      	str	r3, [r7, #16]
 8005d6e:	683b      	ldr	r3, [r7, #0]
 8005d70:	695b      	ldr	r3, [r3, #20]
 8005d72:	011b      	lsls	r3, r3, #4
 8005d74:	693a      	ldr	r2, [r7, #16]
 8005d76:	4313      	orrs	r3, r2
 8005d78:	613b      	str	r3, [r7, #16]
 8005d7a:	683b      	ldr	r3, [r7, #0]
 8005d7c:	699b      	ldr	r3, [r3, #24]
 8005d7e:	011b      	lsls	r3, r3, #4
 8005d80:	693a      	ldr	r2, [r7, #16]
 8005d82:	4313      	orrs	r3, r2
 8005d84:	613b      	str	r3, [r7, #16]
 8005d86:	687b      	ldr	r3, [r7, #4]
 8005d88:	693a      	ldr	r2, [r7, #16]
 8005d8a:	605a      	str	r2, [r3, #4]
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	68fa      	ldr	r2, [r7, #12]
 8005d90:	61da      	str	r2, [r3, #28]
 8005d92:	683b      	ldr	r3, [r7, #0]
 8005d94:	685a      	ldr	r2, [r3, #4]
 8005d96:	687b      	ldr	r3, [r7, #4]
 8005d98:	63da      	str	r2, [r3, #60]	@ 0x3c
 8005d9a:	687b      	ldr	r3, [r7, #4]
 8005d9c:	697a      	ldr	r2, [r7, #20]
 8005d9e:	621a      	str	r2, [r3, #32]
 8005da0:	bf00      	nop
 8005da2:	371c      	adds	r7, #28
 8005da4:	46bd      	mov	sp, r7
 8005da6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005daa:	4770      	bx	lr
 8005dac:	40010000 	.word	0x40010000
 8005db0:	40010400 	.word	0x40010400

08005db4 <TIM_OC4_SetConfig>:
 8005db4:	b480      	push	{r7}
 8005db6:	b087      	sub	sp, #28
 8005db8:	af00      	add	r7, sp, #0
 8005dba:	6078      	str	r0, [r7, #4]
 8005dbc:	6039      	str	r1, [r7, #0]
 8005dbe:	687b      	ldr	r3, [r7, #4]
 8005dc0:	6a1b      	ldr	r3, [r3, #32]
 8005dc2:	613b      	str	r3, [r7, #16]
 8005dc4:	687b      	ldr	r3, [r7, #4]
 8005dc6:	6a1b      	ldr	r3, [r3, #32]
 8005dc8:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8005dcc:	687b      	ldr	r3, [r7, #4]
 8005dce:	621a      	str	r2, [r3, #32]
 8005dd0:	687b      	ldr	r3, [r7, #4]
 8005dd2:	685b      	ldr	r3, [r3, #4]
 8005dd4:	617b      	str	r3, [r7, #20]
 8005dd6:	687b      	ldr	r3, [r7, #4]
 8005dd8:	69db      	ldr	r3, [r3, #28]
 8005dda:	60fb      	str	r3, [r7, #12]
 8005ddc:	68fb      	ldr	r3, [r7, #12]
 8005dde:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8005de2:	60fb      	str	r3, [r7, #12]
 8005de4:	68fb      	ldr	r3, [r7, #12]
 8005de6:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005dea:	60fb      	str	r3, [r7, #12]
 8005dec:	683b      	ldr	r3, [r7, #0]
 8005dee:	681b      	ldr	r3, [r3, #0]
 8005df0:	021b      	lsls	r3, r3, #8
 8005df2:	68fa      	ldr	r2, [r7, #12]
 8005df4:	4313      	orrs	r3, r2
 8005df6:	60fb      	str	r3, [r7, #12]
 8005df8:	693b      	ldr	r3, [r7, #16]
 8005dfa:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8005dfe:	613b      	str	r3, [r7, #16]
 8005e00:	683b      	ldr	r3, [r7, #0]
 8005e02:	689b      	ldr	r3, [r3, #8]
 8005e04:	031b      	lsls	r3, r3, #12
 8005e06:	693a      	ldr	r2, [r7, #16]
 8005e08:	4313      	orrs	r3, r2
 8005e0a:	613b      	str	r3, [r7, #16]
 8005e0c:	687b      	ldr	r3, [r7, #4]
 8005e0e:	4a12      	ldr	r2, [pc, #72]	@ (8005e58 <TIM_OC4_SetConfig+0xa4>)
 8005e10:	4293      	cmp	r3, r2
 8005e12:	d003      	beq.n	8005e1c <TIM_OC4_SetConfig+0x68>
 8005e14:	687b      	ldr	r3, [r7, #4]
 8005e16:	4a11      	ldr	r2, [pc, #68]	@ (8005e5c <TIM_OC4_SetConfig+0xa8>)
 8005e18:	4293      	cmp	r3, r2
 8005e1a:	d109      	bne.n	8005e30 <TIM_OC4_SetConfig+0x7c>
 8005e1c:	697b      	ldr	r3, [r7, #20]
 8005e1e:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8005e22:	617b      	str	r3, [r7, #20]
 8005e24:	683b      	ldr	r3, [r7, #0]
 8005e26:	695b      	ldr	r3, [r3, #20]
 8005e28:	019b      	lsls	r3, r3, #6
 8005e2a:	697a      	ldr	r2, [r7, #20]
 8005e2c:	4313      	orrs	r3, r2
 8005e2e:	617b      	str	r3, [r7, #20]
 8005e30:	687b      	ldr	r3, [r7, #4]
 8005e32:	697a      	ldr	r2, [r7, #20]
 8005e34:	605a      	str	r2, [r3, #4]
 8005e36:	687b      	ldr	r3, [r7, #4]
 8005e38:	68fa      	ldr	r2, [r7, #12]
 8005e3a:	61da      	str	r2, [r3, #28]
 8005e3c:	683b      	ldr	r3, [r7, #0]
 8005e3e:	685a      	ldr	r2, [r3, #4]
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	641a      	str	r2, [r3, #64]	@ 0x40
 8005e44:	687b      	ldr	r3, [r7, #4]
 8005e46:	693a      	ldr	r2, [r7, #16]
 8005e48:	621a      	str	r2, [r3, #32]
 8005e4a:	bf00      	nop
 8005e4c:	371c      	adds	r7, #28
 8005e4e:	46bd      	mov	sp, r7
 8005e50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005e54:	4770      	bx	lr
 8005e56:	bf00      	nop
 8005e58:	40010000 	.word	0x40010000
 8005e5c:	40010400 	.word	0x40010400

08005e60 <TIM_TI1_SetConfig>:
 8005e60:	b480      	push	{r7}
 8005e62:	b087      	sub	sp, #28
 8005e64:	af00      	add	r7, sp, #0
 8005e66:	60f8      	str	r0, [r7, #12]
 8005e68:	60b9      	str	r1, [r7, #8]
 8005e6a:	607a      	str	r2, [r7, #4]
 8005e6c:	603b      	str	r3, [r7, #0]
 8005e6e:	68fb      	ldr	r3, [r7, #12]
 8005e70:	6a1b      	ldr	r3, [r3, #32]
 8005e72:	613b      	str	r3, [r7, #16]
 8005e74:	68fb      	ldr	r3, [r7, #12]
 8005e76:	6a1b      	ldr	r3, [r3, #32]
 8005e78:	f023 0201 	bic.w	r2, r3, #1
 8005e7c:	68fb      	ldr	r3, [r7, #12]
 8005e7e:	621a      	str	r2, [r3, #32]
 8005e80:	68fb      	ldr	r3, [r7, #12]
 8005e82:	699b      	ldr	r3, [r3, #24]
 8005e84:	617b      	str	r3, [r7, #20]
 8005e86:	68fb      	ldr	r3, [r7, #12]
 8005e88:	4a28      	ldr	r2, [pc, #160]	@ (8005f2c <TIM_TI1_SetConfig+0xcc>)
 8005e8a:	4293      	cmp	r3, r2
 8005e8c:	d01b      	beq.n	8005ec6 <TIM_TI1_SetConfig+0x66>
 8005e8e:	68fb      	ldr	r3, [r7, #12]
 8005e90:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8005e94:	d017      	beq.n	8005ec6 <TIM_TI1_SetConfig+0x66>
 8005e96:	68fb      	ldr	r3, [r7, #12]
 8005e98:	4a25      	ldr	r2, [pc, #148]	@ (8005f30 <TIM_TI1_SetConfig+0xd0>)
 8005e9a:	4293      	cmp	r3, r2
 8005e9c:	d013      	beq.n	8005ec6 <TIM_TI1_SetConfig+0x66>
 8005e9e:	68fb      	ldr	r3, [r7, #12]
 8005ea0:	4a24      	ldr	r2, [pc, #144]	@ (8005f34 <TIM_TI1_SetConfig+0xd4>)
 8005ea2:	4293      	cmp	r3, r2
 8005ea4:	d00f      	beq.n	8005ec6 <TIM_TI1_SetConfig+0x66>
 8005ea6:	68fb      	ldr	r3, [r7, #12]
 8005ea8:	4a23      	ldr	r2, [pc, #140]	@ (8005f38 <TIM_TI1_SetConfig+0xd8>)
 8005eaa:	4293      	cmp	r3, r2
 8005eac:	d00b      	beq.n	8005ec6 <TIM_TI1_SetConfig+0x66>
 8005eae:	68fb      	ldr	r3, [r7, #12]
 8005eb0:	4a22      	ldr	r2, [pc, #136]	@ (8005f3c <TIM_TI1_SetConfig+0xdc>)
 8005eb2:	4293      	cmp	r3, r2
 8005eb4:	d007      	beq.n	8005ec6 <TIM_TI1_SetConfig+0x66>
 8005eb6:	68fb      	ldr	r3, [r7, #12]
 8005eb8:	4a21      	ldr	r2, [pc, #132]	@ (8005f40 <TIM_TI1_SetConfig+0xe0>)
 8005eba:	4293      	cmp	r3, r2
 8005ebc:	d003      	beq.n	8005ec6 <TIM_TI1_SetConfig+0x66>
 8005ebe:	68fb      	ldr	r3, [r7, #12]
 8005ec0:	4a20      	ldr	r2, [pc, #128]	@ (8005f44 <TIM_TI1_SetConfig+0xe4>)
 8005ec2:	4293      	cmp	r3, r2
 8005ec4:	d101      	bne.n	8005eca <TIM_TI1_SetConfig+0x6a>
 8005ec6:	2301      	movs	r3, #1
 8005ec8:	e000      	b.n	8005ecc <TIM_TI1_SetConfig+0x6c>
 8005eca:	2300      	movs	r3, #0
 8005ecc:	2b00      	cmp	r3, #0
 8005ece:	d008      	beq.n	8005ee2 <TIM_TI1_SetConfig+0x82>
 8005ed0:	697b      	ldr	r3, [r7, #20]
 8005ed2:	f023 0303 	bic.w	r3, r3, #3
 8005ed6:	617b      	str	r3, [r7, #20]
 8005ed8:	697a      	ldr	r2, [r7, #20]
 8005eda:	687b      	ldr	r3, [r7, #4]
 8005edc:	4313      	orrs	r3, r2
 8005ede:	617b      	str	r3, [r7, #20]
 8005ee0:	e003      	b.n	8005eea <TIM_TI1_SetConfig+0x8a>
 8005ee2:	697b      	ldr	r3, [r7, #20]
 8005ee4:	f043 0301 	orr.w	r3, r3, #1
 8005ee8:	617b      	str	r3, [r7, #20]
 8005eea:	697b      	ldr	r3, [r7, #20]
 8005eec:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005ef0:	617b      	str	r3, [r7, #20]
 8005ef2:	683b      	ldr	r3, [r7, #0]
 8005ef4:	011b      	lsls	r3, r3, #4
 8005ef6:	b2db      	uxtb	r3, r3
 8005ef8:	697a      	ldr	r2, [r7, #20]
 8005efa:	4313      	orrs	r3, r2
 8005efc:	617b      	str	r3, [r7, #20]
 8005efe:	693b      	ldr	r3, [r7, #16]
 8005f00:	f023 030a 	bic.w	r3, r3, #10
 8005f04:	613b      	str	r3, [r7, #16]
 8005f06:	68bb      	ldr	r3, [r7, #8]
 8005f08:	f003 030a 	and.w	r3, r3, #10
 8005f0c:	693a      	ldr	r2, [r7, #16]
 8005f0e:	4313      	orrs	r3, r2
 8005f10:	613b      	str	r3, [r7, #16]
 8005f12:	68fb      	ldr	r3, [r7, #12]
 8005f14:	697a      	ldr	r2, [r7, #20]
 8005f16:	619a      	str	r2, [r3, #24]
 8005f18:	68fb      	ldr	r3, [r7, #12]
 8005f1a:	693a      	ldr	r2, [r7, #16]
 8005f1c:	621a      	str	r2, [r3, #32]
 8005f1e:	bf00      	nop
 8005f20:	371c      	adds	r7, #28
 8005f22:	46bd      	mov	sp, r7
 8005f24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005f28:	4770      	bx	lr
 8005f2a:	bf00      	nop
 8005f2c:	40010000 	.word	0x40010000
 8005f30:	40000400 	.word	0x40000400
 8005f34:	40000800 	.word	0x40000800
 8005f38:	40000c00 	.word	0x40000c00
 8005f3c:	40010400 	.word	0x40010400
 8005f40:	40014000 	.word	0x40014000
 8005f44:	40001800 	.word	0x40001800

08005f48 <TIM_TI1_ConfigInputStage>:
 8005f48:	b480      	push	{r7}
 8005f4a:	b087      	sub	sp, #28
 8005f4c:	af00      	add	r7, sp, #0
 8005f4e:	60f8      	str	r0, [r7, #12]
 8005f50:	60b9      	str	r1, [r7, #8]
 8005f52:	607a      	str	r2, [r7, #4]
 8005f54:	68fb      	ldr	r3, [r7, #12]
 8005f56:	6a1b      	ldr	r3, [r3, #32]
 8005f58:	617b      	str	r3, [r7, #20]
 8005f5a:	68fb      	ldr	r3, [r7, #12]
 8005f5c:	6a1b      	ldr	r3, [r3, #32]
 8005f5e:	f023 0201 	bic.w	r2, r3, #1
 8005f62:	68fb      	ldr	r3, [r7, #12]
 8005f64:	621a      	str	r2, [r3, #32]
 8005f66:	68fb      	ldr	r3, [r7, #12]
 8005f68:	699b      	ldr	r3, [r3, #24]
 8005f6a:	613b      	str	r3, [r7, #16]
 8005f6c:	693b      	ldr	r3, [r7, #16]
 8005f6e:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8005f72:	613b      	str	r3, [r7, #16]
 8005f74:	687b      	ldr	r3, [r7, #4]
 8005f76:	011b      	lsls	r3, r3, #4
 8005f78:	693a      	ldr	r2, [r7, #16]
 8005f7a:	4313      	orrs	r3, r2
 8005f7c:	613b      	str	r3, [r7, #16]
 8005f7e:	697b      	ldr	r3, [r7, #20]
 8005f80:	f023 030a 	bic.w	r3, r3, #10
 8005f84:	617b      	str	r3, [r7, #20]
 8005f86:	697a      	ldr	r2, [r7, #20]
 8005f88:	68bb      	ldr	r3, [r7, #8]
 8005f8a:	4313      	orrs	r3, r2
 8005f8c:	617b      	str	r3, [r7, #20]
 8005f8e:	68fb      	ldr	r3, [r7, #12]
 8005f90:	693a      	ldr	r2, [r7, #16]
 8005f92:	619a      	str	r2, [r3, #24]
 8005f94:	68fb      	ldr	r3, [r7, #12]
 8005f96:	697a      	ldr	r2, [r7, #20]
 8005f98:	621a      	str	r2, [r3, #32]
 8005f9a:	bf00      	nop
 8005f9c:	371c      	adds	r7, #28
 8005f9e:	46bd      	mov	sp, r7
 8005fa0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005fa4:	4770      	bx	lr

08005fa6 <TIM_TI2_SetConfig>:
 8005fa6:	b480      	push	{r7}
 8005fa8:	b087      	sub	sp, #28
 8005faa:	af00      	add	r7, sp, #0
 8005fac:	60f8      	str	r0, [r7, #12]
 8005fae:	60b9      	str	r1, [r7, #8]
 8005fb0:	607a      	str	r2, [r7, #4]
 8005fb2:	603b      	str	r3, [r7, #0]
 8005fb4:	68fb      	ldr	r3, [r7, #12]
 8005fb6:	6a1b      	ldr	r3, [r3, #32]
 8005fb8:	617b      	str	r3, [r7, #20]
 8005fba:	68fb      	ldr	r3, [r7, #12]
 8005fbc:	6a1b      	ldr	r3, [r3, #32]
 8005fbe:	f023 0210 	bic.w	r2, r3, #16
 8005fc2:	68fb      	ldr	r3, [r7, #12]
 8005fc4:	621a      	str	r2, [r3, #32]
 8005fc6:	68fb      	ldr	r3, [r7, #12]
 8005fc8:	699b      	ldr	r3, [r3, #24]
 8005fca:	613b      	str	r3, [r7, #16]
 8005fcc:	693b      	ldr	r3, [r7, #16]
 8005fce:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8005fd2:	613b      	str	r3, [r7, #16]
 8005fd4:	687b      	ldr	r3, [r7, #4]
 8005fd6:	021b      	lsls	r3, r3, #8
 8005fd8:	693a      	ldr	r2, [r7, #16]
 8005fda:	4313      	orrs	r3, r2
 8005fdc:	613b      	str	r3, [r7, #16]
 8005fde:	693b      	ldr	r3, [r7, #16]
 8005fe0:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8005fe4:	613b      	str	r3, [r7, #16]
 8005fe6:	683b      	ldr	r3, [r7, #0]
 8005fe8:	031b      	lsls	r3, r3, #12
 8005fea:	b29b      	uxth	r3, r3
 8005fec:	693a      	ldr	r2, [r7, #16]
 8005fee:	4313      	orrs	r3, r2
 8005ff0:	613b      	str	r3, [r7, #16]
 8005ff2:	697b      	ldr	r3, [r7, #20]
 8005ff4:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8005ff8:	617b      	str	r3, [r7, #20]
 8005ffa:	68bb      	ldr	r3, [r7, #8]
 8005ffc:	011b      	lsls	r3, r3, #4
 8005ffe:	f003 03a0 	and.w	r3, r3, #160	@ 0xa0
 8006002:	697a      	ldr	r2, [r7, #20]
 8006004:	4313      	orrs	r3, r2
 8006006:	617b      	str	r3, [r7, #20]
 8006008:	68fb      	ldr	r3, [r7, #12]
 800600a:	693a      	ldr	r2, [r7, #16]
 800600c:	619a      	str	r2, [r3, #24]
 800600e:	68fb      	ldr	r3, [r7, #12]
 8006010:	697a      	ldr	r2, [r7, #20]
 8006012:	621a      	str	r2, [r3, #32]
 8006014:	bf00      	nop
 8006016:	371c      	adds	r7, #28
 8006018:	46bd      	mov	sp, r7
 800601a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800601e:	4770      	bx	lr

08006020 <TIM_TI2_ConfigInputStage>:
 8006020:	b480      	push	{r7}
 8006022:	b087      	sub	sp, #28
 8006024:	af00      	add	r7, sp, #0
 8006026:	60f8      	str	r0, [r7, #12]
 8006028:	60b9      	str	r1, [r7, #8]
 800602a:	607a      	str	r2, [r7, #4]
 800602c:	68fb      	ldr	r3, [r7, #12]
 800602e:	6a1b      	ldr	r3, [r3, #32]
 8006030:	617b      	str	r3, [r7, #20]
 8006032:	68fb      	ldr	r3, [r7, #12]
 8006034:	6a1b      	ldr	r3, [r3, #32]
 8006036:	f023 0210 	bic.w	r2, r3, #16
 800603a:	68fb      	ldr	r3, [r7, #12]
 800603c:	621a      	str	r2, [r3, #32]
 800603e:	68fb      	ldr	r3, [r7, #12]
 8006040:	699b      	ldr	r3, [r3, #24]
 8006042:	613b      	str	r3, [r7, #16]
 8006044:	693b      	ldr	r3, [r7, #16]
 8006046:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 800604a:	613b      	str	r3, [r7, #16]
 800604c:	687b      	ldr	r3, [r7, #4]
 800604e:	031b      	lsls	r3, r3, #12
 8006050:	693a      	ldr	r2, [r7, #16]
 8006052:	4313      	orrs	r3, r2
 8006054:	613b      	str	r3, [r7, #16]
 8006056:	697b      	ldr	r3, [r7, #20]
 8006058:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 800605c:	617b      	str	r3, [r7, #20]
 800605e:	68bb      	ldr	r3, [r7, #8]
 8006060:	011b      	lsls	r3, r3, #4
 8006062:	697a      	ldr	r2, [r7, #20]
 8006064:	4313      	orrs	r3, r2
 8006066:	617b      	str	r3, [r7, #20]
 8006068:	68fb      	ldr	r3, [r7, #12]
 800606a:	693a      	ldr	r2, [r7, #16]
 800606c:	619a      	str	r2, [r3, #24]
 800606e:	68fb      	ldr	r3, [r7, #12]
 8006070:	697a      	ldr	r2, [r7, #20]
 8006072:	621a      	str	r2, [r3, #32]
 8006074:	bf00      	nop
 8006076:	371c      	adds	r7, #28
 8006078:	46bd      	mov	sp, r7
 800607a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800607e:	4770      	bx	lr

08006080 <TIM_TI3_SetConfig>:
 8006080:	b480      	push	{r7}
 8006082:	b087      	sub	sp, #28
 8006084:	af00      	add	r7, sp, #0
 8006086:	60f8      	str	r0, [r7, #12]
 8006088:	60b9      	str	r1, [r7, #8]
 800608a:	607a      	str	r2, [r7, #4]
 800608c:	603b      	str	r3, [r7, #0]
 800608e:	68fb      	ldr	r3, [r7, #12]
 8006090:	6a1b      	ldr	r3, [r3, #32]
 8006092:	617b      	str	r3, [r7, #20]
 8006094:	68fb      	ldr	r3, [r7, #12]
 8006096:	6a1b      	ldr	r3, [r3, #32]
 8006098:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 800609c:	68fb      	ldr	r3, [r7, #12]
 800609e:	621a      	str	r2, [r3, #32]
 80060a0:	68fb      	ldr	r3, [r7, #12]
 80060a2:	69db      	ldr	r3, [r3, #28]
 80060a4:	613b      	str	r3, [r7, #16]
 80060a6:	693b      	ldr	r3, [r7, #16]
 80060a8:	f023 0303 	bic.w	r3, r3, #3
 80060ac:	613b      	str	r3, [r7, #16]
 80060ae:	693a      	ldr	r2, [r7, #16]
 80060b0:	687b      	ldr	r3, [r7, #4]
 80060b2:	4313      	orrs	r3, r2
 80060b4:	613b      	str	r3, [r7, #16]
 80060b6:	693b      	ldr	r3, [r7, #16]
 80060b8:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 80060bc:	613b      	str	r3, [r7, #16]
 80060be:	683b      	ldr	r3, [r7, #0]
 80060c0:	011b      	lsls	r3, r3, #4
 80060c2:	b2db      	uxtb	r3, r3
 80060c4:	693a      	ldr	r2, [r7, #16]
 80060c6:	4313      	orrs	r3, r2
 80060c8:	613b      	str	r3, [r7, #16]
 80060ca:	697b      	ldr	r3, [r7, #20]
 80060cc:	f423 6320 	bic.w	r3, r3, #2560	@ 0xa00
 80060d0:	617b      	str	r3, [r7, #20]
 80060d2:	68bb      	ldr	r3, [r7, #8]
 80060d4:	021b      	lsls	r3, r3, #8
 80060d6:	f403 6320 	and.w	r3, r3, #2560	@ 0xa00
 80060da:	697a      	ldr	r2, [r7, #20]
 80060dc:	4313      	orrs	r3, r2
 80060de:	617b      	str	r3, [r7, #20]
 80060e0:	68fb      	ldr	r3, [r7, #12]
 80060e2:	693a      	ldr	r2, [r7, #16]
 80060e4:	61da      	str	r2, [r3, #28]
 80060e6:	68fb      	ldr	r3, [r7, #12]
 80060e8:	697a      	ldr	r2, [r7, #20]
 80060ea:	621a      	str	r2, [r3, #32]
 80060ec:	bf00      	nop
 80060ee:	371c      	adds	r7, #28
 80060f0:	46bd      	mov	sp, r7
 80060f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80060f6:	4770      	bx	lr

080060f8 <TIM_TI4_SetConfig>:
 80060f8:	b480      	push	{r7}
 80060fa:	b087      	sub	sp, #28
 80060fc:	af00      	add	r7, sp, #0
 80060fe:	60f8      	str	r0, [r7, #12]
 8006100:	60b9      	str	r1, [r7, #8]
 8006102:	607a      	str	r2, [r7, #4]
 8006104:	603b      	str	r3, [r7, #0]
 8006106:	68fb      	ldr	r3, [r7, #12]
 8006108:	6a1b      	ldr	r3, [r3, #32]
 800610a:	617b      	str	r3, [r7, #20]
 800610c:	68fb      	ldr	r3, [r7, #12]
 800610e:	6a1b      	ldr	r3, [r3, #32]
 8006110:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8006114:	68fb      	ldr	r3, [r7, #12]
 8006116:	621a      	str	r2, [r3, #32]
 8006118:	68fb      	ldr	r3, [r7, #12]
 800611a:	69db      	ldr	r3, [r3, #28]
 800611c:	613b      	str	r3, [r7, #16]
 800611e:	693b      	ldr	r3, [r7, #16]
 8006120:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8006124:	613b      	str	r3, [r7, #16]
 8006126:	687b      	ldr	r3, [r7, #4]
 8006128:	021b      	lsls	r3, r3, #8
 800612a:	693a      	ldr	r2, [r7, #16]
 800612c:	4313      	orrs	r3, r2
 800612e:	613b      	str	r3, [r7, #16]
 8006130:	693b      	ldr	r3, [r7, #16]
 8006132:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8006136:	613b      	str	r3, [r7, #16]
 8006138:	683b      	ldr	r3, [r7, #0]
 800613a:	031b      	lsls	r3, r3, #12
 800613c:	b29b      	uxth	r3, r3
 800613e:	693a      	ldr	r2, [r7, #16]
 8006140:	4313      	orrs	r3, r2
 8006142:	613b      	str	r3, [r7, #16]
 8006144:	697b      	ldr	r3, [r7, #20]
 8006146:	f423 4320 	bic.w	r3, r3, #40960	@ 0xa000
 800614a:	617b      	str	r3, [r7, #20]
 800614c:	68bb      	ldr	r3, [r7, #8]
 800614e:	031b      	lsls	r3, r3, #12
 8006150:	f403 4320 	and.w	r3, r3, #40960	@ 0xa000
 8006154:	697a      	ldr	r2, [r7, #20]
 8006156:	4313      	orrs	r3, r2
 8006158:	617b      	str	r3, [r7, #20]
 800615a:	68fb      	ldr	r3, [r7, #12]
 800615c:	693a      	ldr	r2, [r7, #16]
 800615e:	61da      	str	r2, [r3, #28]
 8006160:	68fb      	ldr	r3, [r7, #12]
 8006162:	697a      	ldr	r2, [r7, #20]
 8006164:	621a      	str	r2, [r3, #32]
 8006166:	bf00      	nop
 8006168:	371c      	adds	r7, #28
 800616a:	46bd      	mov	sp, r7
 800616c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006170:	4770      	bx	lr

08006172 <TIM_ITRx_SetConfig>:
 8006172:	b480      	push	{r7}
 8006174:	b085      	sub	sp, #20
 8006176:	af00      	add	r7, sp, #0
 8006178:	6078      	str	r0, [r7, #4]
 800617a:	6039      	str	r1, [r7, #0]
 800617c:	687b      	ldr	r3, [r7, #4]
 800617e:	689b      	ldr	r3, [r3, #8]
 8006180:	60fb      	str	r3, [r7, #12]
 8006182:	68fb      	ldr	r3, [r7, #12]
 8006184:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006188:	60fb      	str	r3, [r7, #12]
 800618a:	683a      	ldr	r2, [r7, #0]
 800618c:	68fb      	ldr	r3, [r7, #12]
 800618e:	4313      	orrs	r3, r2
 8006190:	f043 0307 	orr.w	r3, r3, #7
 8006194:	60fb      	str	r3, [r7, #12]
 8006196:	687b      	ldr	r3, [r7, #4]
 8006198:	68fa      	ldr	r2, [r7, #12]
 800619a:	609a      	str	r2, [r3, #8]
 800619c:	bf00      	nop
 800619e:	3714      	adds	r7, #20
 80061a0:	46bd      	mov	sp, r7
 80061a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061a6:	4770      	bx	lr

080061a8 <TIM_ETR_SetConfig>:
 80061a8:	b480      	push	{r7}
 80061aa:	b087      	sub	sp, #28
 80061ac:	af00      	add	r7, sp, #0
 80061ae:	60f8      	str	r0, [r7, #12]
 80061b0:	60b9      	str	r1, [r7, #8]
 80061b2:	607a      	str	r2, [r7, #4]
 80061b4:	603b      	str	r3, [r7, #0]
 80061b6:	68fb      	ldr	r3, [r7, #12]
 80061b8:	689b      	ldr	r3, [r3, #8]
 80061ba:	617b      	str	r3, [r7, #20]
 80061bc:	697b      	ldr	r3, [r7, #20]
 80061be:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 80061c2:	617b      	str	r3, [r7, #20]
 80061c4:	683b      	ldr	r3, [r7, #0]
 80061c6:	021a      	lsls	r2, r3, #8
 80061c8:	687b      	ldr	r3, [r7, #4]
 80061ca:	431a      	orrs	r2, r3
 80061cc:	68bb      	ldr	r3, [r7, #8]
 80061ce:	4313      	orrs	r3, r2
 80061d0:	697a      	ldr	r2, [r7, #20]
 80061d2:	4313      	orrs	r3, r2
 80061d4:	617b      	str	r3, [r7, #20]
 80061d6:	68fb      	ldr	r3, [r7, #12]
 80061d8:	697a      	ldr	r2, [r7, #20]
 80061da:	609a      	str	r2, [r3, #8]
 80061dc:	bf00      	nop
 80061de:	371c      	adds	r7, #28
 80061e0:	46bd      	mov	sp, r7
 80061e2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80061e6:	4770      	bx	lr

080061e8 <TIM_CCxChannelCmd>:
 80061e8:	b480      	push	{r7}
 80061ea:	b087      	sub	sp, #28
 80061ec:	af00      	add	r7, sp, #0
 80061ee:	60f8      	str	r0, [r7, #12]
 80061f0:	60b9      	str	r1, [r7, #8]
 80061f2:	607a      	str	r2, [r7, #4]
 80061f4:	68bb      	ldr	r3, [r7, #8]
 80061f6:	f003 031f 	and.w	r3, r3, #31
 80061fa:	2201      	movs	r2, #1
 80061fc:	fa02 f303 	lsl.w	r3, r2, r3
 8006200:	617b      	str	r3, [r7, #20]
 8006202:	68fb      	ldr	r3, [r7, #12]
 8006204:	6a1a      	ldr	r2, [r3, #32]
 8006206:	697b      	ldr	r3, [r7, #20]
 8006208:	43db      	mvns	r3, r3
 800620a:	401a      	ands	r2, r3
 800620c:	68fb      	ldr	r3, [r7, #12]
 800620e:	621a      	str	r2, [r3, #32]
 8006210:	68fb      	ldr	r3, [r7, #12]
 8006212:	6a1a      	ldr	r2, [r3, #32]
 8006214:	68bb      	ldr	r3, [r7, #8]
 8006216:	f003 031f 	and.w	r3, r3, #31
 800621a:	6879      	ldr	r1, [r7, #4]
 800621c:	fa01 f303 	lsl.w	r3, r1, r3
 8006220:	431a      	orrs	r2, r3
 8006222:	68fb      	ldr	r3, [r7, #12]
 8006224:	621a      	str	r2, [r3, #32]
 8006226:	bf00      	nop
 8006228:	371c      	adds	r7, #28
 800622a:	46bd      	mov	sp, r7
 800622c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006230:	4770      	bx	lr
	...

08006234 <HAL_TIMEx_MasterConfigSynchronization>:
 8006234:	b480      	push	{r7}
 8006236:	b085      	sub	sp, #20
 8006238:	af00      	add	r7, sp, #0
 800623a:	6078      	str	r0, [r7, #4]
 800623c:	6039      	str	r1, [r7, #0]
 800623e:	687b      	ldr	r3, [r7, #4]
 8006240:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8006244:	2b01      	cmp	r3, #1
 8006246:	d101      	bne.n	800624c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8006248:	2302      	movs	r3, #2
 800624a:	e05a      	b.n	8006302 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 800624c:	687b      	ldr	r3, [r7, #4]
 800624e:	2201      	movs	r2, #1
 8006250:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006254:	687b      	ldr	r3, [r7, #4]
 8006256:	2202      	movs	r2, #2
 8006258:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 800625c:	687b      	ldr	r3, [r7, #4]
 800625e:	681b      	ldr	r3, [r3, #0]
 8006260:	685b      	ldr	r3, [r3, #4]
 8006262:	60fb      	str	r3, [r7, #12]
 8006264:	687b      	ldr	r3, [r7, #4]
 8006266:	681b      	ldr	r3, [r3, #0]
 8006268:	689b      	ldr	r3, [r3, #8]
 800626a:	60bb      	str	r3, [r7, #8]
 800626c:	68fb      	ldr	r3, [r7, #12]
 800626e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8006272:	60fb      	str	r3, [r7, #12]
 8006274:	683b      	ldr	r3, [r7, #0]
 8006276:	681b      	ldr	r3, [r3, #0]
 8006278:	68fa      	ldr	r2, [r7, #12]
 800627a:	4313      	orrs	r3, r2
 800627c:	60fb      	str	r3, [r7, #12]
 800627e:	687b      	ldr	r3, [r7, #4]
 8006280:	681b      	ldr	r3, [r3, #0]
 8006282:	68fa      	ldr	r2, [r7, #12]
 8006284:	605a      	str	r2, [r3, #4]
 8006286:	687b      	ldr	r3, [r7, #4]
 8006288:	681b      	ldr	r3, [r3, #0]
 800628a:	4a21      	ldr	r2, [pc, #132]	@ (8006310 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 800628c:	4293      	cmp	r3, r2
 800628e:	d022      	beq.n	80062d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8006290:	687b      	ldr	r3, [r7, #4]
 8006292:	681b      	ldr	r3, [r3, #0]
 8006294:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8006298:	d01d      	beq.n	80062d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 800629a:	687b      	ldr	r3, [r7, #4]
 800629c:	681b      	ldr	r3, [r3, #0]
 800629e:	4a1d      	ldr	r2, [pc, #116]	@ (8006314 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 80062a0:	4293      	cmp	r3, r2
 80062a2:	d018      	beq.n	80062d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80062a4:	687b      	ldr	r3, [r7, #4]
 80062a6:	681b      	ldr	r3, [r3, #0]
 80062a8:	4a1b      	ldr	r2, [pc, #108]	@ (8006318 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 80062aa:	4293      	cmp	r3, r2
 80062ac:	d013      	beq.n	80062d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80062ae:	687b      	ldr	r3, [r7, #4]
 80062b0:	681b      	ldr	r3, [r3, #0]
 80062b2:	4a1a      	ldr	r2, [pc, #104]	@ (800631c <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 80062b4:	4293      	cmp	r3, r2
 80062b6:	d00e      	beq.n	80062d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	681b      	ldr	r3, [r3, #0]
 80062bc:	4a18      	ldr	r2, [pc, #96]	@ (8006320 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 80062be:	4293      	cmp	r3, r2
 80062c0:	d009      	beq.n	80062d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80062c2:	687b      	ldr	r3, [r7, #4]
 80062c4:	681b      	ldr	r3, [r3, #0]
 80062c6:	4a17      	ldr	r2, [pc, #92]	@ (8006324 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 80062c8:	4293      	cmp	r3, r2
 80062ca:	d004      	beq.n	80062d6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 80062cc:	687b      	ldr	r3, [r7, #4]
 80062ce:	681b      	ldr	r3, [r3, #0]
 80062d0:	4a15      	ldr	r2, [pc, #84]	@ (8006328 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 80062d2:	4293      	cmp	r3, r2
 80062d4:	d10c      	bne.n	80062f0 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
 80062d6:	68bb      	ldr	r3, [r7, #8]
 80062d8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 80062dc:	60bb      	str	r3, [r7, #8]
 80062de:	683b      	ldr	r3, [r7, #0]
 80062e0:	685b      	ldr	r3, [r3, #4]
 80062e2:	68ba      	ldr	r2, [r7, #8]
 80062e4:	4313      	orrs	r3, r2
 80062e6:	60bb      	str	r3, [r7, #8]
 80062e8:	687b      	ldr	r3, [r7, #4]
 80062ea:	681b      	ldr	r3, [r3, #0]
 80062ec:	68ba      	ldr	r2, [r7, #8]
 80062ee:	609a      	str	r2, [r3, #8]
 80062f0:	687b      	ldr	r3, [r7, #4]
 80062f2:	2201      	movs	r2, #1
 80062f4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
 80062f8:	687b      	ldr	r3, [r7, #4]
 80062fa:	2200      	movs	r2, #0
 80062fc:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
 8006300:	2300      	movs	r3, #0
 8006302:	4618      	mov	r0, r3
 8006304:	3714      	adds	r7, #20
 8006306:	46bd      	mov	sp, r7
 8006308:	f85d 7b04 	ldr.w	r7, [sp], #4
 800630c:	4770      	bx	lr
 800630e:	bf00      	nop
 8006310:	40010000 	.word	0x40010000
 8006314:	40000400 	.word	0x40000400
 8006318:	40000800 	.word	0x40000800
 800631c:	40000c00 	.word	0x40000c00
 8006320:	40010400 	.word	0x40010400
 8006324:	40014000 	.word	0x40014000
 8006328:	40001800 	.word	0x40001800

0800632c <HAL_TIMEx_CommutCallback>:
 800632c:	b480      	push	{r7}
 800632e:	b083      	sub	sp, #12
 8006330:	af00      	add	r7, sp, #0
 8006332:	6078      	str	r0, [r7, #4]
 8006334:	bf00      	nop
 8006336:	370c      	adds	r7, #12
 8006338:	46bd      	mov	sp, r7
 800633a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800633e:	4770      	bx	lr

08006340 <HAL_TIMEx_BreakCallback>:
 8006340:	b480      	push	{r7}
 8006342:	b083      	sub	sp, #12
 8006344:	af00      	add	r7, sp, #0
 8006346:	6078      	str	r0, [r7, #4]
 8006348:	bf00      	nop
 800634a:	370c      	adds	r7, #12
 800634c:	46bd      	mov	sp, r7
 800634e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006352:	4770      	bx	lr

08006354 <HAL_UART_Init>:
 8006354:	b580      	push	{r7, lr}
 8006356:	b082      	sub	sp, #8
 8006358:	af00      	add	r7, sp, #0
 800635a:	6078      	str	r0, [r7, #4]
 800635c:	687b      	ldr	r3, [r7, #4]
 800635e:	2b00      	cmp	r3, #0
 8006360:	d101      	bne.n	8006366 <HAL_UART_Init+0x12>
 8006362:	2301      	movs	r3, #1
 8006364:	e042      	b.n	80063ec <HAL_UART_Init+0x98>
 8006366:	687b      	ldr	r3, [r7, #4]
 8006368:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 800636c:	b2db      	uxtb	r3, r3
 800636e:	2b00      	cmp	r3, #0
 8006370:	d106      	bne.n	8006380 <HAL_UART_Init+0x2c>
 8006372:	687b      	ldr	r3, [r7, #4]
 8006374:	2200      	movs	r2, #0
 8006376:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 800637a:	6878      	ldr	r0, [r7, #4]
 800637c:	f7fc fafa 	bl	8002974 <HAL_UART_MspInit>
 8006380:	687b      	ldr	r3, [r7, #4]
 8006382:	2224      	movs	r2, #36	@ 0x24
 8006384:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 8006388:	687b      	ldr	r3, [r7, #4]
 800638a:	681b      	ldr	r3, [r3, #0]
 800638c:	68da      	ldr	r2, [r3, #12]
 800638e:	687b      	ldr	r3, [r7, #4]
 8006390:	681b      	ldr	r3, [r3, #0]
 8006392:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006396:	60da      	str	r2, [r3, #12]
 8006398:	6878      	ldr	r0, [r7, #4]
 800639a:	f000 f82b 	bl	80063f4 <UART_SetConfig>
 800639e:	687b      	ldr	r3, [r7, #4]
 80063a0:	681b      	ldr	r3, [r3, #0]
 80063a2:	691a      	ldr	r2, [r3, #16]
 80063a4:	687b      	ldr	r3, [r7, #4]
 80063a6:	681b      	ldr	r3, [r3, #0]
 80063a8:	f422 4290 	bic.w	r2, r2, #18432	@ 0x4800
 80063ac:	611a      	str	r2, [r3, #16]
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	681b      	ldr	r3, [r3, #0]
 80063b2:	695a      	ldr	r2, [r3, #20]
 80063b4:	687b      	ldr	r3, [r7, #4]
 80063b6:	681b      	ldr	r3, [r3, #0]
 80063b8:	f022 022a 	bic.w	r2, r2, #42	@ 0x2a
 80063bc:	615a      	str	r2, [r3, #20]
 80063be:	687b      	ldr	r3, [r7, #4]
 80063c0:	681b      	ldr	r3, [r3, #0]
 80063c2:	68da      	ldr	r2, [r3, #12]
 80063c4:	687b      	ldr	r3, [r7, #4]
 80063c6:	681b      	ldr	r3, [r3, #0]
 80063c8:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 80063cc:	60da      	str	r2, [r3, #12]
 80063ce:	687b      	ldr	r3, [r7, #4]
 80063d0:	2200      	movs	r2, #0
 80063d2:	645a      	str	r2, [r3, #68]	@ 0x44
 80063d4:	687b      	ldr	r3, [r7, #4]
 80063d6:	2220      	movs	r2, #32
 80063d8:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
 80063dc:	687b      	ldr	r3, [r7, #4]
 80063de:	2220      	movs	r2, #32
 80063e0:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80063e4:	687b      	ldr	r3, [r7, #4]
 80063e6:	2200      	movs	r2, #0
 80063e8:	635a      	str	r2, [r3, #52]	@ 0x34
 80063ea:	2300      	movs	r3, #0
 80063ec:	4618      	mov	r0, r3
 80063ee:	3708      	adds	r7, #8
 80063f0:	46bd      	mov	sp, r7
 80063f2:	bd80      	pop	{r7, pc}

080063f4 <UART_SetConfig>:
 80063f4:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 80063f8:	b0c0      	sub	sp, #256	@ 0x100
 80063fa:	af00      	add	r7, sp, #0
 80063fc:	f8c7 00f4 	str.w	r0, [r7, #244]	@ 0xf4
 8006400:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006404:	681b      	ldr	r3, [r3, #0]
 8006406:	691b      	ldr	r3, [r3, #16]
 8006408:	f423 5040 	bic.w	r0, r3, #12288	@ 0x3000
 800640c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006410:	68d9      	ldr	r1, [r3, #12]
 8006412:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006416:	681a      	ldr	r2, [r3, #0]
 8006418:	ea40 0301 	orr.w	r3, r0, r1
 800641c:	6113      	str	r3, [r2, #16]
 800641e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006422:	689a      	ldr	r2, [r3, #8]
 8006424:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006428:	691b      	ldr	r3, [r3, #16]
 800642a:	431a      	orrs	r2, r3
 800642c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006430:	695b      	ldr	r3, [r3, #20]
 8006432:	431a      	orrs	r2, r3
 8006434:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006438:	69db      	ldr	r3, [r3, #28]
 800643a:	4313      	orrs	r3, r2
 800643c:	f8c7 30f8 	str.w	r3, [r7, #248]	@ 0xf8
 8006440:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006444:	681b      	ldr	r3, [r3, #0]
 8006446:	68db      	ldr	r3, [r3, #12]
 8006448:	f423 4116 	bic.w	r1, r3, #38400	@ 0x9600
 800644c:	f021 010c 	bic.w	r1, r1, #12
 8006450:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006454:	681a      	ldr	r2, [r3, #0]
 8006456:	f8d7 30f8 	ldr.w	r3, [r7, #248]	@ 0xf8
 800645a:	430b      	orrs	r3, r1
 800645c:	60d3      	str	r3, [r2, #12]
 800645e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006462:	681b      	ldr	r3, [r3, #0]
 8006464:	695b      	ldr	r3, [r3, #20]
 8006466:	f423 7040 	bic.w	r0, r3, #768	@ 0x300
 800646a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800646e:	6999      	ldr	r1, [r3, #24]
 8006470:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006474:	681a      	ldr	r2, [r3, #0]
 8006476:	ea40 0301 	orr.w	r3, r0, r1
 800647a:	6153      	str	r3, [r2, #20]
 800647c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006480:	681a      	ldr	r2, [r3, #0]
 8006482:	4b8f      	ldr	r3, [pc, #572]	@ (80066c0 <UART_SetConfig+0x2cc>)
 8006484:	429a      	cmp	r2, r3
 8006486:	d005      	beq.n	8006494 <UART_SetConfig+0xa0>
 8006488:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 800648c:	681a      	ldr	r2, [r3, #0]
 800648e:	4b8d      	ldr	r3, [pc, #564]	@ (80066c4 <UART_SetConfig+0x2d0>)
 8006490:	429a      	cmp	r2, r3
 8006492:	d104      	bne.n	800649e <UART_SetConfig+0xaa>
 8006494:	f7fd fbea 	bl	8003c6c <HAL_RCC_GetPCLK2Freq>
 8006498:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 800649c:	e003      	b.n	80064a6 <UART_SetConfig+0xb2>
 800649e:	f7fd fbd1 	bl	8003c44 <HAL_RCC_GetPCLK1Freq>
 80064a2:	f8c7 00fc 	str.w	r0, [r7, #252]	@ 0xfc
 80064a6:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80064aa:	69db      	ldr	r3, [r3, #28]
 80064ac:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 80064b0:	f040 810c 	bne.w	80066cc <UART_SetConfig+0x2d8>
 80064b4:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80064b8:	2200      	movs	r2, #0
 80064ba:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 80064be:	f8c7 20ec 	str.w	r2, [r7, #236]	@ 0xec
 80064c2:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	@ 0xe8
 80064c6:	4622      	mov	r2, r4
 80064c8:	462b      	mov	r3, r5
 80064ca:	1891      	adds	r1, r2, r2
 80064cc:	65b9      	str	r1, [r7, #88]	@ 0x58
 80064ce:	415b      	adcs	r3, r3
 80064d0:	65fb      	str	r3, [r7, #92]	@ 0x5c
 80064d2:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 80064d6:	4621      	mov	r1, r4
 80064d8:	eb12 0801 	adds.w	r8, r2, r1
 80064dc:	4629      	mov	r1, r5
 80064de:	eb43 0901 	adc.w	r9, r3, r1
 80064e2:	f04f 0200 	mov.w	r2, #0
 80064e6:	f04f 0300 	mov.w	r3, #0
 80064ea:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80064ee:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80064f2:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80064f6:	4690      	mov	r8, r2
 80064f8:	4699      	mov	r9, r3
 80064fa:	4623      	mov	r3, r4
 80064fc:	eb18 0303 	adds.w	r3, r8, r3
 8006500:	f8c7 30e0 	str.w	r3, [r7, #224]	@ 0xe0
 8006504:	462b      	mov	r3, r5
 8006506:	eb49 0303 	adc.w	r3, r9, r3
 800650a:	f8c7 30e4 	str.w	r3, [r7, #228]	@ 0xe4
 800650e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006512:	685b      	ldr	r3, [r3, #4]
 8006514:	2200      	movs	r2, #0
 8006516:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800651a:	f8c7 20dc 	str.w	r2, [r7, #220]	@ 0xdc
 800651e:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	@ 0xd8
 8006522:	460b      	mov	r3, r1
 8006524:	18db      	adds	r3, r3, r3
 8006526:	653b      	str	r3, [r7, #80]	@ 0x50
 8006528:	4613      	mov	r3, r2
 800652a:	eb42 0303 	adc.w	r3, r2, r3
 800652e:	657b      	str	r3, [r7, #84]	@ 0x54
 8006530:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	@ 0x50
 8006534:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	@ 0xe0
 8006538:	f7fa fa7c 	bl	8000a34 <__aeabi_uldivmod>
 800653c:	4602      	mov	r2, r0
 800653e:	460b      	mov	r3, r1
 8006540:	4b61      	ldr	r3, [pc, #388]	@ (80066c8 <UART_SetConfig+0x2d4>)
 8006542:	fba3 2302 	umull	r2, r3, r3, r2
 8006546:	095b      	lsrs	r3, r3, #5
 8006548:	011c      	lsls	r4, r3, #4
 800654a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800654e:	2200      	movs	r2, #0
 8006550:	f8c7 30d0 	str.w	r3, [r7, #208]	@ 0xd0
 8006554:	f8c7 20d4 	str.w	r2, [r7, #212]	@ 0xd4
 8006558:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	@ 0xd0
 800655c:	4642      	mov	r2, r8
 800655e:	464b      	mov	r3, r9
 8006560:	1891      	adds	r1, r2, r2
 8006562:	64b9      	str	r1, [r7, #72]	@ 0x48
 8006564:	415b      	adcs	r3, r3
 8006566:	64fb      	str	r3, [r7, #76]	@ 0x4c
 8006568:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 800656c:	4641      	mov	r1, r8
 800656e:	eb12 0a01 	adds.w	sl, r2, r1
 8006572:	4649      	mov	r1, r9
 8006574:	eb43 0b01 	adc.w	fp, r3, r1
 8006578:	f04f 0200 	mov.w	r2, #0
 800657c:	f04f 0300 	mov.w	r3, #0
 8006580:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8006584:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8006588:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 800658c:	4692      	mov	sl, r2
 800658e:	469b      	mov	fp, r3
 8006590:	4643      	mov	r3, r8
 8006592:	eb1a 0303 	adds.w	r3, sl, r3
 8006596:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800659a:	464b      	mov	r3, r9
 800659c:	eb4b 0303 	adc.w	r3, fp, r3
 80065a0:	f8c7 30cc 	str.w	r3, [r7, #204]	@ 0xcc
 80065a4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80065a8:	685b      	ldr	r3, [r3, #4]
 80065aa:	2200      	movs	r2, #0
 80065ac:	f8c7 30c0 	str.w	r3, [r7, #192]	@ 0xc0
 80065b0:	f8c7 20c4 	str.w	r2, [r7, #196]	@ 0xc4
 80065b4:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	@ 0xc0
 80065b8:	460b      	mov	r3, r1
 80065ba:	18db      	adds	r3, r3, r3
 80065bc:	643b      	str	r3, [r7, #64]	@ 0x40
 80065be:	4613      	mov	r3, r2
 80065c0:	eb42 0303 	adc.w	r3, r2, r3
 80065c4:	647b      	str	r3, [r7, #68]	@ 0x44
 80065c6:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	@ 0x40
 80065ca:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	@ 0xc8
 80065ce:	f7fa fa31 	bl	8000a34 <__aeabi_uldivmod>
 80065d2:	4602      	mov	r2, r0
 80065d4:	460b      	mov	r3, r1
 80065d6:	4611      	mov	r1, r2
 80065d8:	4b3b      	ldr	r3, [pc, #236]	@ (80066c8 <UART_SetConfig+0x2d4>)
 80065da:	fba3 2301 	umull	r2, r3, r3, r1
 80065de:	095b      	lsrs	r3, r3, #5
 80065e0:	2264      	movs	r2, #100	@ 0x64
 80065e2:	fb02 f303 	mul.w	r3, r2, r3
 80065e6:	1acb      	subs	r3, r1, r3
 80065e8:	00db      	lsls	r3, r3, #3
 80065ea:	f103 0232 	add.w	r2, r3, #50	@ 0x32
 80065ee:	4b36      	ldr	r3, [pc, #216]	@ (80066c8 <UART_SetConfig+0x2d4>)
 80065f0:	fba3 2302 	umull	r2, r3, r3, r2
 80065f4:	095b      	lsrs	r3, r3, #5
 80065f6:	005b      	lsls	r3, r3, #1
 80065f8:	f403 73f8 	and.w	r3, r3, #496	@ 0x1f0
 80065fc:	441c      	add	r4, r3
 80065fe:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006602:	2200      	movs	r2, #0
 8006604:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 8006608:	f8c7 20bc 	str.w	r2, [r7, #188]	@ 0xbc
 800660c:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	@ 0xb8
 8006610:	4642      	mov	r2, r8
 8006612:	464b      	mov	r3, r9
 8006614:	1891      	adds	r1, r2, r2
 8006616:	63b9      	str	r1, [r7, #56]	@ 0x38
 8006618:	415b      	adcs	r3, r3
 800661a:	63fb      	str	r3, [r7, #60]	@ 0x3c
 800661c:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	@ 0x38
 8006620:	4641      	mov	r1, r8
 8006622:	1851      	adds	r1, r2, r1
 8006624:	6339      	str	r1, [r7, #48]	@ 0x30
 8006626:	4649      	mov	r1, r9
 8006628:	414b      	adcs	r3, r1
 800662a:	637b      	str	r3, [r7, #52]	@ 0x34
 800662c:	f04f 0200 	mov.w	r2, #0
 8006630:	f04f 0300 	mov.w	r3, #0
 8006634:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	@ 0x30
 8006638:	4659      	mov	r1, fp
 800663a:	00cb      	lsls	r3, r1, #3
 800663c:	4651      	mov	r1, sl
 800663e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006642:	4651      	mov	r1, sl
 8006644:	00ca      	lsls	r2, r1, #3
 8006646:	4610      	mov	r0, r2
 8006648:	4619      	mov	r1, r3
 800664a:	4603      	mov	r3, r0
 800664c:	4642      	mov	r2, r8
 800664e:	189b      	adds	r3, r3, r2
 8006650:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
 8006654:	464b      	mov	r3, r9
 8006656:	460a      	mov	r2, r1
 8006658:	eb42 0303 	adc.w	r3, r2, r3
 800665c:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8006660:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006664:	685b      	ldr	r3, [r3, #4]
 8006666:	2200      	movs	r2, #0
 8006668:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
 800666c:	f8c7 20ac 	str.w	r2, [r7, #172]	@ 0xac
 8006670:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	@ 0xa8
 8006674:	460b      	mov	r3, r1
 8006676:	18db      	adds	r3, r3, r3
 8006678:	62bb      	str	r3, [r7, #40]	@ 0x28
 800667a:	4613      	mov	r3, r2
 800667c:	eb42 0303 	adc.w	r3, r2, r3
 8006680:	62fb      	str	r3, [r7, #44]	@ 0x2c
 8006682:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	@ 0x28
 8006686:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	@ 0xb0
 800668a:	f7fa f9d3 	bl	8000a34 <__aeabi_uldivmod>
 800668e:	4602      	mov	r2, r0
 8006690:	460b      	mov	r3, r1
 8006692:	4b0d      	ldr	r3, [pc, #52]	@ (80066c8 <UART_SetConfig+0x2d4>)
 8006694:	fba3 1302 	umull	r1, r3, r3, r2
 8006698:	095b      	lsrs	r3, r3, #5
 800669a:	2164      	movs	r1, #100	@ 0x64
 800669c:	fb01 f303 	mul.w	r3, r1, r3
 80066a0:	1ad3      	subs	r3, r2, r3
 80066a2:	00db      	lsls	r3, r3, #3
 80066a4:	3332      	adds	r3, #50	@ 0x32
 80066a6:	4a08      	ldr	r2, [pc, #32]	@ (80066c8 <UART_SetConfig+0x2d4>)
 80066a8:	fba2 2303 	umull	r2, r3, r2, r3
 80066ac:	095b      	lsrs	r3, r3, #5
 80066ae:	f003 0207 	and.w	r2, r3, #7
 80066b2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80066b6:	681b      	ldr	r3, [r3, #0]
 80066b8:	4422      	add	r2, r4
 80066ba:	609a      	str	r2, [r3, #8]
 80066bc:	e106      	b.n	80068cc <UART_SetConfig+0x4d8>
 80066be:	bf00      	nop
 80066c0:	40011000 	.word	0x40011000
 80066c4:	40011400 	.word	0x40011400
 80066c8:	51eb851f 	.word	0x51eb851f
 80066cc:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 80066d0:	2200      	movs	r2, #0
 80066d2:	f8c7 30a0 	str.w	r3, [r7, #160]	@ 0xa0
 80066d6:	f8c7 20a4 	str.w	r2, [r7, #164]	@ 0xa4
 80066da:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	@ 0xa0
 80066de:	4642      	mov	r2, r8
 80066e0:	464b      	mov	r3, r9
 80066e2:	1891      	adds	r1, r2, r2
 80066e4:	6239      	str	r1, [r7, #32]
 80066e6:	415b      	adcs	r3, r3
 80066e8:	627b      	str	r3, [r7, #36]	@ 0x24
 80066ea:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 80066ee:	4641      	mov	r1, r8
 80066f0:	1854      	adds	r4, r2, r1
 80066f2:	4649      	mov	r1, r9
 80066f4:	eb43 0501 	adc.w	r5, r3, r1
 80066f8:	f04f 0200 	mov.w	r2, #0
 80066fc:	f04f 0300 	mov.w	r3, #0
 8006700:	00eb      	lsls	r3, r5, #3
 8006702:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8006706:	00e2      	lsls	r2, r4, #3
 8006708:	4614      	mov	r4, r2
 800670a:	461d      	mov	r5, r3
 800670c:	4643      	mov	r3, r8
 800670e:	18e3      	adds	r3, r4, r3
 8006710:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 8006714:	464b      	mov	r3, r9
 8006716:	eb45 0303 	adc.w	r3, r5, r3
 800671a:	f8c7 309c 	str.w	r3, [r7, #156]	@ 0x9c
 800671e:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006722:	685b      	ldr	r3, [r3, #4]
 8006724:	2200      	movs	r2, #0
 8006726:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800672a:	f8c7 2094 	str.w	r2, [r7, #148]	@ 0x94
 800672e:	f04f 0200 	mov.w	r2, #0
 8006732:	f04f 0300 	mov.w	r3, #0
 8006736:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 800673a:	4629      	mov	r1, r5
 800673c:	008b      	lsls	r3, r1, #2
 800673e:	4621      	mov	r1, r4
 8006740:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006744:	4621      	mov	r1, r4
 8006746:	008a      	lsls	r2, r1, #2
 8006748:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	@ 0x98
 800674c:	f7fa f972 	bl	8000a34 <__aeabi_uldivmod>
 8006750:	4602      	mov	r2, r0
 8006752:	460b      	mov	r3, r1
 8006754:	4b60      	ldr	r3, [pc, #384]	@ (80068d8 <UART_SetConfig+0x4e4>)
 8006756:	fba3 2302 	umull	r2, r3, r3, r2
 800675a:	095b      	lsrs	r3, r3, #5
 800675c:	011c      	lsls	r4, r3, #4
 800675e:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 8006762:	2200      	movs	r2, #0
 8006764:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 8006768:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 800676c:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	@ 0x88
 8006770:	4642      	mov	r2, r8
 8006772:	464b      	mov	r3, r9
 8006774:	1891      	adds	r1, r2, r2
 8006776:	61b9      	str	r1, [r7, #24]
 8006778:	415b      	adcs	r3, r3
 800677a:	61fb      	str	r3, [r7, #28]
 800677c:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8006780:	4641      	mov	r1, r8
 8006782:	1851      	adds	r1, r2, r1
 8006784:	6139      	str	r1, [r7, #16]
 8006786:	4649      	mov	r1, r9
 8006788:	414b      	adcs	r3, r1
 800678a:	617b      	str	r3, [r7, #20]
 800678c:	f04f 0200 	mov.w	r2, #0
 8006790:	f04f 0300 	mov.w	r3, #0
 8006794:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 8006798:	4659      	mov	r1, fp
 800679a:	00cb      	lsls	r3, r1, #3
 800679c:	4651      	mov	r1, sl
 800679e:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80067a2:	4651      	mov	r1, sl
 80067a4:	00ca      	lsls	r2, r1, #3
 80067a6:	4610      	mov	r0, r2
 80067a8:	4619      	mov	r1, r3
 80067aa:	4603      	mov	r3, r0
 80067ac:	4642      	mov	r2, r8
 80067ae:	189b      	adds	r3, r3, r2
 80067b0:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80067b4:	464b      	mov	r3, r9
 80067b6:	460a      	mov	r2, r1
 80067b8:	eb42 0303 	adc.w	r3, r2, r3
 80067bc:	f8c7 3084 	str.w	r3, [r7, #132]	@ 0x84
 80067c0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80067c4:	685b      	ldr	r3, [r3, #4]
 80067c6:	2200      	movs	r2, #0
 80067c8:	67bb      	str	r3, [r7, #120]	@ 0x78
 80067ca:	67fa      	str	r2, [r7, #124]	@ 0x7c
 80067cc:	f04f 0200 	mov.w	r2, #0
 80067d0:	f04f 0300 	mov.w	r3, #0
 80067d4:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	@ 0x78
 80067d8:	4649      	mov	r1, r9
 80067da:	008b      	lsls	r3, r1, #2
 80067dc:	4641      	mov	r1, r8
 80067de:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80067e2:	4641      	mov	r1, r8
 80067e4:	008a      	lsls	r2, r1, #2
 80067e6:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	@ 0x80
 80067ea:	f7fa f923 	bl	8000a34 <__aeabi_uldivmod>
 80067ee:	4602      	mov	r2, r0
 80067f0:	460b      	mov	r3, r1
 80067f2:	4611      	mov	r1, r2
 80067f4:	4b38      	ldr	r3, [pc, #224]	@ (80068d8 <UART_SetConfig+0x4e4>)
 80067f6:	fba3 2301 	umull	r2, r3, r3, r1
 80067fa:	095b      	lsrs	r3, r3, #5
 80067fc:	2264      	movs	r2, #100	@ 0x64
 80067fe:	fb02 f303 	mul.w	r3, r2, r3
 8006802:	1acb      	subs	r3, r1, r3
 8006804:	011b      	lsls	r3, r3, #4
 8006806:	3332      	adds	r3, #50	@ 0x32
 8006808:	4a33      	ldr	r2, [pc, #204]	@ (80068d8 <UART_SetConfig+0x4e4>)
 800680a:	fba2 2303 	umull	r2, r3, r2, r3
 800680e:	095b      	lsrs	r3, r3, #5
 8006810:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8006814:	441c      	add	r4, r3
 8006816:	f8d7 30fc 	ldr.w	r3, [r7, #252]	@ 0xfc
 800681a:	2200      	movs	r2, #0
 800681c:	673b      	str	r3, [r7, #112]	@ 0x70
 800681e:	677a      	str	r2, [r7, #116]	@ 0x74
 8006820:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	@ 0x70
 8006824:	4642      	mov	r2, r8
 8006826:	464b      	mov	r3, r9
 8006828:	1891      	adds	r1, r2, r2
 800682a:	60b9      	str	r1, [r7, #8]
 800682c:	415b      	adcs	r3, r3
 800682e:	60fb      	str	r3, [r7, #12]
 8006830:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 8006834:	4641      	mov	r1, r8
 8006836:	1851      	adds	r1, r2, r1
 8006838:	6039      	str	r1, [r7, #0]
 800683a:	4649      	mov	r1, r9
 800683c:	414b      	adcs	r3, r1
 800683e:	607b      	str	r3, [r7, #4]
 8006840:	f04f 0200 	mov.w	r2, #0
 8006844:	f04f 0300 	mov.w	r3, #0
 8006848:	e9d7 ab00 	ldrd	sl, fp, [r7]
 800684c:	4659      	mov	r1, fp
 800684e:	00cb      	lsls	r3, r1, #3
 8006850:	4651      	mov	r1, sl
 8006852:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8006856:	4651      	mov	r1, sl
 8006858:	00ca      	lsls	r2, r1, #3
 800685a:	4610      	mov	r0, r2
 800685c:	4619      	mov	r1, r3
 800685e:	4603      	mov	r3, r0
 8006860:	4642      	mov	r2, r8
 8006862:	189b      	adds	r3, r3, r2
 8006864:	66bb      	str	r3, [r7, #104]	@ 0x68
 8006866:	464b      	mov	r3, r9
 8006868:	460a      	mov	r2, r1
 800686a:	eb42 0303 	adc.w	r3, r2, r3
 800686e:	66fb      	str	r3, [r7, #108]	@ 0x6c
 8006870:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 8006874:	685b      	ldr	r3, [r3, #4]
 8006876:	2200      	movs	r2, #0
 8006878:	663b      	str	r3, [r7, #96]	@ 0x60
 800687a:	667a      	str	r2, [r7, #100]	@ 0x64
 800687c:	f04f 0200 	mov.w	r2, #0
 8006880:	f04f 0300 	mov.w	r3, #0
 8006884:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	@ 0x60
 8006888:	4649      	mov	r1, r9
 800688a:	008b      	lsls	r3, r1, #2
 800688c:	4641      	mov	r1, r8
 800688e:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8006892:	4641      	mov	r1, r8
 8006894:	008a      	lsls	r2, r1, #2
 8006896:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	@ 0x68
 800689a:	f7fa f8cb 	bl	8000a34 <__aeabi_uldivmod>
 800689e:	4602      	mov	r2, r0
 80068a0:	460b      	mov	r3, r1
 80068a2:	4b0d      	ldr	r3, [pc, #52]	@ (80068d8 <UART_SetConfig+0x4e4>)
 80068a4:	fba3 1302 	umull	r1, r3, r3, r2
 80068a8:	095b      	lsrs	r3, r3, #5
 80068aa:	2164      	movs	r1, #100	@ 0x64
 80068ac:	fb01 f303 	mul.w	r3, r1, r3
 80068b0:	1ad3      	subs	r3, r2, r3
 80068b2:	011b      	lsls	r3, r3, #4
 80068b4:	3332      	adds	r3, #50	@ 0x32
 80068b6:	4a08      	ldr	r2, [pc, #32]	@ (80068d8 <UART_SetConfig+0x4e4>)
 80068b8:	fba2 2303 	umull	r2, r3, r2, r3
 80068bc:	095b      	lsrs	r3, r3, #5
 80068be:	f003 020f 	and.w	r2, r3, #15
 80068c2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	@ 0xf4
 80068c6:	681b      	ldr	r3, [r3, #0]
 80068c8:	4422      	add	r2, r4
 80068ca:	609a      	str	r2, [r3, #8]
 80068cc:	bf00      	nop
 80068ce:	f507 7780 	add.w	r7, r7, #256	@ 0x100
 80068d2:	46bd      	mov	sp, r7
 80068d4:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 80068d8:	51eb851f 	.word	0x51eb851f

080068dc <memset>:
 80068dc:	4402      	add	r2, r0
 80068de:	4603      	mov	r3, r0
 80068e0:	4293      	cmp	r3, r2
 80068e2:	d100      	bne.n	80068e6 <memset+0xa>
 80068e4:	4770      	bx	lr
 80068e6:	f803 1b01 	strb.w	r1, [r3], #1
 80068ea:	e7f9      	b.n	80068e0 <memset+0x4>

080068ec <__libc_init_array>:
 80068ec:	b570      	push	{r4, r5, r6, lr}
 80068ee:	4d0d      	ldr	r5, [pc, #52]	@ (8006924 <__libc_init_array+0x38>)
 80068f0:	4c0d      	ldr	r4, [pc, #52]	@ (8006928 <__libc_init_array+0x3c>)
 80068f2:	1b64      	subs	r4, r4, r5
 80068f4:	10a4      	asrs	r4, r4, #2
 80068f6:	2600      	movs	r6, #0
 80068f8:	42a6      	cmp	r6, r4
 80068fa:	d109      	bne.n	8006910 <__libc_init_array+0x24>
 80068fc:	4d0b      	ldr	r5, [pc, #44]	@ (800692c <__libc_init_array+0x40>)
 80068fe:	4c0c      	ldr	r4, [pc, #48]	@ (8006930 <__libc_init_array+0x44>)
 8006900:	f000 f818 	bl	8006934 <_init>
 8006904:	1b64      	subs	r4, r4, r5
 8006906:	10a4      	asrs	r4, r4, #2
 8006908:	2600      	movs	r6, #0
 800690a:	42a6      	cmp	r6, r4
 800690c:	d105      	bne.n	800691a <__libc_init_array+0x2e>
 800690e:	bd70      	pop	{r4, r5, r6, pc}
 8006910:	f855 3b04 	ldr.w	r3, [r5], #4
 8006914:	4798      	blx	r3
 8006916:	3601      	adds	r6, #1
 8006918:	e7ee      	b.n	80068f8 <__libc_init_array+0xc>
 800691a:	f855 3b04 	ldr.w	r3, [r5], #4
 800691e:	4798      	blx	r3
 8006920:	3601      	adds	r6, #1
 8006922:	e7f2      	b.n	800690a <__libc_init_array+0x1e>
 8006924:	08006fbc 	.word	0x08006fbc
 8006928:	08006fbc 	.word	0x08006fbc
 800692c:	08006fbc 	.word	0x08006fbc
 8006930:	08006fc0 	.word	0x08006fc0

08006934 <_init>:
 8006934:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006936:	bf00      	nop
 8006938:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800693a:	bc08      	pop	{r3}
 800693c:	469e      	mov	lr, r3
 800693e:	4770      	bx	lr

08006940 <_fini>:
 8006940:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006942:	bf00      	nop
 8006944:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8006946:	bc08      	pop	{r3}
 8006948:	469e      	mov	lr, r3
 800694a:	4770      	bx	lr
